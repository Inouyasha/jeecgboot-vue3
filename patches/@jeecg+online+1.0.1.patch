diff --git a/node_modules/@jeecg/online/FormSchemaFactory.js b/node_modules/@jeecg/online/FormSchemaFactory.js
index 48636b1..3405edd 100644
--- a/node_modules/@jeecg/online/FormSchemaFactory.js
+++ b/node_modules/@jeecg/online/FormSchemaFactory.js
@@ -2,15 +2,12 @@ var __defProp = Object.defineProperty;
 var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) => (key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : (obj[key] = value));
 var __spreadValues = (a, b) => {
-  for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -30,27 +27,149 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) => (x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected));
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
-import { UploadTypeEnum } from "/@/components/Form/src/jeecg/components/JUpload";
-const SUBMIT_FLOW_KEY = "jeecg_submit_form_and_flow";
-const SUBMIT_FLOW_ID = "flow_submit_id";
-const VALIDATE_FAILED = "validate-failed";
-const SETUP = "setup";
-const ENHANCEJS = "EnhanceJS";
+import { UploadTypeEnum } from '/@/components/Form/src/jeecg/components/JUpload';
+const SUBMIT_FLOW_KEY = 'jeecg_submit_form_and_flow';
+const SUBMIT_FLOW_ID = 'flow_submit_id';
+const VALIDATE_FAILED = 'validate-failed';
+const SETUP = 'setup';
+const ENHANCEJS = 'EnhanceJS';
 const FORM_VIEW_TO_QUERY_VIEW = {
-  "password": "text",
-  "file": "text",
-  "image": "text",
-  "textarea": "text",
-  "umeditor": "text",
-  "markdown": "text",
-  "checkbox": "list_multi",
-  "radio": "list"
+  password: 'text',
+  file: 'text',
+  image: 'text',
+  textarea: 'text',
+  umeditor: 'text',
+  markdown: 'text',
+  checkbox: 'list_multi',
+  radio: 'list',
 };
-const POP_CONTAINER = ".jeecg-online-modal .ant-modal-content";
+const POP_CONTAINER = '.jeecg-online-modal .ant-modal-content';
+function debounce(func, wait, options = null) {
+  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;
+
+  // 参数初始化
+  let lastInvokeTime = 0; // func 上一次执行的时间
+  let leading = false;
+  let maxing = false;
+  let trailing = true;
+
+  // 基本的类型判断和处理
+  if (typeof func != 'function') {
+    throw new TypeError('Expected a function');
+  }
+  wait = +wait || 0;
+  // if (isObject(options)) {
+  //     // 对配置的一些初始化
+  // }
+
+  function invokeFunc(time) {
+    const args = lastArgs;
+    const thisArg = lastThis;
+
+    lastArgs = lastThis = undefined;
+    lastInvokeTime = time;
+    result = func.apply(thisArg, args);
+    return result;
+  }
+
+  function leadingEdge(time) {
+    // Reset any `maxWait` timer.
+    lastInvokeTime = time;
+    // 为 trailing edge 触发函数调用设定定时器
+    timerId = setTimeout(timerExpired, wait);
+    // leading = true 执行函数
+    return leading ? invokeFunc(time) : result;
+  }
+
+  function remainingWait(time) {
+    const timeSinceLastCall = time - lastCallTime; // 距离上次debounced函数被调用的时间
+    const timeSinceLastInvoke = time - lastInvokeTime; // 距离上次函数被执行的时间
+    const timeWaiting = wait - timeSinceLastCall; // 用 wait 减去 timeSinceLastCall 计算出下一次trailing的位置
+
+    // 两种情况
+    // 有maxing:比较出下一次maxing和下一次trailing的最小值，作为下一次函数要执行的时间
+    // 无maxing：在下一次trailing时执行 timerExpired
+    return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
+  }
+
+  // 根据时间判断 func 能否被执行
+  function shouldInvoke(time) {
+    const timeSinceLastCall = time - lastCallTime;
+    const timeSinceLastInvoke = time - lastInvokeTime;
+
+    // 几种满足条件的情况
+    return (
+      lastCallTime === undefined || //首次
+      timeSinceLastCall >= wait || // 距离上次被调用已经超过 wait
+      timeSinceLastCall < 0 || //系统时间倒退
+      (maxing && timeSinceLastInvoke >= maxWait)
+    ); //超过最大等待时间
+  }
+
+  function timerExpired() {
+    const time = Date.now();
+    // 在 trailing edge 且时间符合条件时，调用 trailingEdge函数，否则重启定时器
+    if (shouldInvoke(time)) {
+      return trailingEdge(time);
+    }
+    // 重启定时器，保证下一次时延的末尾触发
+    timerId = setTimeout(timerExpired, remainingWait(time));
+  }
+
+  function trailingEdge(time) {
+    timerId = undefined;
+
+    // 有lastArgs才执行，意味着只有 func 已经被 debounced 过一次以后才会在 trailing edge 执行
+    if (trailing && lastArgs) {
+      return invokeFunc(time);
+    }
+    // 每次 trailingEdge 都会清除 lastArgs 和 lastThis，目的是避免最后一次函数被执行了两次
+    // 举个例子：最后一次函数执行的时候，可能恰巧是前一次的 trailing edge，函数被调用，而这个函数又需要在自己时延的 trailing edge 触发，导致触发多次
+    lastArgs = lastThis = undefined;
+    return result;
+  }
+
+  function cancel() {}
+
+  function flush() {}
+
+  function pending() {}
+
+  function debounced(...args) {
+    const time = Date.now();
+    const isInvoking = shouldInvoke(time); //是否满足时间条件
+
+    lastArgs = args;
+    lastThis = this;
+    lastCallTime = time; //函数被调用的时间
+
+    if (isInvoking) {
+      if (timerId === undefined) {
+        // 无timerId的情况有两种：1.首次调用 2.trailingEdge执行过函数
+        return leadingEdge(lastCallTime);
+      }
+      if (maxing) {
+        // Handle invocations in a tight loop.
+        timerId = setTimeout(timerExpired, wait);
+        return invokeFunc(lastCallTime);
+      }
+    }
+    // 负责一种case：trailing 为 true 的情况下，在前一个 wait 的 trailingEdge 已经执行了函数；
+    // 而这次函数被调用时 shouldInvoke 不满足条件，因此要设置定时器，在本次的 trailingEdge 保证函数被执行
+    if (timerId === undefined) {
+      timerId = setTimeout(timerExpired, wait);
+    }
+    return result;
+  }
+  debounced.cancel = cancel;
+  debounced.flush = flush;
+  debounced.pending = pending;
+  return debounced;
+}
 class IFormSchema {
   constructor(key, data) {
     this._data = data;
@@ -59,13 +178,13 @@ class IFormSchema {
     this.hidden = false;
     this.order = data.order || 999;
     this.required = false;
-    this.onlyValidator = "";
-    this.setFieldsValue = "";
+    this.onlyValidator = '';
+    this.setFieldsValue = '';
     this.hasChange = true;
-    if (key.indexOf("@") > 0) {
-      this.pre = key.substring(0, key.indexOf("@") + 1);
+    if (key.indexOf('@') > 0) {
+      this.pre = key.substring(0, key.indexOf('@') + 1);
     } else {
-      this.pre = "";
+      this.pre = '';
     }
     this.schemaProp = {};
     this.searchForm = false;
@@ -81,14 +200,14 @@ class IFormSchema {
     let fs = {
       field: this.field,
       label: this.label,
-      component: "Input"
+      component: 'Input',
     };
     let rules = this.getRule();
     if (rules.length > 0 && this.onlyValidator) {
-      fs["rules"] = rules;
+      fs['rules'] = rules;
     }
     if (this.hidden === true) {
-      fs["show"] = false;
+      fs['show'] = false;
     }
     return fs;
   }
@@ -111,7 +230,7 @@ class IFormSchema {
     let extend = {};
     let { fieldExtendJson } = this._data;
     if (fieldExtendJson) {
-      if (typeof fieldExtendJson == "string") {
+      if (typeof fieldExtendJson == 'string') {
         try {
           let json = JSON.parse(fieldExtendJson);
           extend = __spreadValues({}, json);
@@ -126,18 +245,19 @@ class IFormSchema {
     return [];
   }
   getPlaceholder() {
-    return "\u8BF7\u8F93\u5165" + this.label;
+    return '\u8BF7\u8F93\u5165' + this.label;
   }
   setOnlyValidateFun(validateFun) {
     if (validateFun) {
-      this.onlyValidator = (rule, value) => __async(this, null, function* () {
-        let error = yield validateFun(rule, value);
-        if (!error) {
-          return Promise.resolve();
-        } else {
-          return Promise.reject(error);
-        }
-      });
+      this.onlyValidator = (rule, value) =>
+        __async(this, null, function* () {
+          let error = yield validateFun(rule, value);
+          if (!error) {
+            return Promise.resolve();
+          } else {
+            return Promise.reject(error);
+          }
+        });
     }
   }
   getRule() {
@@ -148,36 +268,35 @@ class IFormSchema {
       if (errorInfo) {
         msg = errorInfo;
       }
-      if (view == "sel_depart" || view == "sel_user") {
-        this.schemaProp["required"] = true;
+      if (view == 'sel_depart' || view == 'sel_user') {
+        this.schemaProp['required'] = true;
       } else {
         rules.push({ required: true, message: msg });
       }
     }
-    if (view == "sel_user") {
-      if (pattern === "only" && this.onlyValidator) {
+    if (view == 'sel_user') {
+      if (pattern === 'only' && this.onlyValidator) {
         rules.push({ validator: this.onlyValidator });
       }
     }
-    if (view === "list" || view === "radio" || view === "markdown" || view === "pca" || view.indexOf("sel") >= 0 || view === "time") {
+    if (view === 'list' || view === 'radio' || view === 'markdown' || view === 'pca' || view.indexOf('sel') >= 0 || view === 'time') {
       return rules;
     }
-    if (view.indexOf("upload") >= 0 || view.indexOf("file") >= 0 || view.indexOf("image") >= 0) {
+    if (view.indexOf('upload') >= 0 || view.indexOf('file') >= 0 || view.indexOf('image') >= 0) {
       return rules;
     }
     if (pattern) {
-      if (pattern === "only") {
+      if (pattern === 'only') {
         if (this.onlyValidator) {
           rules.push({ validator: this.onlyValidator });
         }
-      } else if (pattern === "z") {
-        if (type == "number" || type == "integer")
-          ;
+      } else if (pattern === 'z') {
+        if (type == 'number' || type == 'integer');
         else {
-          rules.push({ pattern: /^-?\d+$/, message: "\u8BF7\u8F93\u5165\u6574\u6570" });
+          rules.push({ pattern: /^-?\d+$/, message: '\u8BF7\u8F93\u5165\u6574\u6570' });
         }
       } else {
-        let msg = errorInfo || "\u6B63\u5219\u8868\u8FBE\u5F0F\u4E0D\u6B63\u786E";
+        let msg = errorInfo || '\u6B63\u5219\u8868\u8FBE\u5F0F\u4E0D\u6B63\u786E';
         rules.push({ pattern, message: msg });
       }
     }
@@ -191,16 +310,16 @@ class IFormSchema {
       if (this.disabled == true) {
         schema.componentProps.disabled = true;
       }
-      if (!schema.componentProps.hasOwnProperty("onChange")) {
-        schema.componentProps["onChange"] = (value) => {
+      if (!schema.componentProps.hasOwnProperty('onChange')) {
+        schema.componentProps['onChange'] = (value) => {
           if (value instanceof Event) {
             value = value.target.value;
           }
           if (value instanceof Array) {
-            value = value.join(",");
+            value = value.join(',');
           }
           if (!this.formRef.value.$formValueChange) {
-            console.log("\u5F53\u524D\u8868\u5355\u65E0\u6CD5\u89E6\u53D1change\u4E8B\u4EF6,field\uFF1A" + this.field);
+            console.log('\u5F53\u524D\u8868\u5355\u65E0\u6CD5\u89E6\u53D1change\u4E8B\u4EF6,field\uFF1A' + this.field);
           } else {
             this.formRef.value.$formValueChange(this.field, value);
           }
@@ -231,7 +350,7 @@ class IFormSchema {
   }
   getPopContainer() {
     if (this.searchForm === true) {
-      return "body";
+      return 'body';
     } else {
       return POP_CONTAINER;
     }
@@ -250,58 +369,92 @@ class InputWidget extends IFormSchema {
   getItem() {
     let item = super.getItem();
     if (this.hidden === true) {
-      item["show"] = false;
+      item['show'] = false;
     }
     return item;
   }
 }
 var DateFormat = /* @__PURE__ */ ((DateFormat2) => {
-  DateFormat2["datetime"] = "YYYY-MM-DD HH:mm:ss";
-  DateFormat2["date"] = "YYYY-MM-DD";
+  DateFormat2['datetime'] = 'YYYY-MM-DD HH:mm:ss';
+  DateFormat2['date'] = 'YYYY-MM-DD';
   return DateFormat2;
 })(DateFormat || {});
 class DateWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
     this.format = DateFormat[data.view];
-    this.showTime = data.view == "date" ? false : true;
+    this.showTime = data.view == 'date' ? false : true;
   }
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "DatePicker",
+      component: 'DatePicker',
       componentProps: {
         placeholder: `\u8BF7\u9009\u62E9${this.label}`,
         showTime: this.showTime,
         valueFormat: this.format,
         style: {
-          width: "100%"
-        }
-      }
+          width: '100%',
+        },
+      },
     });
   }
 }
 class SelectWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
-    this.options = this.getOptions(data["enum"]);
+    this.options = this.getOptions(data['enum']);
+    this.allOptions = [...this.options];
   }
+
+  // yg
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "Select",
+      component: 'Select',
       componentProps: {
         options: this.options,
-        allowClear: true,
+        // 会导致bug
+        allowClear: false,
+        showSearch: true,
+        defaultActiveFirstOption: false,
         style: {
-          width: "100%"
+          width: '100%',
+        },
+        showArrow: false,
+        filterOption: false,
+        notFoundContent: null,
+        onSearch: debounce((val) => {
+          if (typeof val === 'undefined') {
+            val = '';
+          }
+          this.options = this.allOptions.filter((option) => {
+            return option.value.indexOf(val) !== -1 || option.label.indexOf(val) !== -1;
+          });
+          // 如果没有搜索到 则当前数据作为select的唯一数据
+          if (this.options.length === 0) {
+            this.options = [{ value: val, label: val }];
+          }
+          // 获取当前schema
+          const currSchema = this.getFormItemSchema();
+          currSchema.componentProps.options = [...this.options];
+
+          this.formRef.value.updateSchema(currSchema).then();
+        }, 120),
+        onChange: (value) => {
+          // this.formRef.value.$formValueChange(this.field, value);
+        },
+        onSelect: (value, option) => {
+          this.formRef.value.$formValueChange(this.field, value);
         },
+
         getPopupContainer: (_node) => {
           return this.getModalAsContainer();
-        }
-      }
+        },
+      },
     });
   }
+  // 获取全部option
   getOptions(array) {
     if (!array || array.length == 0) {
       return [];
@@ -310,7 +463,7 @@ class SelectWidget extends IFormSchema {
     for (let item of array) {
       arr.push({
         value: item.value,
-        label: item.title
+        label: item.title,
       });
     }
     return arr;
@@ -320,7 +473,7 @@ class PasswordWidget extends IFormSchema {
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "InputPassword"
+      component: 'InputPassword',
     });
   }
 }
@@ -329,15 +482,15 @@ class FileWidget extends IFormSchema {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JUpload",
-      componentProps
+      component: 'JUpload',
+      componentProps,
     });
   }
   getComponentProps() {
     let json = this.getExtendData();
     if (json && json.uploadnum) {
       return {
-        maxCount: Number(json.uploadnum)
+        maxCount: Number(json.uploadnum),
       };
     }
     return {};
@@ -348,17 +501,17 @@ class ImageWidget extends IFormSchema {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JUpload",
-      componentProps
+      component: 'JUpload',
+      componentProps,
     });
   }
   getComponentProps() {
     let props = {
-      fileType: UploadTypeEnum.image
+      fileType: UploadTypeEnum.image,
     };
     let json = this.getExtendData();
     if (json && json.uploadnum) {
-      props["maxCount"] = Number(json.uploadnum);
+      props['maxCount'] = Number(json.uploadnum);
     }
     return props;
   }
@@ -367,23 +520,23 @@ class TextAreaWidget extends IFormSchema {
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "InputTextArea"
+      component: 'InputTextArea',
     });
   }
 }
 class SelectMultiWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
-    this.dictTable = data["dictTable"];
-    this.dictText = data["dictText"];
-    this.dictCode = data["dictCode"];
+    this.dictTable = data['dictTable'];
+    this.dictText = data['dictText'];
+    this.dictCode = data['dictCode'];
   }
   getItem() {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JSelectMultiple",
-      componentProps
+      component: 'JSelectMultiple',
+      componentProps,
     });
   }
   getComponentProps() {
@@ -392,13 +545,13 @@ class SelectMultiWidget extends IFormSchema {
     } else {
       let props = {};
       if (!this.dictTable) {
-        props["dictCode"] = this.dictCode;
+        props['dictCode'] = this.dictCode;
       } else {
         let temp = `${this.dictTable},${this.dictText},${this.dictCode}`;
-        props["dictCode"] = encodeURI(temp);
+        props['dictCode'] = encodeURI(temp);
       }
-      props["triggerChange"] = true;
-      props["popContainer"] = this.getPopContainer();
+      props['triggerChange'] = true;
+      props['popContainer'] = this.getPopContainer();
       return props;
     }
   }
@@ -412,41 +565,41 @@ class SelectSearchWidget extends IFormSchema {
     let item = super.getItem();
     let popContainer = this.getPopContainer();
     return Object.assign({}, item, {
-      component: "JSearchSelect",
+      component: 'JSearchSelect',
       componentProps: {
         dict: this.dict,
         pageSize: 6,
         async: true,
-        popContainer
-      }
+        popContainer,
+      },
     });
   }
 }
 class PopupWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
-    this.code = data["code"];
-    this.multi = data["popupMulti"];
+    this.code = data['code'];
+    this.multi = data['popupMulti'];
     this.fieldConfig = this.getFieldConfig(data);
   }
   getItem() {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JPopup",
-      componentProps
+      component: 'JPopup',
+      componentProps,
     });
   }
   getComponentProps() {
     let props = {
       code: this.code,
       multi: this.multi,
-      fieldConfig: this.fieldConfig
+      fieldConfig: this.fieldConfig,
     };
     if (this.formRef) {
-      props["formElRef"] = this.formRef;
+      props['formElRef'] = this.formRef;
     } else {
-      props["setFieldsValue"] = this.setFieldsValue;
+      props['setFieldsValue'] = this.setFieldsValue;
     }
     return props;
   }
@@ -455,52 +608,58 @@ class PopupWidget extends IFormSchema {
     if (!destFields || destFields.length == 0) {
       return [];
     }
-    let arr1 = destFields.split(",");
-    let arr2 = orgFields.split(",");
+    let arr1 = destFields.split(',');
+    let arr2 = orgFields.split(',');
     let config = [];
     const pre = this.pre;
     for (let i = 0; i < arr1.length; i++) {
       config.push({
         target: pre + arr1[i],
-        source: arr2[i]
+        source: arr2[i],
       });
     }
     return config;
   }
 }
+// yg 级联选择
 class TreeCategoryWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
+
+    // 新增字段 辨别是否是query
+    this.isDictQuery = 'isDictQuery' in data;
     this.multi = false;
-    this.pid = data["pidValue"];
-    this.textField = data["textField"];
+    this.pid = data['pidValue'];
+    this.textField = data['textField'];
   }
   getItem() {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
       componentProps,
-      component: "JCategorySelect"
+      component: 'JCategorySelect',
     });
   }
   getComponentProps() {
-    let pidValue = this.pid || "EMPTY_PID";
+    let pidValue = this.pid || 'EMPTY_PID';
     if (!this.textField) {
       return {
         multiple: this.multi,
-        pid: pidValue
+        pid: pidValue,
+        isDictQuery: this.isDictQuery,
       };
     } else {
       return {
         loadTriggleChange: true,
         multiple: this.multi,
         pid: pidValue,
+        isDictQuery: this.isDictQuery,
         back: this.textField,
         onChange: (_val, backVal) => {
           if (this.formRef) {
             this.formRef.value.setFieldsValue(backVal);
           }
-        }
+        },
       };
     }
   }
@@ -517,24 +676,24 @@ class SelectDepartWidget extends IFormSchema {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JSelectDept",
-      componentProps
+      component: 'JSelectDept',
+      componentProps,
     });
   }
   getComponentProps() {
     let extend = this.getExtendData();
     let props = {
       checkStrictly: true,
-      showButton: false
+      showButton: false,
     };
     if (extend.text) {
-      props["labelKey"] = extend.text;
+      props['labelKey'] = extend.text;
     }
     if (extend.store) {
-      props["rowKey"] = extend.store;
+      props['rowKey'] = extend.store;
     }
     if (extend.multiSelect === false) {
-      props["multiple"] = false;
+      props['multiple'] = false;
     }
     return props;
   }
@@ -544,8 +703,8 @@ class SelectUserWidget extends IFormSchema {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JSelectUser",
-      componentProps
+      component: 'JSelectUser',
+      componentProps,
     });
   }
   getComponentProps() {
@@ -553,16 +712,16 @@ class SelectUserWidget extends IFormSchema {
     let props = {
       showSelected: false,
       allowClear: true,
-      isRadioSelection: false
+      isRadioSelection: false,
     };
     if (extend.text) {
-      props["labelKey"] = extend.text;
+      props['labelKey'] = extend.text;
     }
     if (extend.store) {
-      props["rowKey"] = extend.store;
+      props['rowKey'] = extend.store;
     }
     if (extend.multiSelect === false) {
-      props["isRadioSelection"] = true;
+      props['isRadioSelection'] = true;
     }
     return props;
   }
@@ -571,8 +730,8 @@ class EditorWidget extends IFormSchema {
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "JEditor",
-      componentProps: {}
+      component: 'JEditor',
+      componentProps: {},
     });
   }
 }
@@ -580,8 +739,8 @@ class MarkdownWidget extends IFormSchema {
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "JMarkdownEditor",
-      componentProps: {}
+      component: 'JMarkdownEditor',
+      componentProps: {},
     });
   }
 }
@@ -589,42 +748,42 @@ class PcaWidget extends IFormSchema {
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "JAreaSelect"
+      component: 'JAreaSelect',
     });
   }
 }
 class TreeSelectWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
-    this.dict = data["dict"];
-    this.pidField = data["pidField"];
-    this.pidValue = data["pidValue"];
+    this.dict = data['dict'];
+    this.pidField = data['pidField'];
+    this.pidValue = data['pidValue'];
   }
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "JTreeSelect",
+      component: 'JTreeSelect',
       componentProps: {
         dict: this.dict,
         pidField: this.pidField,
-        pidValue: this.pidValue
-      }
+        pidValue: this.pidValue,
+      },
     });
   }
 }
 class RadioWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
-    this.dictTable = data["dictTable"];
-    this.dictText = data["dictText"];
-    this.dictCode = data["dictCode"];
+    this.dictTable = data['dictTable'];
+    this.dictText = data['dictText'];
+    this.dictCode = data['dictCode'];
   }
   getItem() {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JDictSelectTag",
-      componentProps
+      component: 'JDictSelectTag',
+      componentProps,
     });
   }
   getComponentProps() {
@@ -634,13 +793,13 @@ class RadioWidget extends IFormSchema {
       if (!this.dictTable) {
         return {
           dictCode: this.dictCode,
-          type: "radio"
+          type: 'radio',
         };
       } else {
         let temp = `${this.dictTable},${this.dictText},${this.dictCode}`;
         return {
           dictCode: encodeURI(temp),
-          type: "radio"
+          type: 'radio',
         };
       }
     }
@@ -649,16 +808,16 @@ class RadioWidget extends IFormSchema {
 class CheckboxWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
-    this.options = this.getOptions(data["enum"]);
+    this.options = this.getOptions(data['enum']);
   }
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "JCheckbox",
+      component: 'JCheckbox',
       componentProps: {
         options: this.options,
-        triggerChange: true
-      }
+        triggerChange: true,
+      },
     });
   }
   getOptions(array) {
@@ -669,7 +828,7 @@ class CheckboxWidget extends IFormSchema {
     for (let item of array) {
       arr.push({
         value: item.value,
-        label: item.title
+        label: item.title,
       });
     }
     return arr;
@@ -684,15 +843,15 @@ class SwitchWidget extends IFormSchema {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "JSwitch",
-      componentProps
+      component: 'JSwitch',
+      componentProps,
     });
   }
   getComponentProps() {
     let { fieldExtendJson } = this._data;
-    let options = ["Y", "N"];
+    let options = ['Y', 'N'];
     if (fieldExtendJson) {
-      if (typeof fieldExtendJson == "string") {
+      if (typeof fieldExtendJson == 'string') {
         let arr = JSON.parse(fieldExtendJson);
         if (arr.length == 2) {
           options = arr;
@@ -700,7 +859,7 @@ class SwitchWidget extends IFormSchema {
       }
     }
     return {
-      options
+      options,
     };
   }
 }
@@ -708,17 +867,17 @@ class TimeWidget extends IFormSchema {
   getItem() {
     let item = super.getItem();
     return Object.assign({}, item, {
-      component: "TimePicker",
+      component: 'TimePicker',
       componentProps: {
         placeholder: `\u8BF7\u9009\u62E9${this.label}`,
-        valueFormat: "HH:mm:ss",
+        valueFormat: 'HH:mm:ss',
         getPopupContainer: (_node) => {
           return this.getModalAsContainer();
         },
         style: {
-          width: "100%"
-        }
-      }
+          width: '100%',
+        },
+      },
     });
   }
 }
@@ -734,15 +893,15 @@ class LinkDownWidget extends IFormSchema {
     this.origin = origin;
     this.condition = condition;
     this.options = [];
-    this.next = data.next || "";
+    this.next = data.next || '';
     this.type = data.type;
   }
   getItem() {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "OnlineSelectCascade",
-      componentProps
+      component: 'OnlineSelectCascade',
+      componentProps,
     });
   }
   getComponentProps() {
@@ -753,28 +912,28 @@ class LinkDownWidget extends IFormSchema {
       pidField: this.pidField,
       idField: this.idField,
       origin: this.origin,
-      pidValue: "-1",
+      pidValue: '-1',
       style: {
-        width: "100%"
+        width: '100%',
       },
       onChange: (value) => {
-        console.log("\u7EA7\u8054\u7EC4\u4EF6-onChange", value);
+        console.log('\u7EA7\u8054\u7EC4\u4EF6-onChange', value);
         this.valueChange(value);
       },
       onNext: (pidValue) => {
-        console.log("\u7EA7\u8054\u7EC4\u4EF6-onNext", pidValue);
+        console.log('\u7EA7\u8054\u7EC4\u4EF6-onNext', pidValue);
         this.nextOptionsChange(pidValue);
-      }
+      },
     };
     if (this._data.origin === true) {
-      baseProp["condition"] = this.condition;
+      baseProp['condition'] = this.condition;
     }
     return baseProp;
   }
   nextOptionsChange(pidValue) {
     return __async(this, null, function* () {
       if (!this.formRef) {
-        console.error("\u8868\u5355\u5F15\u7528\u627E\u4E0D\u5230");
+        console.error('\u8868\u5355\u5F15\u7528\u627E\u4E0D\u5230');
         return;
       }
       if (!this.next) {
@@ -784,15 +943,15 @@ class LinkDownWidget extends IFormSchema {
       yield ref.updateSchema({
         field: this.next,
         componentProps: {
-          pidValue
-        }
+          pidValue,
+        },
       });
     });
   }
   valueChange(value) {
     return __async(this, null, function* () {
       if (!this.formRef) {
-        console.error("\u8868\u5355\u5F15\u7528\u627E\u4E0D\u5230");
+        console.error('\u8868\u5355\u5F15\u7528\u627E\u4E0D\u5230');
         return;
       }
       if (!this.next) {
@@ -800,14 +959,14 @@ class LinkDownWidget extends IFormSchema {
       }
       let ref = this.formRef.value;
       ref.$formValueChange(this.field, value);
-      yield ref.setFieldsValue({ [this.next]: "" });
+      yield ref.setFieldsValue({ [this.next]: '' });
     });
   }
 }
 class SlotWidget extends IFormSchema {
   constructor(key, data) {
     super(key, data);
-    this.slot = "";
+    this.slot = '';
   }
   getItem() {
     let item = super.getItem();
@@ -815,15 +974,15 @@ class SlotWidget extends IFormSchema {
     return Object.assign({}, item, { slot });
   }
   groupDate() {
-    this.slot = "groupDate";
+    this.slot = 'groupDate';
     return this;
   }
   groupDatetime() {
-    this.slot = "groupDatetime";
+    this.slot = 'groupDatetime';
     return this;
   }
   groupNumber() {
-    this.slot = "groupNumber";
+    this.slot = 'groupNumber';
     return this;
   }
 }
@@ -836,18 +995,18 @@ class NumberWidget extends IFormSchema {
     let item = super.getItem();
     let componentProps = this.getComponentProps();
     return Object.assign({}, item, {
-      component: "InputNumber",
-      componentProps
+      component: 'InputNumber',
+      componentProps,
     });
   }
   getComponentProps() {
     const props = {
       style: {
-        width: "100%"
-      }
+        width: '100%',
+      },
     };
     if (this.dbPointLength >= 0) {
-      props["precision"] = this.dbPointLength;
+      props['precision'] = this.dbPointLength;
     }
     return props;
   }
@@ -856,55 +1015,55 @@ class FormSchemaFactory {
   static createFormSchema(key, data) {
     let view = data.view;
     switch (view) {
-      case "password":
+      case 'password':
         return new PasswordWidget(key, data);
-      case "list":
+      case 'list':
         return new SelectWidget(key, data);
-      case "radio":
+      case 'radio':
         return new RadioWidget(key, data);
-      case "checkbox":
+      case 'checkbox':
         return new CheckboxWidget(key, data);
-      case "date":
-      case "datetime":
+      case 'date':
+      case 'datetime':
         return new DateWidget(key, data);
-      case "time":
+      case 'time':
         return new TimeWidget(key, data);
-      case "file":
+      case 'file':
         return new FileWidget(key, data);
-      case "image":
+      case 'image':
         return new ImageWidget(key, data);
-      case "textarea":
+      case 'textarea':
         return new TextAreaWidget(key, data);
-      case "list_multi":
+      case 'list_multi':
         return new SelectMultiWidget(key, data);
-      case "sel_search":
+      case 'sel_search':
         return new SelectSearchWidget(key, data);
-      case "popup":
+      case 'popup':
         return new PopupWidget(key, data);
-      case "cat_tree":
+      case 'cat_tree':
         return new TreeCategoryWidget(key, data);
-      case "sel_depart":
+      case 'sel_depart':
         return new SelectDepartWidget(key, data);
-      case "sel_user":
+      case 'sel_user':
         return new SelectUserWidget(key, data);
-      case "umeditor":
+      case 'umeditor':
         return new EditorWidget(key, data);
-      case "markdown":
+      case 'markdown':
         return new MarkdownWidget(key, data);
-      case "pca":
+      case 'pca':
         return new PcaWidget(key, data);
-      case "link_down":
+      case 'link_down':
         return new LinkDownWidget(key, data);
-      case "sel_tree":
+      case 'sel_tree':
         return new TreeSelectWidget(key, data);
-      case "switch":
+      case 'switch':
         return new SwitchWidget(key, data);
-      case "slot":
+      case 'slot':
         return new SlotWidget(key, data);
-      case "hidden":
+      case 'hidden':
         return new InputWidget(key, data).isHidden();
       default:
-        if (data.type == "number") {
+        if (data.type == 'number') {
           return new NumberWidget(key, data);
         } else {
           return new InputWidget(key, data);
@@ -914,13 +1073,13 @@ class FormSchemaFactory {
   static createSlotFormSchema(key, data) {
     let slotFs = new SlotWidget(key, data);
     let view = data.view;
-    if (view == "date") {
+    if (view == 'date') {
       slotFs.groupDate();
-    } else if (view == "datetime") {
+    } else if (view == 'datetime') {
       slotFs.groupDatetime();
     } else {
       let type = data.type;
-      if (type == "number" || type == "integer") {
+      if (type == 'number' || type == 'integer') {
         slotFs.groupNumber();
       }
     }
@@ -928,10 +1087,10 @@ class FormSchemaFactory {
   }
   static createIdField() {
     return {
-      label: "",
-      field: "id",
-      component: "Input",
-      show: false
+      label: '',
+      field: 'id',
+      component: 'Input',
+      show: false,
     };
   }
 }
diff --git a/node_modules/@jeecg/online/OnlineAutoList.js b/node_modules/@jeecg/online/OnlineAutoList.js
index 454118f..5b9c54a 100644
--- a/node_modules/@jeecg/online/OnlineAutoList.js
+++ b/node_modules/@jeecg/online/OnlineAutoList.js
@@ -14,56 +14,78 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) => (x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected));
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
-import { BasicTable, TableAction } from "/@/components/Table";
-import { useMessage } from "/@/hooks/web/useMessage";
-import OnlineAutoModal from "./OnlineAutoModal.js";
-import OnlineCustomModal from "./OnlineCustomModal.js";
-import { watch, resolveComponent, openBlock, createElementBlock, createVNode, normalizeClass, withCtx, createBlock, createCommentVNode, Fragment, renderList, createTextVNode, toDisplayString, withDirectives, vShow, createElementVNode, mergeProps, toHandlers, resolveDynamicComponent, normalizeProps, guardReactiveProps } from "vue";
-import JImportModal from "/@/components/Form/src/jeecg/components/JImportModal.vue";
-import { u as useOnlineTableContext, a as useListButton, b as useTableColumns } from "./useTableColumns.js";
-import { u as useEnhance } from "./OnlineForm.js";
-import OnlineQueryForm from "./OnlineQueryForm.js";
-import OnlineSuperQuery from "./OnlineSuperQuery.js";
-import { _ as _export_sfc } from "./index.js";
-import "/@/components/Modal";
-import "/@/utils/http/axios";
-import "./useAutoForm.js";
-import "./FormSchemaFactory.js";
-import "/@/components/Form/src/jeecg/components/JUpload";
-import "/@/views/system/user/user.api";
-import "/@/store/modules/user";
-import "/@/utils";
-import "/@/utils/desform/customExpression";
-import "/@/components/Form/src/componentMap";
-import "./OnlineSelectCascade.js";
-import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
-import "vue-router";
-import "/@/utils/common/compUtils";
-import "/@/utils/cache";
-import "/@/hooks/core/onMountedOrActivated";
-import "ant-design-vue";
-import "/@/hooks/system/useMethods";
-import "./pick.js";
-import "./isArray.js";
-import "./toString.js";
-import "./_arrayPush.js";
-import "/@/utils/dict/JDictSelectUtil";
-import "/@/components/Form/src/utils/Area";
-import "/@/components/Preview/index";
-import "/@/components/Form/index";
-import "/@/components/Loading";
-import "./OnlineSubForm.js";
-import "./OnlineSuperQueryValComponent.vue_vue_type_script_lang.js";
-import "/@/components/Form/src/helper";
-import "/@/utils/is";
-import "@ant-design/icons-vue";
-var OnlineAutoList_vue_vue_type_style_index_0_lang = "";
+import { BasicTable, TableAction } from '/@/components/Table';
+import { useMessage } from '/@/hooks/web/useMessage';
+import OnlineAutoModal from './OnlineAutoModal.js';
+import OnlineCustomModal from './OnlineCustomModal.js';
+import {
+  watch,
+  resolveComponent,
+  openBlock,
+  createElementBlock,
+  createVNode,
+  normalizeClass,
+  withCtx,
+  createBlock,
+  createCommentVNode,
+  Fragment,
+  renderList,
+  createTextVNode,
+  toDisplayString,
+  withDirectives,
+  vShow,
+  createElementVNode,
+  mergeProps,
+  toHandlers,
+  resolveDynamicComponent,
+  normalizeProps,
+  guardReactiveProps,
+} from 'vue';
+import JImportModal from '/@/components/Form/src/jeecg/components/JImportModal.vue';
+import { u as useOnlineTableContext, a as useListButton, b as useTableColumns } from './useTableColumns.js';
+import { u as useEnhance } from './OnlineForm.js';
+import OnlineQueryForm from './OnlineQueryForm.js';
+import OnlineSuperQuery from './OnlineSuperQuery.js';
+import { _ as _export_sfc } from './index.js';
+import '/@/components/Modal';
+import '/@/utils/http/axios';
+import './useAutoForm.js';
+import './FormSchemaFactory.js';
+import '/@/components/Form/src/jeecg/components/JUpload';
+import '/@/views/system/user/user.api';
+import '/@/store/modules/user';
+import '/@/utils';
+import '/@/utils/desform/customExpression';
+import '/@/components/Form/src/componentMap';
+import './OnlineSelectCascade.js';
+import '/@/components/jeecg/OnLine/JPopupOnlReport.vue';
+import 'vue-router';
+import '/@/utils/common/compUtils';
+import '/@/utils/cache';
+import '/@/hooks/core/onMountedOrActivated';
+import 'ant-design-vue';
+import '/@/hooks/system/useMethods';
+import './pick.js';
+import './isArray.js';
+import './toString.js';
+import './_arrayPush.js';
+import '/@/utils/dict/JDictSelectUtil';
+import '/@/components/Form/src/utils/Area';
+import '/@/components/Preview/index';
+import '/@/components/Form/index';
+import '/@/components/Loading';
+import './OnlineSubForm.js';
+import './OnlineSuperQueryValComponent.vue_vue_type_script_lang.js';
+import '/@/components/Form/src/helper';
+import '/@/utils/is';
+import '@ant-design/icons-vue';
+var OnlineAutoList_vue_vue_type_style_index_0_lang = '';
 const _sfc_main = {
-  name: "DefaultOnlineList",
+  name: 'DefaultOnlineList',
   components: {
     BasicTable,
     TableAction,
@@ -71,7 +93,7 @@ const _sfc_main = {
     JImportModal,
     OnlineQueryForm,
     OnlineSuperQuery,
-    OnlineCustomModal
+    OnlineCustomModal,
   },
   setup() {
     const { createMessage: $message } = useMessage();
@@ -90,10 +112,10 @@ const _sfc_main = {
       superQueryButtonRef,
       superQueryStatus,
       handleSuperQuery,
-      registerCustomModal
+      registerCustomModal,
     } = useOnlineTableContext();
     if (!ID.value) {
-      $message.warning("\u5730\u5740\u9519\u8BEF, \u914D\u7F6EID\u4E0D\u5B58\u5728!");
+      $message.warning('\u5730\u5740\u9519\u8BEF, \u914D\u7F6EID\u4E0D\u5B58\u5728!');
       return;
     }
     let { initCgEnhanceJs } = useEnhance(onlineTableContext);
@@ -109,6 +131,7 @@ const _sfc_main = {
       registerImportModal,
       onImportExcel,
       onExportExcel,
+      onExportEmptyExcel,
       cgButtonJsHandler,
       cgButtonActionHandler,
       cgButtonLinkHandler,
@@ -116,7 +139,7 @@ const _sfc_main = {
       getDropDownActions,
       getActions,
       initButtonList,
-      initButtonSwitch
+      initButtonSwitch,
     } = useListButton(onlineTableContext);
     const {
       columns,
@@ -131,32 +154,54 @@ const _sfc_main = {
       getFormatDate,
       handleColumnResult,
       hrefComponent,
-      viewOnlineCellImage
+      viewOnlineCellImage,
     } = useTableColumns(onlineTableContext);
-    watch(ID, () => {
-      console.log("watched id is change...");
-      initAutoList();
-    }, { immediate: true });
+    watch(
+      ID,
+      () => {
+        console.log('watched id is change...');
+        initAutoList();
+      },
+      { immediate: true }
+    );
     function initAutoList() {
       return __async(this, null, function* () {
         loading.value = true;
-        let columnResult = yield getColumnList();
-        handleTableConfig(columnResult);
-        yield loadData();
+
+        // 读取localStrorage数据
+        const storage = window.localStorage;
+        const queryFormData = storage.getItem('query_form_data');
+
+        // yg更新初始化列表的逻辑 增加一次性的localStroage的检查
+        if (queryFormData !== null) {
+          onlineTableContext['queryParam'] = JSON.parse(queryFormData);
+          // 重置
+          storage.setItem('query_form_data', null);
+
+          // 重复写了下 这里是为了第一时间抹除storage的痕迹 减少bug
+          let columnResult = yield getColumnList();
+          handleTableConfig(columnResult);
+          yield reload();
+        } else {
+          let columnResult = yield getColumnList();
+          handleTableConfig(columnResult);
+          yield loadData();
+        }
+
         loading.value = false;
-        onlineTableContext.execButtonEnhance("setup");
+        onlineTableContext.execButtonEnhance('setup');
       });
     }
     function handleTableConfig(result) {
       let EnhanceJS = initCgEnhanceJs(result.enhanceJs);
-      onlineTableContext["EnhanceJS"] = EnhanceJS;
+      onlineTableContext['EnhanceJS'] = EnhanceJS;
       initButtonList(result.cgButtonList);
       initButtonSwitch(result.hideColumns);
       handleColumnResult(result);
       handleSpecialConfig(result);
     }
     function queryWithCondition(data) {
-      onlineTableContext["queryParam"] = data;
+      onlineTableContext['queryParam'] = data;
       reload();
     }
     function onQueryFormLoaded(json) {
@@ -186,6 +231,7 @@ const _sfc_main = {
       handleEdit,
       onImportExcel,
       onExportExcel,
+      onExportEmptyExcel,
       cgTopButtonList,
       cgLinkButtonList,
       cgButtonJsHandler,
@@ -204,207 +250,355 @@ const _sfc_main = {
       importUrl,
       handleSubmitFlow,
       hrefComponent,
-      viewOnlineCellImage
+      viewOnlineCellImage,
     };
     return that;
-  }
+  },
 };
-const _hoisted_1 = { class: "p-2" };
-const _hoisted_2 = /* @__PURE__ */ createTextVNode("\u65B0\u589E");
-const _hoisted_3 = /* @__PURE__ */ createTextVNode("\u5BFC\u5165");
-const _hoisted_4 = /* @__PURE__ */ createTextVNode(" \u5BFC\u51FA");
-const _hoisted_5 = /* @__PURE__ */ createTextVNode(" \u6279\u91CF\u5220\u9664");
+const _hoisted_1 = { class: 'p-2' };
+const _hoisted_2 = /* @__PURE__ */ createTextVNode('\u65B0\u589E');
+const _hoisted_3 = /* @__PURE__ */ createTextVNode('\u5BFC\u5165');
+const _hoisted_4 = /* @__PURE__ */ createTextVNode(' \u5BFC\u51FA');
+// yg 空导出按钮
+const _hoisted_add_1 = /* @__PURE__ */ createTextVNode(' \u7a7a\u5bfc\u51fa');
+const _hoisted_5 = /* @__PURE__ */ createTextVNode(' \u6279\u91CF\u5220\u9664');
 const _hoisted_6 = {
   key: 0,
-  style: { "font-size": "12px", "font-style": "italic" }
+  style: { 'font-size': '12px', 'font-style': 'italic' },
 };
-const _hoisted_7 = /* @__PURE__ */ createTextVNode(" \u4E0B\u8F7D ");
+const _hoisted_7 = /* @__PURE__ */ createTextVNode(' \u4E0B\u8F7D ');
 const _hoisted_8 = {
   key: 0,
-  style: { "font-size": "12px", "font-style": "italic" }
+  style: { 'font-size': '12px', 'font-style': 'italic' },
 };
-const _hoisted_9 = ["src", "onClick"];
-const _hoisted_10 = ["innerHTML"];
-const _hoisted_11 = ["title"];
+const _hoisted_9 = ['src', 'onClick'];
+const _hoisted_10 = ['innerHTML'];
+const _hoisted_11 = ['title'];
 function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
-  const _component_online_query_form = resolveComponent("online-query-form");
-  const _component_a_button = resolveComponent("a-button");
-  const _component_online_super_query = resolveComponent("online-super-query");
-  const _component_TableAction = resolveComponent("TableAction");
-  const _component_BasicTable = resolveComponent("BasicTable");
-  const _component_OnlineAutoModal = resolveComponent("OnlineAutoModal");
-  const _component_JImportModal = resolveComponent("JImportModal");
-  const _component_a_modal = resolveComponent("a-modal");
-  const _component_online_custom_modal = resolveComponent("online-custom-modal");
-  return openBlock(), createElementBlock("div", _hoisted_1, [
-    createVNode(_component_online_query_form, {
-      ref: "onlineQueryFormOuter",
-      id: _ctx.ID,
-      onSearch: _ctx.queryWithCondition,
-      onLoaded: _ctx.onQueryFormLoaded
-    }, null, 8, ["id", "onSearch", "onLoaded"]),
-    createVNode(_component_BasicTable, {
-      ref: "onlineTable",
-      rowKey: "jeecg_row_key",
-      canResize: true,
-      bordered: true,
-      showIndexColumn: false,
-      loading: _ctx.loading,
-      columns: _ctx.columns,
-      dataSource: _ctx.dataSource,
-      pagination: _ctx.pagination,
-      rowSelection: _ctx.rowSelection,
-      actionColumn: _ctx.actionColumn,
-      showTableSetting: true,
-      clickToRowSelect: false,
-      scroll: _ctx.tableScroll,
-      onTableRedo: _ctx.reload,
-      class: normalizeClass({ "j-table-force-nowrap": _ctx.enableScrollBar }),
-      onChange: _ctx.handleChangeInTable
-    }, {
-      tableTitle: withCtx(() => [
-        _ctx.buttonSwitch.add ? (openBlock(), createBlock(_component_a_button, {
-          key: 0,
-          preIcon: "ant-design:plus-outlined",
-          type: "primary",
-          onClick: _ctx.handleAdd
-        }, {
-          default: withCtx(() => [
-            _hoisted_2
+  const _component_online_query_form = resolveComponent('online-query-form');
+  const _component_a_button = resolveComponent('a-button');
+  const _component_online_super_query = resolveComponent('online-super-query');
+  const _component_TableAction = resolveComponent('TableAction');
+  const _component_BasicTable = resolveComponent('BasicTable');
+  const _component_OnlineAutoModal = resolveComponent('OnlineAutoModal');
+  const _component_JImportModal = resolveComponent('JImportModal');
+  const _component_a_modal = resolveComponent('a-modal');
+  const _component_online_custom_modal = resolveComponent('online-custom-modal');
+  return (
+    openBlock(),
+    createElementBlock('div', _hoisted_1, [
+      createVNode(
+        _component_online_query_form,
+        {
+          ref: 'onlineQueryFormOuter',
+          id: _ctx.ID,
+          onSearch: _ctx.queryWithCondition,
+          onLoaded: _ctx.onQueryFormLoaded,
+        },
+        null,
+        8,
+        ['id', 'onSearch', 'onLoaded']
+      ),
+      createVNode(
+        _component_BasicTable,
+        {
+          ref: 'onlineTable',
+          rowKey: 'jeecg_row_key',
+          canResize: true,
+          bordered: true,
+          showIndexColumn: false,
+          loading: _ctx.loading,
+          columns: _ctx.columns,
+          dataSource: _ctx.dataSource,
+          pagination: _ctx.pagination,
+          rowSelection: _ctx.rowSelection,
+          actionColumn: _ctx.actionColumn,
+          showTableSetting: true,
+          clickToRowSelect: false,
+          scroll: _ctx.tableScroll,
+          onTableRedo: _ctx.reload,
+          class: normalizeClass({ 'j-table-force-nowrap': _ctx.enableScrollBar }),
+          onChange: _ctx.handleChangeInTable,
+        },
+        {
+          tableTitle: withCtx(() => [
+            _ctx.buttonSwitch.add
+              ? (openBlock(),
+                createBlock(
+                  _component_a_button,
+                  {
+                    key: 0,
+                    preIcon: 'ant-design:plus-outlined',
+                    type: 'primary',
+                    onClick: _ctx.handleAdd,
+                  },
+                  {
+                    default: withCtx(() => [_hoisted_2]),
+                    _: 1,
+                  },
+                  8,
+                  ['onClick']
+                ))
+              : createCommentVNode('', true),
+            _ctx.buttonSwitch.import
+              ? (openBlock(),
+                createBlock(
+                  _component_a_button,
+                  {
+                    key: 1,
+                    preIcon: 'ant-design:import-outlined',
+                    type: 'primary',
+                    onClick: _ctx.onImportExcel,
+                  },
+                  {
+                    default: withCtx(() => [_hoisted_3]),
+                    _: 1,
+                  },
+                  8,
+                  ['onClick']
+                ))
+              : createCommentVNode('', true),
+            _ctx.buttonSwitch.export
+              ? (openBlock(),
+                createBlock(
+                  _component_a_button,
+                  {
+                    key: 2,
+                    preIcon: 'ant-design:export-outlined',
+                    type: 'primary',
+                    onClick: _ctx.onExportExcel,
+                  },
+                  {
+                    default: withCtx(() => [_hoisted_4]),
+                    _: 1,
+                  },
+                  8,
+                  ['onClick']
+                ))
+              : createCommentVNode('', true),
+            _ctx.buttonSwitch.export
+              ? (openBlock(),
+                createBlock(
+                  _component_a_button,
+                  {
+                    key: 2,
+                    preIcon: 'ant-design:export-outlined',
+                    type: 'primary',
+                    onClick: _ctx.onExportEmptyExcel,
+                  },
+                  {
+                    default: withCtx(() => [_hoisted_add_1]),
+                    _: 1,
+                  },
+                  8,
+                  ['onClick']
+                ))
+              : createCommentVNode('', true),
+            _ctx.cgTopButtonList && _ctx.cgTopButtonList.length > 0
+              ? (openBlock(true),
+                createElementBlock(
+                  Fragment,
+                  { key: 3 },
+                  renderList(_ctx.cgTopButtonList, (item, index) => {
+                    return (
+                      openBlock(),
+                      createElementBlock(
+                        Fragment,
+                        null,
+                        [
+                          item.optType == 'js'
+                            ? (openBlock(),
+                              createBlock(
+                                _component_a_button,
+                                {
+                                  key: 'cgbtn' + index,
+                                  onClick: ($event) => _ctx.cgButtonJsHandler(item.buttonCode),
+                                  type: 'primary',
+                                  preIcon: item.buttonIcon ? 'ant-design:' + item.buttonIcon : '',
+                                },
+                                {
+                                  default: withCtx(() => [createTextVNode(toDisplayString(item.buttonName), 1)]),
+                                  _: 2,
+                                },
+                                1032,
+                                ['onClick', 'preIcon']
+                              ))
+                            : item.optType == 'action'
+                            ? (openBlock(),
+                              createBlock(
+                                _component_a_button,
+                                {
+                                  key: 'cgbtn' + index,
+                                  onClick: ($event) => _ctx.cgButtonActionHandler(item.buttonCode),
+                                  type: 'primary',
+                                  preIcon: item.buttonIcon ? 'ant-design:' + item.buttonIcon : '',
+                                },
+                                {
+                                  default: withCtx(() => [createTextVNode(toDisplayString(item.buttonName), 1)]),
+                                  _: 2,
+                                },
+                                1032,
+                                ['onClick', 'preIcon']
+                              ))
+                            : createCommentVNode('', true),
+                        ],
+                        64
+                      )
+                    );
+                  }),
+                  256
+                ))
+              : createCommentVNode('', true),
+            _ctx.buttonSwitch.batch_delete
+              ? withDirectives(
+                  (openBlock(),
+                  createBlock(
+                    _component_a_button,
+                    {
+                      key: 4,
+                      preIcon: 'ant-design:delete-outlined',
+                      onClick: _ctx.handleBatchDelete,
+                    },
+                    {
+                      default: withCtx(() => [_hoisted_5]),
+                      _: 1,
+                    },
+                    8,
+                    ['onClick']
+                  )),
+                  [[vShow, _ctx.selectedKeys.length > 0]]
+                )
+              : createCommentVNode('', true),
+            _ctx.buttonSwitch.super_query
+              ? (openBlock(),
+                createBlock(
+                  _component_online_super_query,
+                  {
+                    key: 5,
+                    ref: 'superQueryButtonRef',
+                    status: _ctx.superQueryStatus,
+                    onSearch: _ctx.handleSuperQuery,
+                  },
+                  null,
+                  8,
+                  ['status', 'onSearch']
+                ))
+              : createCommentVNode('', true),
           ]),
-          _: 1
-        }, 8, ["onClick"])) : createCommentVNode("", true),
-        _ctx.buttonSwitch.import ? (openBlock(), createBlock(_component_a_button, {
-          key: 1,
-          preIcon: "ant-design:import-outlined",
-          type: "primary",
-          onClick: _ctx.onImportExcel
-        }, {
-          default: withCtx(() => [
-            _hoisted_3
+          fileSlot: withCtx(({ text }) => [
+            !text
+              ? (openBlock(), createElementBlock('span', _hoisted_6, '\u65E0\u6587\u4EF6'))
+              : (openBlock(),
+                createBlock(
+                  _component_a_button,
+                  {
+                    key: 1,
+                    ghost: true,
+                    type: 'primary',
+                    preIcon: 'ant-design:download',
+                    size: 'small',
+                    onClick: ($event) => _ctx.downloadRowFile(text),
+                  },
+                  {
+                    default: withCtx(() => [_hoisted_7]),
+                    _: 2,
+                  },
+                  1032,
+                  ['onClick']
+                )),
           ]),
-          _: 1
-        }, 8, ["onClick"])) : createCommentVNode("", true),
-        _ctx.buttonSwitch.export ? (openBlock(), createBlock(_component_a_button, {
-          key: 2,
-          preIcon: "ant-design:export-outlined",
-          type: "primary",
-          onClick: _ctx.onExportExcel
-        }, {
-          default: withCtx(() => [
-            _hoisted_4
+          imgSlot: withCtx(({ text }) => [
+            !text
+              ? (openBlock(), createElementBlock('span', _hoisted_8, '\u65E0\u56FE\u7247'))
+              : (openBlock(),
+                createElementBlock(
+                  'img',
+                  {
+                    key: 1,
+                    src: _ctx.getImgView(text),
+                    alt: '\u56FE\u7247\u4E0D\u5B58\u5728',
+                    class: 'online-cell-image',
+                    onClick: ($event) => _ctx.viewOnlineCellImage(text),
+                  },
+                  null,
+                  8,
+                  _hoisted_9
+                )),
           ]),
-          _: 1
-        }, 8, ["onClick"])) : createCommentVNode("", true),
-        _ctx.cgTopButtonList && _ctx.cgTopButtonList.length > 0 ? (openBlock(true), createElementBlock(Fragment, { key: 3 }, renderList(_ctx.cgTopButtonList, (item, index) => {
-          return openBlock(), createElementBlock(Fragment, null, [
-            item.optType == "js" ? (openBlock(), createBlock(_component_a_button, {
-              key: "cgbtn" + index,
-              onClick: ($event) => _ctx.cgButtonJsHandler(item.buttonCode),
-              type: "primary",
-              preIcon: item.buttonIcon ? "ant-design:" + item.buttonIcon : ""
-            }, {
-              default: withCtx(() => [
-                createTextVNode(toDisplayString(item.buttonName), 1)
-              ]),
-              _: 2
-            }, 1032, ["onClick", "preIcon"])) : item.optType == "action" ? (openBlock(), createBlock(_component_a_button, {
-              key: "cgbtn" + index,
-              onClick: ($event) => _ctx.cgButtonActionHandler(item.buttonCode),
-              type: "primary",
-              preIcon: item.buttonIcon ? "ant-design:" + item.buttonIcon : ""
-            }, {
-              default: withCtx(() => [
-                createTextVNode(toDisplayString(item.buttonName), 1)
-              ]),
-              _: 2
-            }, 1032, ["onClick", "preIcon"])) : createCommentVNode("", true)
-          ], 64);
-        }), 256)) : createCommentVNode("", true),
-        _ctx.buttonSwitch.batch_delete ? withDirectives((openBlock(), createBlock(_component_a_button, {
-          key: 4,
-          preIcon: "ant-design:delete-outlined",
-          onClick: _ctx.handleBatchDelete
-        }, {
-          default: withCtx(() => [
-            _hoisted_5
+          htmlSlot: withCtx(({ text }) => [createElementVNode('div', { innerHTML: text }, null, 8, _hoisted_10)]),
+          pcaSlot: withCtx(({ text }) => [
+            createElementVNode(
+              'div',
+              {
+                title: _ctx.getPcaText(text),
+              },
+              toDisplayString(_ctx.getPcaText(text)),
+              9,
+              _hoisted_11
+            ),
           ]),
-          _: 1
-        }, 8, ["onClick"])), [
-          [vShow, _ctx.selectedKeys.length > 0]
-        ]) : createCommentVNode("", true),
-        _ctx.buttonSwitch.super_query ? (openBlock(), createBlock(_component_online_super_query, {
-          key: 5,
-          ref: "superQueryButtonRef",
-          status: _ctx.superQueryStatus,
-          onSearch: _ctx.handleSuperQuery
-        }, null, 8, ["status", "onSearch"])) : createCommentVNode("", true)
-      ]),
-      fileSlot: withCtx(({ text }) => [
-        !text ? (openBlock(), createElementBlock("span", _hoisted_6, "\u65E0\u6587\u4EF6")) : (openBlock(), createBlock(_component_a_button, {
-          key: 1,
-          ghost: true,
-          type: "primary",
-          preIcon: "ant-design:download",
-          size: "small",
-          onClick: ($event) => _ctx.downloadRowFile(text)
-        }, {
-          default: withCtx(() => [
-            _hoisted_7
+          dateSlot: withCtx(({ text }) => [createElementVNode('span', null, toDisplayString(_ctx.getFormatDate(text)), 1)]),
+          action: withCtx(({ record }) => [
+            createVNode(
+              _component_TableAction,
+              {
+                actions: _ctx.getActions(record),
+                dropDownActions: _ctx.getDropDownActions(record),
+              },
+              null,
+              8,
+              ['actions', 'dropDownActions']
+            ),
           ]),
-          _: 2
-        }, 1032, ["onClick"]))
-      ]),
-      imgSlot: withCtx(({ text }) => [
-        !text ? (openBlock(), createElementBlock("span", _hoisted_8, "\u65E0\u56FE\u7247")) : (openBlock(), createElementBlock("img", {
-          key: 1,
-          src: _ctx.getImgView(text),
-          alt: "\u56FE\u7247\u4E0D\u5B58\u5728",
-          class: "online-cell-image",
-          onClick: ($event) => _ctx.viewOnlineCellImage(text)
-        }, null, 8, _hoisted_9))
-      ]),
-      htmlSlot: withCtx(({ text }) => [
-        createElementVNode("div", { innerHTML: text }, null, 8, _hoisted_10)
-      ]),
-      pcaSlot: withCtx(({ text }) => [
-        createElementVNode("div", {
-          title: _ctx.getPcaText(text)
-        }, toDisplayString(_ctx.getPcaText(text)), 9, _hoisted_11)
-      ]),
-      dateSlot: withCtx(({ text }) => [
-        createElementVNode("span", null, toDisplayString(_ctx.getFormatDate(text)), 1)
-      ]),
-      action: withCtx(({ record }) => [
-        createVNode(_component_TableAction, {
-          actions: _ctx.getActions(record),
-          dropDownActions: _ctx.getDropDownActions(record)
-        }, null, 8, ["actions", "dropDownActions"])
-      ]),
-      _: 1
-    }, 8, ["loading", "columns", "dataSource", "pagination", "rowSelection", "actionColumn", "scroll", "onTableRedo", "class", "onChange"]),
-    createVNode(_component_OnlineAutoModal, {
-      id: _ctx.ID,
-      onRegister: _ctx.registerModal,
-      onSuccess: _ctx.reload
-    }, null, 8, ["id", "onRegister", "onSuccess"]),
-    createVNode(_component_JImportModal, {
-      onRegister: _ctx.registerImportModal,
-      url: _ctx.importUrl(),
-      onOk: _ctx.reload,
-      online: ""
-    }, null, 8, ["onRegister", "url", "onOk"]),
-    createVNode(_component_a_modal, mergeProps(_ctx.hrefComponent.model, toHandlers(_ctx.hrefComponent.on)), {
-      default: withCtx(() => [
-        (openBlock(), createBlock(resolveDynamicComponent(_ctx.hrefComponent.is), normalizeProps(guardReactiveProps(_ctx.hrefComponent.params)), null, 16))
-      ]),
-      _: 1
-    }, 16),
-    createVNode(_component_online_custom_modal, {
-      onRegister: _ctx.registerCustomModal,
-      onSuccess: _ctx.reload
-    }, null, 8, ["onRegister", "onSuccess"])
-  ]);
+          _: 1,
+        },
+        8,
+        ['loading', 'columns', 'dataSource', 'pagination', 'rowSelection', 'actionColumn', 'scroll', 'onTableRedo', 'class', 'onChange']
+      ),
+      createVNode(
+        _component_OnlineAutoModal,
+        {
+          id: _ctx.ID,
+          onRegister: _ctx.registerModal,
+          onSuccess: _ctx.reload,
+        },
+        null,
+        8,
+        ['id', 'onRegister', 'onSuccess']
+      ),
+      createVNode(
+        _component_JImportModal,
+        {
+          onRegister: _ctx.registerImportModal,
+          url: _ctx.importUrl(),
+          onOk: _ctx.reload,
+          online: '',
+        },
+        null,
+        8,
+        ['onRegister', 'url', 'onOk']
+      ),
+      createVNode(
+        _component_a_modal,
+        mergeProps(_ctx.hrefComponent.model, toHandlers(_ctx.hrefComponent.on)),
+        {
+          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.hrefComponent.is), normalizeProps(guardReactiveProps(_ctx.hrefComponent.params)), null, 16))]),
+          _: 1,
+        },
+        16
+      ),
+      createVNode(
+        _component_online_custom_modal,
+        {
+          onRegister: _ctx.registerCustomModal,
+          onSuccess: _ctx.reload,
+        },
+        null,
+        8,
+        ['onRegister', 'onSuccess']
+      ),
+    ])
+  );
 }
-var OnlineAutoList = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
+var OnlineAutoList = /* @__PURE__ */ _export_sfc(_sfc_main, [['render', _sfc_render]]);
 export { OnlineAutoList as default };
diff --git a/node_modules/@jeecg/online/OnlineAutoModal.js b/node_modules/@jeecg/online/OnlineAutoModal.js
index 3ad6a16..57f9497 100644
--- a/node_modules/@jeecg/online/OnlineAutoModal.js
+++ b/node_modules/@jeecg/online/OnlineAutoModal.js
@@ -96,6 +96,7 @@ const _sfc_main = defineComponent({
       }
     }
     watch(() => props.id, renderFormItems, { immediate: true });
+    // yg 表单渲染第一步
     function renderFormItems() {
       return __async(this, null, function* () {
         formRendered.value = false;
diff --git a/node_modules/@jeecg/online/OnlineQueryForm.js b/node_modules/@jeecg/online/OnlineQueryForm.js
index f0a63ff..33bffe2 100644
--- a/node_modules/@jeecg/online/OnlineQueryForm.js
+++ b/node_modules/@jeecg/online/OnlineQueryForm.js
@@ -2,15 +2,12 @@ var __defProp = Object.defineProperty;
 var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) => (key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : (obj[key] = value));
 var __spreadValues = (a, b) => {
-  for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -30,42 +27,58 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) => (x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected));
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
-import { BasicForm, useForm } from "/@/components/Form/index";
-import { ref, reactive, watch, toRaw, resolveComponent, openBlock, createElementBlock, createVNode, withCtx, createElementVNode, createTextVNode, toDisplayString, createCommentVNode, pushScopeId, popScopeId } from "vue";
-import { defHttp } from "/@/utils/http/axios";
-import { useMessage } from "/@/hooks/web/useMessage";
-import { b as FORM_VIEW_TO_QUERY_VIEW, F as FormSchemaFactory } from "./FormSchemaFactory.js";
-import { g as getRefPromise, b as loadOneFieldDefVal, L as LINK_DOWN, h as handleLinkDown, c as getFieldIndex } from "./useAutoForm.js";
-import { _ as _export_sfc } from "./index.js";
-import "/@/components/Form/src/jeecg/components/JUpload";
-import "/@/views/system/user/user.api";
-import "/@/store/modules/user";
-import "/@/utils";
-import "/@/utils/desform/customExpression";
-import "/@/components/Form/src/componentMap";
-import "./OnlineSelectCascade.js";
-import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
-import "vue-router";
-var OnlineQueryForm_vue_vue_type_style_index_0_scoped_true_lang = "";
+import { BasicForm, useForm } from '/@/components/Form/index';
+import {
+  ref,
+  reactive,
+  watch,
+  toRaw,
+  resolveComponent,
+  openBlock,
+  createElementBlock,
+  createVNode,
+  withCtx,
+  createElementVNode,
+  createTextVNode,
+  toDisplayString,
+  createCommentVNode,
+  pushScopeId,
+  popScopeId,
+} from 'vue';
+import { defHttp } from '/@/utils/http/axios';
+import { useMessage } from '/@/hooks/web/useMessage';
+import { b as FORM_VIEW_TO_QUERY_VIEW, F as FormSchemaFactory } from './FormSchemaFactory.js';
+import { g as getRefPromise, b as loadOneFieldDefVal, L as LINK_DOWN, h as handleLinkDown, c as getFieldIndex } from './useAutoForm.js';
+import { _ as _export_sfc } from './index.js';
+import '/@/components/Form/src/jeecg/components/JUpload';
+import '/@/views/system/user/user.api';
+import '/@/store/modules/user';
+import '/@/utils';
+import '/@/utils/desform/customExpression';
+import '/@/components/Form/src/componentMap';
+import './OnlineSelectCascade.js';
+import '/@/components/jeecg/OnLine/JPopupOnlReport.vue';
+import 'vue-router';
+var OnlineQueryForm_vue_vue_type_style_index_0_scoped_true_lang = '';
 const _sfc_main = {
-  name: "OnlineQueryForm",
+  name: 'OnlineQueryForm',
   components: {
-    BasicForm
+    BasicForm,
   },
   props: {
     id: {
       type: String,
-      default: ""
-    }
+      default: '',
+    },
   },
-  emits: ["search", "loaded"],
+  emits: ['search', 'loaded'],
   setup(props, { emit }) {
     const { createMessage: $message } = useMessage();
-    const LOAD_URL = "/online/cgform/api/getQueryInfoVue3/";
+    const LOAD_URL = '/online/cgform/api/getQueryInfoVue3/';
     const onlineQueryFormRef = ref(null);
     const formSchemas = ref([]);
     const baseColProps = ref({ sm: 24, md: 8 });
@@ -77,14 +90,19 @@ const _sfc_main = {
       config: {},
       cache: {},
       param: {},
-      status: false
+      status: false,
     });
-    watch(() => defaultValues.status, (val) => __async(this, null, function* () {
-      console.log("-------------defaultValues\u53D1\u751F\u6539\u53D8,\u9700\u8981\u91CD\u7F6E\u8868\u5355---------------");
-      const { config, cache, param } = toRaw(defaultValues);
-      let rawValues = Object.assign({}, config, cache, param);
-      yield customSetFieldsValue(rawValues);
-    }), { immediate: true, deep: true });
+    watch(
+      () => defaultValues.status,
+      (val) =>
+        __async(this, null, function* () {
+          console.log('-------------defaultValues\u53D1\u751F\u6539\u53D8,\u9700\u8981\u91CD\u7F6E\u8868\u5355---------------');
+          const { config, cache, param } = toRaw(defaultValues);
+          let rawValues = Object.assign({}, config, cache, param);
+          yield customSetFieldsValue(rawValues);
+        }),
+      { immediate: true, deep: true }
+    );
     function initDefaultValues(cache, param) {
       return __async(this, null, function* () {
         defaultValues.cache = __spreadValues({}, cache);
@@ -92,13 +110,17 @@ const _sfc_main = {
         defaultValues.status = !defaultValues.status;
       });
     }
-    watch(() => props.id, (val) => {
-      if (val) {
-        resetForm();
-      } else {
-        formSchemas.value = [];
-      }
-    }, { immediate: true });
+    watch(
+      () => props.id,
+      (val) => {
+        if (val) {
+          resetForm();
+        } else {
+          formSchemas.value = [];
+        }
+      },
+      { immediate: true }
+    );
     function initSchemas(formProperties) {
       return __async(this, null, function* () {
         let arr = [];
@@ -111,7 +133,7 @@ const _sfc_main = {
             item.view = FORM_VIEW_TO_QUERY_VIEW[view];
           }
           yield loadOneFieldDefVal(key, item, configValue);
-          if (item.mode == "group" && (view == "date" || view == "datetime" || view == "number")) {
+          if (item.mode == 'group' && (view == 'date' || view == 'datetime' || view == 'number')) {
             let temp = FormSchemaFactory.createSlotFormSchema(key, item);
             arr.push(temp);
           } else {
@@ -135,7 +157,7 @@ const _sfc_main = {
             }
           }
         }
-        arr.sort(function(a, b) {
+        arr.sort(function (a, b) {
           return a.order - b.order;
         });
         let schemaArray = [];
@@ -164,7 +186,7 @@ const _sfc_main = {
       return __async(this, null, function* () {
         let json = yield loadQueryInfo();
         let allFields = getAllFields(json);
-        emit("loaded", json);
+        emit('loaded', json);
         let { formProperties, hasField } = getQueryFormProperties(allFields, json);
         if (hasField == false) {
           formSchemas.value = [];
@@ -176,7 +198,7 @@ const _sfc_main = {
     function customSetFieldsValue(rawValues) {
       return __async(this, null, function* () {
         yield getRefPromise(onlineQueryFormRef);
-        console.log("rawValues", rawValues);
+        console.log('rawValues', rawValues);
         yield setFieldsValue(rawValues);
         if (Object.keys(rawValues).length > 0) {
           doSearch();
@@ -191,15 +213,15 @@ const _sfc_main = {
         Object.keys(allFields).map((field) => {
           if (searchFieldList.indexOf(field) >= 0) {
             if (joinQuery == true) {
-              if (field.indexOf("@") < 0) {
-                formProperties[table + "@" + field] = allFields[field];
+              if (field.indexOf('@') < 0) {
+                formProperties[table + '@' + field] = allFields[field];
                 hasField = true;
               } else {
                 formProperties[field] = allFields[field];
                 hasField = true;
               }
             } else {
-              if (field.indexOf("@") < 0) {
+              if (field.indexOf('@') < 0) {
                 formProperties[field] = allFields[field];
                 hasField = true;
               }
@@ -209,7 +231,7 @@ const _sfc_main = {
       }
       return {
         formProperties,
-        hasField
+        hasField,
       };
     }
     function getAllFields(json) {
@@ -218,18 +240,18 @@ const _sfc_main = {
       let order = 1;
       Object.keys(properties).map((field) => {
         let item = properties[field];
-        if (item.view == "table") {
-          let subProps = item["properties"];
+        if (item.view == 'table') {
+          let subProps = item['properties'];
           let subTableOrder = order * 100;
           Object.keys(subProps).map((subField) => {
             let subItem = subProps[subField];
-            subItem["order"] = subTableOrder + Number(subItem["order"]);
-            let subFieldKey = field + "@" + subField;
+            subItem['order'] = subTableOrder + Number(subItem['order']);
+            let subFieldKey = field + '@' + subField;
             allFields[subFieldKey] = subItem;
           });
           order++;
         } else {
-          item["order"] = Number(item["order"]);
+          item['order'] = Number(item['order']);
           allFields[field] = item;
         }
       });
@@ -238,17 +260,20 @@ const _sfc_main = {
     function loadQueryInfo() {
       let url = `${LOAD_URL}${props.id}`;
       return new Promise((resolve) => {
-        defHttp.get({ url }, { isTransformResponse: false }).then((res) => {
-          if (res.success) {
-            resolve(res.result);
-          } else {
+        defHttp
+          .get({ url }, { isTransformResponse: false })
+          .then((res) => {
+            if (res.success) {
+              resolve(res.result);
+            } else {
+              resolve(false);
+              $message.warning(res.message);
+            }
+          })
+          .catch(() => {
+            $message.warning('\u83B7\u53D6\u67E5\u8BE2\u6761\u4EF6\u5931\u8D25!');
             resolve(false);
-            $message.warning(res.message);
-          }
-        }).catch(() => {
-          $message.warning("\u83B7\u53D6\u67E5\u8BE2\u6761\u4EF6\u5931\u8D25!");
-          resolve(false);
-        });
+          });
       });
     }
     const [registerForm, { resetFields, setFieldsValue, updateSchema, getFieldsValue }] = useForm({
@@ -258,12 +283,22 @@ const _sfc_main = {
       autoSubmitOnEnter: true,
       submitFunc() {
         doSearch();
-      }
+      },
     });
     function doSearch() {
       let formValues = getFieldsValue();
       let data = Object.assign({}, toRaw(defaultValues.param), changeDataIfArray2String(formValues));
-      emit("search", data, true);
+      emit('search', data, true);
+    }
+    // yg search行为改为跳转到新页面 并读取一次query数据
+    function doSearch_update() {
+      let formValues = getFieldsValue();
+      let data = Object.assign({}, toRaw(defaultValues.param), changeDataIfArray2String(formValues));
+
+      const storage = window.localStorage;
+      storage.setItem('query_form_data', JSON.stringify(data));
+      window.open(window.location.href);
+      // window.location.href = window.location.href;
     }
     function resetSearch() {
       return __async(this, null, function* () {
@@ -273,32 +308,36 @@ const _sfc_main = {
         if (Object.keys(rawValues).length > 0) {
           yield setFieldsValue(rawValues);
         }
-        emit("search", rawValues, false);
+        emit('search', rawValues, false);
       });
     }
     function changeDataIfArray2String(data) {
       Object.keys(data).map((k) => {
         if (data[k]) {
           if (data[k] instanceof Array) {
-            data[k] = data[k].join(",");
+            data[k] = data[k].join(',');
           }
         }
       });
       return data;
     }
-    watch(() => toggleSearchStatus.value, (status) => {
-      let names = hideList.value;
-      if (names && names.length > 0) {
-        let arr = [];
-        for (let name of names) {
-          arr.push({
-            field: name,
-            show: status
-          });
+    watch(
+      () => toggleSearchStatus.value,
+      (status) => {
+        let names = hideList.value;
+        if (names && names.length > 0) {
+          let arr = [];
+          for (let name of names) {
+            arr.push({
+              field: name,
+              show: status,
+            });
+          }
+          updateSchema(arr);
         }
-        updateSchema(arr);
-      }
-    }, { immediate: false });
+      },
+      { immediate: false }
+    );
     return {
       onlineQueryFormRef,
       registerForm,
@@ -306,137 +345,212 @@ const _sfc_main = {
       toggleButtonShow,
       toggleSearchStatus,
       doSearch,
+      doSearch_update,
       resetSearch,
       queryParams,
-      formSchemas
+      formSchemas,
     };
-  }
+  },
 };
-const _withScopeId = (n) => (pushScopeId("data-v-94518ffc"), n = n(), popScopeId(), n);
+const _withScopeId = (n) => (pushScopeId('data-v-94518ffc'), (n = n()), popScopeId(), n);
 const _hoisted_1 = {
   key: 0,
-  class: "jeecg-basic-table-form-container p-0"
+  class: 'jeecg-basic-table-form-container p-0',
 };
-const _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "group-query-string" }, "~", -1));
-const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "group-query-string" }, "~", -1));
-const _hoisted_4 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "group-query-string" }, "~", -1));
+const _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', { class: 'group-query-string' }, '~', -1));
+const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', { class: 'group-query-string' }, '~', -1));
+const _hoisted_4 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', { class: 'group-query-string' }, '~', -1));
 const _hoisted_5 = {
-  style: { "float": "left", "overflow": "hidden", "margin-left": "10px" },
-  class: "table-page-search-submitButtons"
+  style: { float: 'left', overflow: 'hidden', 'margin-left': '10px' },
+  class: 'table-page-search-submitButtons',
 };
-const _hoisted_6 = /* @__PURE__ */ createTextVNode("\u67E5\u8BE2");
-const _hoisted_7 = /* @__PURE__ */ createTextVNode("\u91CD\u7F6E");
+// yg 查询按钮
+const _hoisted_6 = /* @__PURE__ */ createTextVNode('\u67E5\u8BE2');
+const _hoisted_7 = /* @__PURE__ */ createTextVNode('\u91CD\u7F6E');
 function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
-  const _component_a_date_picker = resolveComponent("a-date-picker");
-  const _component_a_input_number = resolveComponent("a-input-number");
-  const _component_a_button = resolveComponent("a-button");
-  const _component_a_icon = resolveComponent("a-icon");
-  const _component_a_col = resolveComponent("a-col");
-  const _component_BasicForm = resolveComponent("BasicForm");
-  return $setup.formSchemas && $setup.formSchemas.length > 0 ? (openBlock(), createElementBlock("div", _hoisted_1, [
-    createVNode(_component_BasicForm, {
-      ref: "onlineQueryFormRef",
-      onRegister: $setup.registerForm
-    }, {
-      groupDate: withCtx(({ model, field }) => [
-        createVNode(_component_a_date_picker, {
-          showTime: false,
-          valueFormat: "YYYY-MM-DD",
-          placeholder: "\u5F00\u59CB\u65E5\u671F",
-          value: model[field + "_begin"],
-          "onUpdate:value": ($event) => model[field + "_begin"] = $event,
-          style: { "width": "calc(50% - 15px)" }
-        }, null, 8, ["value", "onUpdate:value"]),
-        _hoisted_2,
-        createVNode(_component_a_date_picker, {
-          showTime: false,
-          valueFormat: "YYYY-MM-DD",
-          placeholder: "\u7ED3\u675F\u65E5\u671F",
-          value: model[field + "_end"],
-          "onUpdate:value": ($event) => model[field + "_end"] = $event,
-          style: { "width": "calc(50% - 15px)" }
-        }, null, 8, ["value", "onUpdate:value"])
-      ]),
-      groupDatetime: withCtx(({ model, field }) => [
-        createVNode(_component_a_date_picker, {
-          showTime: true,
-          valueFormat: "YYYY-MM-DD HH:mm:ss",
-          placeholder: "\u5F00\u59CB\u65F6\u95F4",
-          value: model[field + "_begin"],
-          "onUpdate:value": ($event) => model[field + "_begin"] = $event,
-          style: { "width": "calc(50% - 15px)" }
-        }, null, 8, ["value", "onUpdate:value"]),
-        _hoisted_3,
-        createVNode(_component_a_date_picker, {
-          showTime: true,
-          valueFormat: "YYYY-MM-DD HH:mm:ss",
-          placeholder: "\u7ED3\u675F\u65F6\u95F4",
-          value: model[field + "_end"],
-          "onUpdate:value": ($event) => model[field + "_end"] = $event,
-          style: { "width": "calc(50% - 15px)" }
-        }, null, 8, ["value", "onUpdate:value"])
-      ]),
-      groupNumber: withCtx(({ model, field }) => [
-        createVNode(_component_a_input_number, {
-          placeholder: "\u5F00\u59CB\u503C",
-          value: model[field + "_begin"],
-          "onUpdate:value": ($event) => model[field + "_begin"] = $event,
-          style: { "width": "calc(50% - 15px)" }
-        }, null, 8, ["value", "onUpdate:value"]),
-        _hoisted_4,
-        createVNode(_component_a_input_number, {
-          placeholder: "\u7ED3\u675F\u503C",
-          value: model[field + "_end"],
-          "onUpdate:value": ($event) => model[field + "_end"] = $event,
-          style: { "width": "calc(50% - 15px)" }
-        }, null, 8, ["value", "onUpdate:value"])
-      ]),
-      formFooter: withCtx(() => [
-        createVNode(_component_a_col, {
-          md: 6,
-          sm: 8
-        }, {
-          default: withCtx(() => [
-            createElementVNode("span", _hoisted_5, [
-              createVNode(_component_a_button, {
-                preIcon: "ant-design:search",
-                type: "primary",
-                onClick: $setup.doSearch
-              }, {
-                default: withCtx(() => [
-                  _hoisted_6
-                ]),
-                _: 1
-              }, 8, ["onClick"]),
-              createVNode(_component_a_button, {
-                preIcon: "ant-design:reload",
-                type: "primary",
-                onClick: $setup.resetSearch,
-                style: { "margin-left": "8px" }
-              }, {
-                default: withCtx(() => [
-                  _hoisted_7
-                ]),
-                _: 1
-              }, 8, ["onClick"]),
-              $setup.toggleButtonShow ? (openBlock(), createElementBlock("a", {
-                key: 0,
-                onClick: _cache[0] || (_cache[0] = ($event) => $setup.toggleSearchStatus = !$setup.toggleSearchStatus),
-                style: { "margin-left": "8px" }
-              }, [
-                createTextVNode(toDisplayString($setup.toggleSearchStatus ? "\u6536\u8D77" : "\u5C55\u5F00") + " ", 1),
-                createVNode(_component_a_icon, {
-                  type: $setup.toggleSearchStatus ? "up" : "down"
-                }, null, 8, ["type"])
-              ])) : createCommentVNode("", true)
-            ])
-          ]),
-          _: 1
-        })
-      ]),
-      _: 1
-    }, 8, ["onRegister"])
-  ])) : createCommentVNode("", true);
+  const _component_a_date_picker = resolveComponent('a-date-picker');
+  const _component_a_input_number = resolveComponent('a-input-number');
+  const _component_a_button = resolveComponent('a-button');
+  const _component_a_icon = resolveComponent('a-icon');
+  const _component_a_col = resolveComponent('a-col');
+  const _component_BasicForm = resolveComponent('BasicForm');
+  return $setup.formSchemas && $setup.formSchemas.length > 0
+    ? (openBlock(),
+      createElementBlock('div', _hoisted_1, [
+        createVNode(
+          _component_BasicForm,
+          {
+            ref: 'onlineQueryFormRef',
+            onRegister: $setup.registerForm,
+          },
+          {
+            groupDate: withCtx(({ model, field }) => [
+              createVNode(
+                _component_a_date_picker,
+                {
+                  showTime: false,
+                  valueFormat: 'YYYY-MM-DD',
+                  placeholder: '\u5F00\u59CB\u65E5\u671F',
+                  value: model[field + '_begin'],
+                  'onUpdate:value': ($event) => (model[field + '_begin'] = $event),
+                  style: { width: 'calc(50% - 15px)' },
+                },
+                null,
+                8,
+                ['value', 'onUpdate:value']
+              ),
+              _hoisted_2,
+              createVNode(
+                _component_a_date_picker,
+                {
+                  showTime: false,
+                  valueFormat: 'YYYY-MM-DD',
+                  placeholder: '\u7ED3\u675F\u65E5\u671F',
+                  value: model[field + '_end'],
+                  'onUpdate:value': ($event) => (model[field + '_end'] = $event),
+                  style: { width: 'calc(50% - 15px)' },
+                },
+                null,
+                8,
+                ['value', 'onUpdate:value']
+              ),
+            ]),
+            groupDatetime: withCtx(({ model, field }) => [
+              createVNode(
+                _component_a_date_picker,
+                {
+                  showTime: true,
+                  valueFormat: 'YYYY-MM-DD HH:mm:ss',
+                  placeholder: '\u5F00\u59CB\u65F6\u95F4',
+                  value: model[field + '_begin'],
+                  'onUpdate:value': ($event) => (model[field + '_begin'] = $event),
+                  style: { width: 'calc(50% - 15px)' },
+                },
+                null,
+                8,
+                ['value', 'onUpdate:value']
+              ),
+              _hoisted_3,
+              createVNode(
+                _component_a_date_picker,
+                {
+                  showTime: true,
+                  valueFormat: 'YYYY-MM-DD HH:mm:ss',
+                  placeholder: '\u7ED3\u675F\u65F6\u95F4',
+                  value: model[field + '_end'],
+                  'onUpdate:value': ($event) => (model[field + '_end'] = $event),
+                  style: { width: 'calc(50% - 15px)' },
+                },
+                null,
+                8,
+                ['value', 'onUpdate:value']
+              ),
+            ]),
+            groupNumber: withCtx(({ model, field }) => [
+              createVNode(
+                _component_a_input_number,
+                {
+                  placeholder: '\u5F00\u59CB\u503C',
+                  value: model[field + '_begin'],
+                  'onUpdate:value': ($event) => (model[field + '_begin'] = $event),
+                  style: { width: 'calc(50% - 15px)' },
+                },
+                null,
+                8,
+                ['value', 'onUpdate:value']
+              ),
+              _hoisted_4,
+              createVNode(
+                _component_a_input_number,
+                {
+                  placeholder: '\u7ED3\u675F\u503C',
+                  value: model[field + '_end'],
+                  'onUpdate:value': ($event) => (model[field + '_end'] = $event),
+                  style: { width: 'calc(50% - 15px)' },
+                },
+                null,
+                8,
+                ['value', 'onUpdate:value']
+              ),
+            ]),
+            formFooter: withCtx(() => [
+              createVNode(
+                _component_a_col,
+                {
+                  md: 6,
+                  sm: 8,
+                },
+                {
+                  default: withCtx(() => [
+                    createElementVNode('span', _hoisted_5, [
+                      createVNode(
+                        _component_a_button,
+                        {
+                          preIcon: 'ant-design:search',
+                          type: 'primary',
+                          onClick: $setup.doSearch_update,
+                        },
+                        {
+                          default: withCtx(() => [_hoisted_6]),
+                          _: 1,
+                        },
+                        8,
+                        ['onClick']
+                      ),
+                      createVNode(
+                        _component_a_button,
+                        {
+                          preIcon: 'ant-design:reload',
+                          type: 'primary',
+                          onClick: $setup.resetSearch,
+                          style: { 'margin-left': '8px' },
+                        },
+                        {
+                          default: withCtx(() => [_hoisted_7]),
+                          _: 1,
+                        },
+                        8,
+                        ['onClick']
+                      ),
+                      $setup.toggleButtonShow
+                        ? (openBlock(),
+                          createElementBlock(
+                            'a',
+                            {
+                              key: 0,
+                              onClick: _cache[0] || (_cache[0] = ($event) => ($setup.toggleSearchStatus = !$setup.toggleSearchStatus)),
+                              style: { 'margin-left': '8px' },
+                            },
+                            [
+                              createTextVNode(toDisplayString($setup.toggleSearchStatus ? '\u6536\u8D77' : '\u5C55\u5F00') + ' ', 1),
+                              createVNode(
+                                _component_a_icon,
+                                {
+                                  type: $setup.toggleSearchStatus ? 'up' : 'down',
+                                },
+                                null,
+                                8,
+                                ['type']
+                              ),
+                            ]
+                          ))
+                        : createCommentVNode('', true),
+                    ]),
+                  ]),
+                  _: 1,
+                }
+              ),
+            ]),
+            _: 1,
+          },
+          8,
+          ['onRegister']
+        ),
+      ]))
+    : createCommentVNode('', true);
 }
-var OnlineQueryForm = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__scopeId", "data-v-94518ffc"]]);
+var OnlineQueryForm = /* @__PURE__ */ _export_sfc(_sfc_main, [
+  ['render', _sfc_render],
+  ['__scopeId', 'data-v-94518ffc'],
+]);
 export { OnlineQueryForm as default };
diff --git a/node_modules/@jeecg/online/OnlineSearchFormItem.js b/node_modules/@jeecg/online/OnlineSearchFormItem.js
index cc2dbc5..ab6ed02 100644
--- a/node_modules/@jeecg/online/OnlineSearchFormItem.js
+++ b/node_modules/@jeecg/online/OnlineSearchFormItem.js
@@ -2,30 +2,47 @@ var __defProp = Object.defineProperty;
 var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) => (key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : (obj[key] = value));
 var __spreadValues = (a, b) => {
-  for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
-import { defineComponent, ref, watch, resolveComponent, openBlock, createBlock, normalizeClass, withCtx, createElementVNode, toDisplayString, createElementBlock, Fragment, createVNode, renderList, createTextVNode, mergeProps, useCssVars, pushScopeId, popScopeId } from "vue";
-import { JDictSelectTag, JTreeSelect, JCategorySelect, JSelectUser, JSelectUserByDept, JSelectDept, JPopup, JAreaLinkage, JAreaSelect, JSelectMultiple } from "/@/components/Form";
-import JOnlineSearchSelect from "./JOnlineSearchSelect.js";
-import { _ as _export_sfc } from "./index.js";
-import "@vueuse/core";
-import "/@/utils/http/axios";
-import "/@/hooks/web/useMessage";
-import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
-import "vue-router";
-var OnlineSearchFormItem_vue_vue_type_style_index_0_scoped_true_lang = "";
+import {
+  defineComponent,
+  ref,
+  watch,
+  resolveComponent,
+  openBlock,
+  createBlock,
+  normalizeClass,
+  withCtx,
+  createElementVNode,
+  toDisplayString,
+  createElementBlock,
+  Fragment,
+  createVNode,
+  renderList,
+  createTextVNode,
+  mergeProps,
+  useCssVars,
+  pushScopeId,
+  popScopeId,
+} from 'vue';
+import { JDictSelectTag, JTreeSelect, JCategorySelect, JSelectUser, JSelectUserByDept, JSelectDept, JPopup, JAreaLinkage, JAreaSelect, JSelectMultiple } from '/@/components/Form';
+import JOnlineSearchSelect from './JOnlineSearchSelect.js';
+import { _ as _export_sfc } from './index.js';
+import '@vueuse/core';
+import '/@/utils/http/axios';
+import '/@/hooks/web/useMessage';
+import '/@/components/jeecg/OnLine/JPopupOnlReport.vue';
+import 'vue-router';
+var OnlineSearchFormItem_vue_vue_type_style_index_0_scoped_true_lang = '';
 const __default__ = defineComponent({
-  name: "OnlineSearchFormItem",
+  name: 'OnlineSearchFormItem',
   components: {
     JOnlineSearchSelect,
     JDictSelectTag,
@@ -37,69 +54,74 @@ const __default__ = defineComponent({
     JPopup,
     JAreaLinkage,
     JAreaSelect,
-    JSelectMultiple
+    JSelectMultiple,
   },
   props: {
     value: {
       type: String,
-      default: ""
+      default: '',
     },
     item: {
       type: Object,
-      default: () => {
-      },
-      required: true
+      default: () => {},
+      required: true,
     },
     dictOptions: {
       type: Object,
-      default: () => {
-      },
-      required: false
+      default: () => {},
+      required: false,
     },
     onlineForm: {
       type: Object,
-      default: () => {
-      },
-      required: false
-    }
+      default: () => {},
+      required: false,
+    },
   },
-  emits: ["update:value", "change"],
+  emits: ['update:value', 'change'],
   setup(props, { emit }) {
-    const labelTextMaxWidth = "120px";
+    const labelTextMaxWidth = '120px';
     const labelCol = {
       style: {
-        "max-width": labelTextMaxWidth
-      }
+        'max-width': labelTextMaxWidth,
+      },
     };
-    const single_mode = "single";
-    let innerValue = ref("");
-    let beginValue = ref("");
-    let endValue = ref("");
-    watch(() => props.value, () => {
-      if (isEasySelect()) {
-        innerValue.value = !!props.value ? props.value : void 0;
-      } else {
-        innerValue.value = props.value;
-      }
-      if (!props.value) {
-        beginValue.value = "";
-        endValue.value = "";
-      }
-    }, { deep: true, immediate: true });
-    watch(innerValue, (newVal) => {
-      console.log("innerValue-change", newVal);
-      emit("update:value", newVal);
-    }, { immediate: true });
+    const single_mode = 'single';
+    let innerValue = ref('');
+    let beginValue = ref('');
+    let endValue = ref('');
+    watch(
+      () => props.value,
+      () => {
+        if (isEasySelect()) {
+          innerValue.value = !!props.value ? props.value : void 0;
+        } else {
+          innerValue.value = props.value;
+        }
+        if (!props.value) {
+          beginValue.value = '';
+          endValue.value = '';
+        }
+      },
+      { deep: true, immediate: true }
+    );
+    watch(
+      innerValue,
+      (newVal) => {
+        console.log('innerValue-change', newVal);
+        emit('update:value', newVal);
+      },
+      { immediate: true }
+    );
     watch(beginValue, (newVal) => {
-      emit("change", props.item.field + "_begin", newVal);
-      emit("update:value", "1");
+      emit('change', props.item.field + '_begin', newVal);
+      emit('update:value', '1');
     });
     watch(endValue, (newVal) => {
-      emit("change", props.item.field + "_end", newVal);
-      emit("update:value", "1");
+      emit('change', props.item.field + '_end', newVal);
+      emit('update:value', '1');
     });
     function getDictOptionKey(item) {
-      console.log("ddictOptions", props.dictOptions);
+      console.log('ddictOptions', props.dictOptions);
       if (item.dbField) {
         return item.dbField;
       } else {
@@ -111,12 +133,12 @@ const __default__ = defineComponent({
       if (!item) {
         return false;
       }
-      return item.view == "list" || item.view == "radio" || item.view == "switch";
+      return item.view == 'list' || item.view == 'radio' || item.view == 'switch';
     }
     function getDictCode() {
       let item = props.item;
       if (item.dictTable && item.dictTable.length > 0) {
-        return item.dictTable + "," + item.dictText + "," + item.dictCode;
+        return item.dictTable + ',' + item.dictText + ',' + item.dictCode;
       } else {
         return item.dictCode;
       }
@@ -125,13 +147,13 @@ const __default__ = defineComponent({
       let item = props.item;
       let { dictTable, dictCode, dictText } = item;
       let temp = dictTable.toLowerCase();
-      let arr = temp.split("where");
-      let condition = "";
+      let arr = temp.split('where');
+      let condition = '';
       if (arr.length > 1) {
-        condition = " where" + arr[1];
+        condition = ' where' + arr[1];
       }
-      let sql = "select " + dictCode + " as 'value', " + dictText + " as 'text' from " + arr[0] + condition;
-      console.log("sql", sql);
+      let sql = 'select ' + dictCode + " as 'value', " + dictText + " as 'text' from " + arr[0] + condition;
+      console.log('sql', sql);
       return sql;
     }
     function getPopupFieldConfig(item) {
@@ -139,54 +161,54 @@ const __default__ = defineComponent({
       if (!destFields || destFields.length == 0) {
         return [];
       }
-      let arr1 = destFields.split(",");
-      let arr2 = orgFields.split(",");
+      let arr1 = destFields.split(',');
+      let arr2 = orgFields.split(',');
       let config = [];
       for (let i = 0; i < arr1.length; i++) {
         config.push({
           target: arr1[i],
-          source: arr2[i]
+          source: arr2[i],
         });
       }
       return config;
     }
     function setFieldsValue(values) {
       let { dictText: destFields } = props.item;
-      let arr1 = destFields.split(",");
+      let arr1 = destFields.split(',');
       let field = arr1[0];
-      emit("change", field, values[field]);
+      emit('change', field, values[field]);
     }
     function handleCategoryTreeChange(value) {
-      emit("update:value", value);
+      emit('update:value', value);
     }
     function getComponentProps(item, labelKey, rowKey) {
       let props2 = {
         labelKey,
-        rowKey
+        rowKey,
       };
       let fieldExtendJson = item.fieldExtendJson;
       if (fieldExtendJson) {
-        if (typeof fieldExtendJson == "string") {
+        if (typeof fieldExtendJson == 'string') {
           let json = JSON.parse(fieldExtendJson);
           let extend = __spreadValues({}, json);
           if (extend.text) {
-            props2["labelKey"] = extend.text;
+            props2['labelKey'] = extend.text;
           }
           if (extend.store) {
-            props2["rowKey"] = extend.store;
+            props2['rowKey'] = extend.store;
           }
         }
       }
       return props2;
     }
-    let userSelectProp = getComponentProps(props.item, "realname", "username");
-    console.log("userSelectProp", userSelectProp);
-    let depSelectProp = getComponentProps(props.item, "departName", "id");
+    let userSelectProp = getComponentProps(props.item, 'realname', 'username');
+    console.log('userSelectProp', userSelectProp);
+    let depSelectProp = getComponentProps(props.item, 'departName', 'id');
     function handleSelectChange(array) {
       if (array && array.length > 0) {
-        emit("update:value", array.join(","));
+        emit('update:value', array.join(','));
       } else {
-        emit("update:value", "");
+        emit('update:value', '');
       }
     }
     return {
@@ -205,224 +227,475 @@ const __default__ = defineComponent({
       labelCol,
       single_mode,
       getSqlByDictCode,
-      handleCategoryTreeChange
+      handleCategoryTreeChange,
     };
-  }
+  },
 });
 const __injectCSSVars__ = () => {
   useCssVars((_ctx) => ({
-    "0d13e305": _ctx.labelTextMaxWidth
+    '0d13e305': _ctx.labelTextMaxWidth,
   }));
 };
 const __setup__ = __default__.setup;
-__default__.setup = __setup__ ? (props, ctx) => {
-  __injectCSSVars__();
-  return __setup__(props, ctx);
-} : __injectCSSVars__;
+__default__.setup = __setup__
+  ? (props, ctx) => {
+      __injectCSSVars__();
+      return __setup__(props, ctx);
+    }
+  : __injectCSSVars__;
 const _sfc_main = __default__;
-const _withScopeId = (n) => (pushScopeId("data-v-213184f5"), n = n(), popScopeId(), n);
-const _hoisted_1 = ["title"];
-const _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "group-query-strig" }, "~", -1));
-const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "group-query-strig" }, "~", -1));
-const _hoisted_4 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "group-query-strig" }, "~", -1));
+const _withScopeId = (n) => (pushScopeId('data-v-213184f5'), (n = n()), popScopeId(), n);
+const _hoisted_1 = ['title'];
+const _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', { class: 'group-query-strig' }, '~', -1));
+const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', { class: 'group-query-strig' }, '~', -1));
+const _hoisted_4 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', { class: 'group-query-strig' }, '~', -1));
 function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
-  const _component_a_date_picker = resolveComponent("a-date-picker");
-  const _component_JDictSelectTag = resolveComponent("JDictSelectTag");
-  const _component_a_select_option = resolveComponent("a-select-option");
-  const _component_a_select = resolveComponent("a-select");
-  const _component_JTreeSelect = resolveComponent("JTreeSelect");
-  const _component_JCategorySelect = resolveComponent("JCategorySelect");
-  const _component_JOnlineSearchSelect = resolveComponent("JOnlineSearchSelect");
-  const _component_JSelectUser = resolveComponent("JSelectUser");
-  const _component_JSelectDept = resolveComponent("JSelectDept");
-  const _component_JPopup = resolveComponent("JPopup");
-  const _component_JAreaSelect = resolveComponent("JAreaSelect");
-  const _component_JSelectMultiple = resolveComponent("JSelectMultiple");
-  const _component_a_input = resolveComponent("a-input");
-  const _component_a_form_item = resolveComponent("a-form-item");
-  return openBlock(), createBlock(_component_a_form_item, {
-    labelCol: _ctx.labelCol,
-    class: normalizeClass("jeecg-online-search")
-  }, {
-    label: withCtx(() => [
-      createElementVNode("span", {
-        title: _ctx.item.label,
-        class: "label-text"
-      }, toDisplayString(_ctx.item.label), 9, _hoisted_1)
-    ]),
-    default: withCtx(() => [
-      _ctx.item.view == "date" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
-        _ctx.single_mode === _ctx.item.mode ? (openBlock(), createBlock(_component_a_date_picker, {
-          key: 0,
-          style: { "width": "100%" },
-          showTime: false,
-          valueFormat: "YYYY-MM-DD",
-          placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-          value: _ctx.innerValue,
-          "onUpdate:value": _cache[0] || (_cache[0] = ($event) => _ctx.innerValue = $event)
-        }, null, 8, ["placeholder", "value"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
-          createVNode(_component_a_date_picker, {
-            showTime: false,
-            valueFormat: "YYYY-MM-DD",
-            placeholder: "\u5F00\u59CB\u65E5\u671F",
-            value: _ctx.beginValue,
-            "onUpdate:value": _cache[1] || (_cache[1] = ($event) => _ctx.beginValue = $event),
-            style: { "width": "calc(50% - 15px)" }
-          }, null, 8, ["value"]),
-          _hoisted_2,
-          createVNode(_component_a_date_picker, {
-            showTime: false,
-            valueFormat: "YYYY-MM-DD",
-            placeholder: "\u7ED3\u675F\u65E5\u671F",
-            value: _ctx.endValue,
-            "onUpdate:value": _cache[2] || (_cache[2] = ($event) => _ctx.endValue = $event),
-            style: { "width": "calc(50% - 15px)" }
-          }, null, 8, ["value"])
-        ], 64))
-      ], 64)) : _ctx.item.view == "datetime" ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
-        _ctx.single_mode === _ctx.item.mode ? (openBlock(), createBlock(_component_a_date_picker, {
-          key: 0,
-          style: { "width": "100%" },
-          showTime: true,
-          valueFormat: "YYYY-MM-DD hh:mm:ss",
-          placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-          value: _ctx.innerValue,
-          "onUpdate:value": _cache[3] || (_cache[3] = ($event) => _ctx.innerValue = $event)
-        }, null, 8, ["placeholder", "value"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
-          createVNode(_component_a_date_picker, {
-            showTime: true,
-            valueFormat: "YYYY-MM-DD hh:mm:ss",
-            placeholder: "\u5F00\u59CB\u65F6\u95F4",
-            value: _ctx.beginValue,
-            "onUpdate:value": _cache[4] || (_cache[4] = ($event) => _ctx.beginValue = $event),
-            style: { "width": "calc(50% - 15px)" }
-          }, null, 8, ["value"]),
-          _hoisted_3,
-          createVNode(_component_a_date_picker, {
-            showTime: true,
-            valueFormat: "YYYY-MM-DD hh:mm:ss",
-            placeholder: "\u7ED3\u675F\u65F6\u95F4",
-            value: _ctx.endValue,
-            "onUpdate:value": _cache[5] || (_cache[5] = ($event) => _ctx.endValue = $event),
-            style: { "width": "calc(50% - 15px)" }
-          }, null, 8, ["value"])
-        ], 64))
-      ], 64)) : _ctx.isEasySelect() ? (openBlock(), createElementBlock(Fragment, { key: 2 }, [
-        _ctx.item.config === "1" ? (openBlock(), createBlock(_component_JDictSelectTag, {
-          key: 0,
-          placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-          value: _ctx.innerValue,
-          "onUpdate:value": _cache[6] || (_cache[6] = ($event) => _ctx.innerValue = $event),
-          dictCode: _ctx.getDictCode()
-        }, null, 8, ["placeholder", "value", "dictCode"])) : (openBlock(), createBlock(_component_a_select, {
-          key: 1,
-          placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-          value: _ctx.innerValue,
-          "onUpdate:value": _cache[7] || (_cache[7] = ($event) => _ctx.innerValue = $event)
-        }, {
-          default: withCtx(() => [
-            (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.dictOptions[_ctx.getDictOptionKey(_ctx.item)], (obj, index) => {
-              return openBlock(), createBlock(_component_a_select_option, {
-                key: index,
-                value: obj.value
-              }, {
-                default: withCtx(() => [
-                  createTextVNode(toDisplayString(obj.text), 1)
-                ]),
-                _: 2
-              }, 1032, ["value"]);
-            }), 128))
-          ]),
-          _: 1
-        }, 8, ["placeholder", "value"]))
-      ], 64)) : _ctx.item.view === "sel_tree" ? (openBlock(), createBlock(_component_JTreeSelect, {
-        key: 3,
-        placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-        value: _ctx.innerValue,
-        "onUpdate:value": _cache[8] || (_cache[8] = ($event) => _ctx.innerValue = $event),
-        dict: _ctx.item.dict,
-        pidField: _ctx.item.pidField,
-        pidValue: _ctx.item.pidValue,
-        hasChildField: _ctx.item.hasChildField,
-        "load-triggle-change": ""
-      }, null, 8, ["placeholder", "value", "dict", "pidField", "pidValue", "hasChildField"])) : _ctx.item.view === "cat_tree" ? (openBlock(), createBlock(_component_JCategorySelect, {
-        key: 4,
-        onChange: _ctx.handleCategoryTreeChange,
-        loadTriggleChange: true,
-        pcode: _ctx.item.pcode,
-        value: _ctx.innerValue,
-        "onUpdate:value": _cache[9] || (_cache[9] = ($event) => _ctx.innerValue = $event),
-        placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label
-      }, null, 8, ["onChange", "pcode", "value", "placeholder"])) : _ctx.item.view === "sel_search" ? (openBlock(), createElementBlock(Fragment, { key: 5 }, [
-        _ctx.item.config === "1" ? (openBlock(), createBlock(_component_JDictSelectTag, {
-          key: 0,
-          value: _ctx.innerValue,
-          "onUpdate:value": _cache[10] || (_cache[10] = ($event) => _ctx.innerValue = $event),
-          placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-          dict: _ctx.getDictCode()
-        }, null, 8, ["value", "placeholder", "dict"])) : (openBlock(), createBlock(_component_JOnlineSearchSelect, {
-          key: 1,
-          value: _ctx.innerValue,
-          "onUpdate:value": _cache[11] || (_cache[11] = ($event) => _ctx.innerValue = $event),
-          placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-          sql: _ctx.getSqlByDictCode()
-        }, null, 8, ["value", "placeholder", "sql"]))
-      ], 64)) : _ctx.item.view == "sel_user" ? (openBlock(), createBlock(_component_JSelectUser, mergeProps({ key: 6 }, _ctx.userSelectProp, {
-        value: _ctx.innerValue,
-        "onUpdate:value": _cache[12] || (_cache[12] = ($event) => _ctx.innerValue = $event),
-        placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label
-      }), null, 16, ["value", "placeholder"])) : _ctx.item.view == "sel_depart" ? (openBlock(), createBlock(_component_JSelectDept, mergeProps({
-        key: 7,
-        showButton: false
-      }, _ctx.depSelectProp, {
-        value: _ctx.innerValue,
-        "onUpdate:value": _cache[13] || (_cache[13] = ($event) => _ctx.innerValue = $event),
-        placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label
-      }), null, 16, ["value", "placeholder"])) : _ctx.item.view == "popup" ? (openBlock(), createBlock(_component_JPopup, {
-        key: 8,
-        placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-        value: _ctx.innerValue,
-        "onUpdate:value": _cache[14] || (_cache[14] = ($event) => _ctx.innerValue = $event),
-        code: _ctx.item.dictTable,
-        setFieldsValue: _ctx.setFieldsValue,
-        "field-config": _ctx.getPopupFieldConfig(_ctx.item),
-        multi: true
-      }, null, 8, ["placeholder", "value", "code", "setFieldsValue", "field-config"])) : _ctx.item.view == "pca" ? (openBlock(), createBlock(_component_JAreaSelect, {
-        key: 9,
-        placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-        value: _ctx.innerValue,
-        "onUpdate:value": _cache[15] || (_cache[15] = ($event) => _ctx.innerValue = $event)
-      }, null, 8, ["placeholder", "value"])) : _ctx.item.view == "checkbox" || _ctx.item.view == "list_multi" ? (openBlock(), createBlock(_component_JSelectMultiple, {
-        key: 10,
-        dictCode: _ctx.getDictCode(),
-        placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-        value: _ctx.innerValue,
-        "onUpdate:value": _cache[16] || (_cache[16] = ($event) => _ctx.innerValue = $event)
-      }, null, 8, ["dictCode", "placeholder", "value"])) : (openBlock(), createElementBlock(Fragment, { key: 11 }, [
-        _ctx.single_mode === _ctx.item.mode ? (openBlock(), createBlock(_component_a_input, {
-          key: 0,
-          placeholder: "\u8BF7\u9009\u62E9" + _ctx.item.label,
-          value: _ctx.innerValue,
-          "onUpdate:value": _cache[17] || (_cache[17] = ($event) => _ctx.innerValue = $event)
-        }, null, 8, ["placeholder", "value"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
-          createVNode(_component_a_input, {
-            placeholder: "\u5F00\u59CB\u503C",
-            value: _ctx.beginValue,
-            "onUpdate:value": _cache[18] || (_cache[18] = ($event) => _ctx.beginValue = $event),
-            style: { "width": "calc(50% - 15px)" }
-          }, null, 8, ["value"]),
-          _hoisted_4,
-          createVNode(_component_a_input, {
-            placeholder: "\u7ED3\u675F\u503C",
-            value: _ctx.endValue,
-            "onUpdate:value": _cache[19] || (_cache[19] = ($event) => _ctx.endValue = $event),
-            style: { "width": "calc(50% - 15px)" }
-          }, null, 8, ["value"])
-        ], 64))
-      ], 64))
-    ]),
-    _: 1
-  }, 8, ["labelCol"]);
+  const _component_a_date_picker = resolveComponent('a-date-picker');
+  const _component_JDictSelectTag = resolveComponent('JDictSelectTag');
+  const _component_a_select_option = resolveComponent('a-select-option');
+  const _component_a_select = resolveComponent('a-select');
+  const _component_JTreeSelect = resolveComponent('JTreeSelect');
+  const _component_JCategorySelect = resolveComponent('JCategorySelect');
+  const _component_JOnlineSearchSelect = resolveComponent('JOnlineSearchSelect');
+  const _component_JSelectUser = resolveComponent('JSelectUser');
+  const _component_JSelectDept = resolveComponent('JSelectDept');
+  const _component_JPopup = resolveComponent('JPopup');
+  const _component_JAreaSelect = resolveComponent('JAreaSelect');
+  const _component_JSelectMultiple = resolveComponent('JSelectMultiple');
+  const _component_a_input = resolveComponent('a-input');
+  const _component_a_form_item = resolveComponent('a-form-item');
+  return (
+    openBlock(),
+    createBlock(
+      _component_a_form_item,
+      {
+        labelCol: _ctx.labelCol,
+        class: normalizeClass('jeecg-online-search'),
+      },
+      {
+        label: withCtx(() => [
+          createElementVNode(
+            'span',
+            {
+              title: _ctx.item.label,
+              class: 'label-text',
+            },
+            toDisplayString(_ctx.item.label),
+            9,
+            _hoisted_1
+          ),
+        ]),
+        default: withCtx(() => [
+          _ctx.item.view == 'date'
+            ? (openBlock(),
+              createElementBlock(
+                Fragment,
+                { key: 0 },
+                [
+                  _ctx.single_mode === _ctx.item.mode
+                    ? (openBlock(),
+                      createBlock(
+                        _component_a_date_picker,
+                        {
+                          key: 0,
+                          style: { width: '100%' },
+                          showTime: false,
+                          valueFormat: 'YYYY-MM-DD',
+                          placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                          value: _ctx.innerValue,
+                          'onUpdate:value': _cache[0] || (_cache[0] = ($event) => (_ctx.innerValue = $event)),
+                        },
+                        null,
+                        8,
+                        ['placeholder', 'value']
+                      ))
+                    : (openBlock(),
+                      createElementBlock(
+                        Fragment,
+                        { key: 1 },
+                        [
+                          createVNode(
+                            _component_a_date_picker,
+                            {
+                              showTime: false,
+                              valueFormat: 'YYYY-MM-DD',
+                              placeholder: '\u5F00\u59CB\u65E5\u671F',
+                              value: _ctx.beginValue,
+                              'onUpdate:value': _cache[1] || (_cache[1] = ($event) => (_ctx.beginValue = $event)),
+                              style: { width: 'calc(50% - 15px)' },
+                            },
+                            null,
+                            8,
+                            ['value']
+                          ),
+                          _hoisted_2,
+                          createVNode(
+                            _component_a_date_picker,
+                            {
+                              showTime: false,
+                              valueFormat: 'YYYY-MM-DD',
+                              placeholder: '\u7ED3\u675F\u65E5\u671F',
+                              value: _ctx.endValue,
+                              'onUpdate:value': _cache[2] || (_cache[2] = ($event) => (_ctx.endValue = $event)),
+                              style: { width: 'calc(50% - 15px)' },
+                            },
+                            null,
+                            8,
+                            ['value']
+                          ),
+                        ],
+                        64
+                      )),
+                ],
+                64
+              ))
+            : _ctx.item.view == 'datetime'
+            ? (openBlock(),
+              createElementBlock(
+                Fragment,
+                { key: 1 },
+                [
+                  _ctx.single_mode === _ctx.item.mode
+                    ? (openBlock(),
+                      createBlock(
+                        _component_a_date_picker,
+                        {
+                          key: 0,
+                          style: { width: '100%' },
+                          showTime: true,
+                          valueFormat: 'YYYY-MM-DD hh:mm:ss',
+                          placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                          value: _ctx.innerValue,
+                          'onUpdate:value': _cache[3] || (_cache[3] = ($event) => (_ctx.innerValue = $event)),
+                        },
+                        null,
+                        8,
+                        ['placeholder', 'value']
+                      ))
+                    : (openBlock(),
+                      createElementBlock(
+                        Fragment,
+                        { key: 1 },
+                        [
+                          createVNode(
+                            _component_a_date_picker,
+                            {
+                              showTime: true,
+                              valueFormat: 'YYYY-MM-DD hh:mm:ss',
+                              placeholder: '\u5F00\u59CB\u65F6\u95F4',
+                              value: _ctx.beginValue,
+                              'onUpdate:value': _cache[4] || (_cache[4] = ($event) => (_ctx.beginValue = $event)),
+                              style: { width: 'calc(50% - 15px)' },
+                            },
+                            null,
+                            8,
+                            ['value']
+                          ),
+                          _hoisted_3,
+                          createVNode(
+                            _component_a_date_picker,
+                            {
+                              showTime: true,
+                              valueFormat: 'YYYY-MM-DD hh:mm:ss',
+                              placeholder: '\u7ED3\u675F\u65F6\u95F4',
+                              value: _ctx.endValue,
+                              'onUpdate:value': _cache[5] || (_cache[5] = ($event) => (_ctx.endValue = $event)),
+                              style: { width: 'calc(50% - 15px)' },
+                            },
+                            null,
+                            8,
+                            ['value']
+                          ),
+                        ],
+                        64
+                      )),
+                ],
+                64
+              ))
+            : _ctx.isEasySelect()
+            ? (openBlock(),
+              createElementBlock(
+                Fragment,
+                { key: 2 },
+                [
+                  _ctx.item.config === '1'
+                    ? (openBlock(),
+                      createBlock(
+                        _component_JDictSelectTag,
+                        {
+                          key: 0,
+                          placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                          value: _ctx.innerValue,
+                          'onUpdate:value': _cache[6] || (_cache[6] = ($event) => (_ctx.innerValue = $event)),
+                          dictCode: _ctx.getDictCode(),
+                        },
+                        null,
+                        8,
+                        ['placeholder', 'value', 'dictCode']
+                      ))
+                    : (openBlock(),
+                      createBlock(
+                        _component_a_select,
+                        {
+                          key: 1,
+                          placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                          value: _ctx.innerValue,
+                          'onUpdate:value': _cache[7] || (_cache[7] = ($event) => (_ctx.innerValue = $event)),
+                        },
+                        {
+                          default: withCtx(() => [
+                            (openBlock(true),
+                            createElementBlock(
+                              Fragment,
+                              null,
+                              renderList(_ctx.dictOptions[_ctx.getDictOptionKey(_ctx.item)], (obj, index) => {
+                                return (
+                                  openBlock(),
+                                  createBlock(
+                                    _component_a_select_option,
+                                    {
+                                      key: index,
+                                      value: obj.value,
+                                    },
+                                    {
+                                      default: withCtx(() => [createTextVNode(toDisplayString(obj.text), 1)]),
+                                      _: 2,
+                                    },
+                                    1032,
+                                    ['value']
+                                  )
+                                );
+                              }),
+                              128
+                            )),
+                          ]),
+                          _: 1,
+                        },
+                        8,
+                        ['placeholder', 'value']
+                      )),
+                ],
+                64
+              ))
+            : _ctx.item.view === 'sel_tree'
+            ? (openBlock(),
+              createBlock(
+                _component_JTreeSelect,
+                {
+                  key: 3,
+                  placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                  value: _ctx.innerValue,
+                  'onUpdate:value': _cache[8] || (_cache[8] = ($event) => (_ctx.innerValue = $event)),
+                  dict: _ctx.item.dict,
+                  pidField: _ctx.item.pidField,
+                  pidValue: _ctx.item.pidValue,
+                  hasChildField: _ctx.item.hasChildField,
+                  'load-triggle-change': '',
+                },
+                null,
+                8,
+                ['placeholder', 'value', 'dict', 'pidField', 'pidValue', 'hasChildField']
+              ))
+            : _ctx.item.view === 'cat_tree'
+            ? (openBlock(),
+              createBlock(
+                _component_JCategorySelect,
+                {
+                  key: 4,
+                  onChange: _ctx.handleCategoryTreeChange,
+                  loadTriggleChange: true,
+                  pcode: _ctx.item.pcode,
+                  value: _ctx.innerValue,
+                  'onUpdate:value': _cache[9] || (_cache[9] = ($event) => (_ctx.innerValue = $event)),
+                  placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                },
+                null,
+                8,
+                ['onChange', 'pcode', 'value', 'placeholder']
+              ))
+            : _ctx.item.view === 'sel_search'
+            ? (openBlock(),
+              createElementBlock(
+                Fragment,
+                { key: 5 },
+                [
+                  _ctx.item.config === '1'
+                    ? (openBlock(),
+                      createBlock(
+                        _component_JDictSelectTag,
+                        {
+                          key: 0,
+                          value: _ctx.innerValue,
+                          'onUpdate:value': _cache[10] || (_cache[10] = ($event) => (_ctx.innerValue = $event)),
+                          placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                          dict: _ctx.getDictCode(),
+                        },
+                        null,
+                        8,
+                        ['value', 'placeholder', 'dict']
+                      ))
+                    : (openBlock(),
+                      createBlock(
+                        _component_JOnlineSearchSelect,
+                        {
+                          key: 1,
+                          value: _ctx.innerValue,
+                          'onUpdate:value': _cache[11] || (_cache[11] = ($event) => (_ctx.innerValue = $event)),
+                          placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                          sql: _ctx.getSqlByDictCode(),
+                        },
+                        null,
+                        8,
+                        ['value', 'placeholder', 'sql']
+                      )),
+                ],
+                64
+              ))
+            : _ctx.item.view == 'sel_user'
+            ? (openBlock(),
+              createBlock(
+                _component_JSelectUser,
+                mergeProps({ key: 6 }, _ctx.userSelectProp, {
+                  value: _ctx.innerValue,
+                  'onUpdate:value': _cache[12] || (_cache[12] = ($event) => (_ctx.innerValue = $event)),
+                  placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                }),
+                null,
+                16,
+                ['value', 'placeholder']
+              ))
+            : _ctx.item.view == 'sel_depart'
+            ? (openBlock(),
+              createBlock(
+                _component_JSelectDept,
+                mergeProps(
+                  {
+                    key: 7,
+                    showButton: false,
+                  },
+                  _ctx.depSelectProp,
+                  {
+                    value: _ctx.innerValue,
+                    'onUpdate:value': _cache[13] || (_cache[13] = ($event) => (_ctx.innerValue = $event)),
+                    placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                  }
+                ),
+                null,
+                16,
+                ['value', 'placeholder']
+              ))
+            : _ctx.item.view == 'popup'
+            ? (openBlock(),
+              createBlock(
+                _component_JPopup,
+                {
+                  key: 8,
+                  placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                  value: _ctx.innerValue,
+                  'onUpdate:value': _cache[14] || (_cache[14] = ($event) => (_ctx.innerValue = $event)),
+                  code: _ctx.item.dictTable,
+                  setFieldsValue: _ctx.setFieldsValue,
+                  'field-config': _ctx.getPopupFieldConfig(_ctx.item),
+                  multi: true,
+                },
+                null,
+                8,
+                ['placeholder', 'value', 'code', 'setFieldsValue', 'field-config']
+              ))
+            : _ctx.item.view == 'pca'
+            ? (openBlock(),
+              createBlock(
+                _component_JAreaSelect,
+                {
+                  key: 9,
+                  placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                  value: _ctx.innerValue,
+                  'onUpdate:value': _cache[15] || (_cache[15] = ($event) => (_ctx.innerValue = $event)),
+                },
+                null,
+                8,
+                ['placeholder', 'value']
+              ))
+            : _ctx.item.view == 'checkbox' || _ctx.item.view == 'list_multi'
+            ? (openBlock(),
+              createBlock(
+                _component_JSelectMultiple,
+                {
+                  key: 10,
+                  dictCode: _ctx.getDictCode(),
+                  placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                  value: _ctx.innerValue,
+                  'onUpdate:value': _cache[16] || (_cache[16] = ($event) => (_ctx.innerValue = $event)),
+                },
+                null,
+                8,
+                ['dictCode', 'placeholder', 'value']
+              ))
+            : (openBlock(),
+              createElementBlock(
+                Fragment,
+                { key: 11 },
+                [
+                  _ctx.single_mode === _ctx.item.mode
+                    ? (openBlock(),
+                      createBlock(
+                        _component_a_input,
+                        {
+                          key: 0,
+                          placeholder: '\u8BF7\u9009\u62E9' + _ctx.item.label,
+                          value: _ctx.innerValue,
+                          'onUpdate:value': _cache[17] || (_cache[17] = ($event) => (_ctx.innerValue = $event)),
+                        },
+                        null,
+                        8,
+                        ['placeholder', 'value']
+                      ))
+                    : (openBlock(),
+                      createElementBlock(
+                        Fragment,
+                        { key: 1 },
+                        [
+                          createVNode(
+                            _component_a_input,
+                            {
+                              placeholder: '\u5F00\u59CB\u503C',
+                              value: _ctx.beginValue,
+                              'onUpdate:value': _cache[18] || (_cache[18] = ($event) => (_ctx.beginValue = $event)),
+                              style: { width: 'calc(50% - 15px)' },
+                            },
+                            null,
+                            8,
+                            ['value']
+                          ),
+                          _hoisted_4,
+                          createVNode(
+                            _component_a_input,
+                            {
+                              placeholder: '\u7ED3\u675F\u503C',
+                              value: _ctx.endValue,
+                              'onUpdate:value': _cache[19] || (_cache[19] = ($event) => (_ctx.endValue = $event)),
+                              style: { width: 'calc(50% - 15px)' },
+                            },
+                            null,
+                            8,
+                            ['value']
+                          ),
+                        ],
+                        64
+                      )),
+                ],
+                64
+              )),
+        ]),
+        _: 1,
+      },
+      8,
+      ['labelCol']
+    )
+  );
 }
-var OnlineSearchFormItem = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__scopeId", "data-v-213184f5"]]);
+var OnlineSearchFormItem = /* @__PURE__ */ _export_sfc(_sfc_main, [
+  ['render', _sfc_render],
+  ['__scopeId', 'data-v-213184f5'],
+]);
 export { OnlineSearchFormItem as default };
diff --git a/node_modules/@jeecg/online/OnlineSuperQuery.js b/node_modules/@jeecg/online/OnlineSuperQuery.js
index 7d4d49c..5054e0c 100644
--- a/node_modules/@jeecg/online/OnlineSuperQuery.js
+++ b/node_modules/@jeecg/online/OnlineSuperQuery.js
@@ -1,41 +1,63 @@
-import { ref, reactive, toRaw, watch, resolveComponent, openBlock, createElementBlock, Fragment, createElementVNode, createBlock, withCtx, createVNode, Teleport, createCommentVNode, normalizeClass, withDirectives, vShow, renderList, toDisplayString, pushScopeId, popScopeId, createTextVNode } from "vue";
-import { useModalInner, BasicModal, useModal } from "/@/components/Modal";
-import { randomString } from "/@/utils/common/compUtils";
-import { useMessage } from "/@/hooks/web/useMessage";
-import { Modal, Divider } from "ant-design-vue";
-import { createLocalStorage } from "/@/utils/cache";
-import { useRoute } from "vue-router";
-import { b as FORM_VIEW_TO_QUERY_VIEW, F as FormSchemaFactory } from "./FormSchemaFactory.js";
-import { _ as _sfc_main$1 } from "./OnlineSuperQueryValComponent.vue_vue_type_script_lang.js";
-import { MinusCircleOutlined, PlusOutlined, FileTextOutlined, CloseCircleOutlined, AppstoreTwoTone } from "@ant-design/icons-vue";
-import { _ as _export_sfc } from "./index.js";
-import "/@/components/Form/src/jeecg/components/JUpload";
-import "/@/components/Form/src/componentMap";
-import "/@/components/Form/src/helper";
-import "/@/utils/is";
-import "./toString.js";
-import "./isArray.js";
-import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
-const SAVE_CODE_PRE = "JSuperQuerySaved_";
+import {
+  ref,
+  reactive,
+  toRaw,
+  watch,
+  resolveComponent,
+  openBlock,
+  createElementBlock,
+  Fragment,
+  createElementVNode,
+  createBlock,
+  withCtx,
+  createVNode,
+  Teleport,
+  createCommentVNode,
+  normalizeClass,
+  withDirectives,
+  vShow,
+  renderList,
+  toDisplayString,
+  pushScopeId,
+  popScopeId,
+  createTextVNode,
+} from 'vue';
+import { useModalInner, BasicModal, useModal } from '/@/components/Modal';
+import { randomString } from '/@/utils/common/compUtils';
+import { useMessage } from '/@/hooks/web/useMessage';
+import { Modal, Divider } from 'ant-design-vue';
+import { createLocalStorage } from '/@/utils/cache';
+import { useRoute } from 'vue-router';
+import { b as FORM_VIEW_TO_QUERY_VIEW, F as FormSchemaFactory } from './FormSchemaFactory.js';
+import { _ as _sfc_main$1 } from './OnlineSuperQueryValComponent.vue_vue_type_script_lang.js';
+import { MinusCircleOutlined, PlusOutlined, FileTextOutlined, CloseCircleOutlined, AppstoreTwoTone } from '@ant-design/icons-vue';
+import { _ as _export_sfc } from './index.js';
+import '/@/components/Form/src/jeecg/components/JUpload';
+import '/@/components/Form/src/componentMap';
+import '/@/components/Form/src/helper';
+import '/@/utils/is';
+import './toString.js';
+import './isArray.js';
+import '/@/components/jeecg/OnLine/JPopupOnlReport.vue';
+const SAVE_CODE_PRE = 'JSuperQuerySaved_';
 function useSuperQuery() {
   const { createMessage: $message } = useMessage();
   const formRef = ref();
   const dynamicRowValues = reactive({
-    values: []
+    values: [],
   });
-  const matchType = ref("and");
+  const matchType = ref('and');
   const [registerModal, { setModalProps }] = useModalInner(() => {
     setModalProps({ confirmLoading: false });
   });
-  const view2QueryViewMap = Object.assign({}, { "link_down": "text" }, FORM_VIEW_TO_QUERY_VIEW);
+  const view2QueryViewMap = Object.assign({}, { link_down: 'text' }, FORM_VIEW_TO_QUERY_VIEW);
   function handleSubmit() {
-    console.log("handleSubmit", dynamicRowValues.values);
-  }
-  function handleCancel() {
+    console.log('handleSubmit', dynamicRowValues.values);
   }
+  function handleCancel() {}
   function setFormModel(key, value, item) {
-    console.log("setFormModel", key, value);
-    item["val"] = value;
+    console.log('setFormModel', key, value);
+    item['val'] = value;
   }
   const fieldProperties = ref({});
   const fieldTreeData = ref([]);
@@ -47,9 +69,9 @@ function useSuperQuery() {
   function addOne(index) {
     let item = {
       field: void 0,
-      rule: "eq",
-      val: "",
-      key: randomString(16)
+      rule: 'eq',
+      val: '',
+      key: randomString(16),
     };
     if (index === false) {
       dynamicRowValues.values = [];
@@ -76,9 +98,9 @@ function useSuperQuery() {
     }
   }
   const defaultInput = {
-    field: "val",
-    label: "\u6D4B\u8BD5",
-    component: "Input"
+    field: 'val',
+    label: '\u6D4B\u8BD5',
+    component: 'Input',
   };
   function getSchema(item, index) {
     let map = fieldProperties.value;
@@ -89,46 +111,58 @@ function useSuperQuery() {
     if (view2QueryViewMap[prop.view]) {
       prop.view = view2QueryViewMap[prop.view];
     }
+
+    if (prop.view === 'cat_tree') {
+      prop.isDictQuery = true;
+    }
+
     let temp = FormSchemaFactory.createFormSchema(item.field, prop);
     temp.noChange();
     temp.asSearchForm();
     temp.updateField(item.field + index);
     const setFieldValue = (values) => {
-      item["val"] = values[item.field];
+      item['val'] = values[item.field];
     };
     temp.setFunctionForFieldValue(setFieldValue);
     let schema = temp.getFormItemSchema();
     return schema;
   }
-  const saveTreeData = ref("");
+  const saveTreeData = ref('');
   const $ls = createLocalStorage();
   const saveInfo = reactive({
     visible: false,
-    title: "",
-    content: "",
-    saveCode: ""
+    title: '',
+    content: '',
+    saveCode: '',
   });
   const loading = ref(false);
   const route = useRoute();
-  watch(() => route.fullPath, (val) => {
-    console.log("fullpath", val);
-    initSaveQueryInfoCode();
-  });
+  watch(
+    () => route.fullPath,
+    (val) => {
+      console.log('fullpath', val);
+      initSaveQueryInfoCode();
+    }
+  );
   const currentPageSavedArray = ref([]);
-  watch(() => currentPageSavedArray.value, (val) => {
-    let temp = [];
-    if (val && val.length > 0) {
-      val.map((item) => {
-        let key = randomString(16);
-        temp.push({
-          title: item.title,
-          slots: { icon: "custom" },
-          value: key
+  watch(
+    () => currentPageSavedArray.value,
+    (val) => {
+      let temp = [];
+      if (val && val.length > 0) {
+        val.map((item) => {
+          let key = randomString(16);
+          temp.push({
+            title: item.title,
+            slots: { icon: 'custom' },
+            value: key,
+          });
         });
-      });
-    }
-    saveTreeData.value = temp;
-  }, { immediate: true, deep: true });
+      }
+      saveTreeData.value = temp;
+    },
+    { immediate: true, deep: true }
+  );
   function initSaveQueryInfoCode() {
     let code = SAVE_CODE_PRE + route.fullPath;
     saveInfo.saveCode = code;
@@ -141,7 +175,7 @@ function useSuperQuery() {
   function handleSave() {
     let fieldArray = getQueryInfo();
     if (!fieldArray) {
-      $message.warning("\u7A7A\u6761\u4EF6\u4E0D\u80FD\u4FDD\u5B58");
+      $message.warning('\u7A7A\u6761\u4EF6\u4E0D\u80FD\u4FDD\u5B58');
       return;
     }
     let content = JSON.stringify(fieldArray);
@@ -149,7 +183,7 @@ function useSuperQuery() {
   }
   function openSaveInfoModal(content) {
     saveInfo.visible = true;
-    saveInfo.title = "";
+    saveInfo.title = '';
     saveInfo.content = content;
   }
   function doSaveQueryInfo() {
@@ -157,25 +191,25 @@ function useSuperQuery() {
     let index = getTitleIndex(title);
     if (index >= 0) {
       Modal.confirm({
-        title: "\u63D0\u793A",
+        title: '\u63D0\u793A',
         content: `${title} \u5DF2\u5B58\u5728\uFF0C\u662F\u5426\u8986\u76D6\uFF1F`,
-        okText: "\u786E\u8BA4",
-        cancelText: "\u53D6\u6D88",
+        okText: '\u786E\u8BA4',
+        cancelText: '\u53D6\u6D88',
         onOk: () => {
           currentPageSavedArray.value.splice(index, 1, {
             content,
             title,
-            type: matchType.value
+            type: matchType.value,
           });
           $ls.set(saveCode, currentPageSavedArray.value);
           saveInfo.visible = false;
-        }
+        },
       });
     } else {
       currentPageSavedArray.value.push({
         content,
         title,
-        type: matchType.value
+        type: matchType.value,
       });
       $ls.set(saveCode, currentPageSavedArray.value);
       saveInfo.visible = false;
@@ -203,18 +237,18 @@ function useSuperQuery() {
       if (item.field && (item.val || item.val === 0) && item.rule) {
         let tempVal = toRaw(item.val);
         if (tempVal instanceof Array) {
-          tempVal = tempVal.join(",");
+          tempVal = tempVal.join(',');
         }
         let obj = {
           field: item.field,
           rule: item.rule,
-          val: tempVal
+          val: tempVal,
         };
         if (isEmit === true) {
           let prop = fieldProps[item.field];
           if (prop) {
-            obj["type"] = prop.view;
-            obj["dbType"] = prop.type;
+            obj['type'] = prop.view;
+            obj['dbType'] = prop.type;
           }
         }
         fieldArray.push(obj);
@@ -257,43 +291,43 @@ function useSuperQuery() {
       title,
       value: table,
       disabled: true,
-      children: []
+      children: [],
     };
     treeData.push(mainNode);
     Object.keys(properties).map((field) => {
       let item = properties[field];
-      if (item.view == "table") {
-        let subProps = item["properties"];
+      if (item.view == 'table') {
+        let subProps = item['properties'];
         let subTableOrder = order * 100;
         let subNode = {
           title: item.title,
           value: field,
           disabled: true,
-          children: []
+          children: [],
         };
         Object.keys(subProps).map((subField) => {
           let subItem = subProps[subField];
-          subItem["order"] = subTableOrder + subItem["order"];
-          let subFieldKey = field + "@" + subField;
+          subItem['order'] = subTableOrder + subItem['order'];
+          let subFieldKey = field + '@' + subField;
           allFields[subFieldKey] = subItem;
           subNode.children.push({
             title: subItem.title,
             value: subFieldKey,
             isLeaf: true,
-            order: subItem["order"]
+            order: subItem['order'],
           });
         });
         orderField(subNode);
         treeData.push(subNode);
         order++;
       } else {
-        let fieldKey = table + "@" + field;
+        let fieldKey = table + '@' + field;
         allFields[fieldKey] = item;
         mainNode.children.push({
           title: item.title,
           value: fieldKey,
           isLeaf: true,
-          order: item.order
+          order: item.order,
         });
       }
     });
@@ -302,7 +336,7 @@ function useSuperQuery() {
   }
   function orderField(data) {
     let arr = data.children;
-    arr.sort(function(a, b) {
+    arr.sort(function (a, b) {
       return a.order - b.order;
     });
   }
@@ -338,21 +372,21 @@ function useSuperQuery() {
     getSchema,
     loading,
     getQueryInfo,
-    initDefaultValues
+    initDefaultValues,
   };
 }
-var OnlineSuperQuery_vue_vue_type_style_index_0_scoped_true_lang = "";
+var OnlineSuperQuery_vue_vue_type_style_index_0_scoped_true_lang = '';
 const _sfc_main = {
-  name: "OnlineSuperQuery",
+  name: 'OnlineSuperQuery',
   props: {
     config: {
       type: Object,
-      default: []
+      default: [],
     },
     status: {
       type: Boolean,
-      default: false
-    }
+      default: false,
+    },
   },
   components: {
     BasicModal,
@@ -362,9 +396,9 @@ const _sfc_main = {
     FileTextOutlined,
     CloseCircleOutlined,
     AppstoreTwoTone,
-    Divider
+    Divider,
   },
-  emits: ["search"],
+  emits: ['search'],
   setup(props, { emit }) {
     const [registerFormModal, formModal] = useModal();
     const { createMessage: $message } = useMessage();
@@ -372,18 +406,18 @@ const _sfc_main = {
       formModal.closeModal();
     }
     function handleSubmit() {
-      console.log("handleSubmit", dynamicRowValues.values);
+      console.log('handleSubmit', dynamicRowValues.values);
       let dataArray = getQueryInfo(true);
       if (dataArray && dataArray.length > 0) {
-        emit("search", dataArray, matchType.value);
+        emit('search', dataArray, matchType.value);
       } else {
-        $message.warning("\u7A7A\u6761\u4EF6\u65E0\u6CD5\u67E5\u8BE2\uFF01");
+        $message.warning('\u7A7A\u6761\u4EF6\u65E0\u6CD5\u67E5\u8BE2\uFF01');
       }
     }
     function handleReset() {
       dynamicRowValues.values = [];
       addOne(false);
-      emit("search", [], matchType.value);
+      emit('search', [], matchType.value);
     }
     const {
       formRef,
@@ -404,24 +438,28 @@ const _sfc_main = {
       getSchema,
       loading,
       getQueryInfo,
-      initDefaultValues
+      initDefaultValues,
     } = useSuperQuery();
     const superQueryFlag = ref(false);
-    watch(() => props.status, (val) => {
-      superQueryFlag.value = val;
-    }, { immediate: true });
+    watch(
+      () => props.status,
+      (val) => {
+        superQueryFlag.value = val;
+      },
+      { immediate: true }
+    );
     function handleOpen() {
       formModal.openModal();
       addOne(true);
     }
     function getPopupContainer() {
-      return document.getElementsByClassName("jee-super-query-form")[0];
+      return document.getElementsByClassName('jee-super-query-form')[0];
     }
     function onFinish(a) {
-      console.log("onfinish", a);
+      console.log('onfinish', a);
     }
     function handleChangeField(item) {
-      item["val"] = "";
+      item['val'] = '';
     }
     return {
       formRef,
@@ -450,463 +488,685 @@ const _sfc_main = {
       getPopupContainer,
       superQueryFlag,
       handleOpen,
-      initDefaultValues
+      initDefaultValues,
     };
-  }
+  },
 };
-const _withScopeId = (n) => (pushScopeId("data-v-08fc9755"), n = n(), popScopeId(), n);
-const _hoisted_1 = { class: "j-super-query-button" };
-const _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", null, "\u5DF2\u6709\u9AD8\u7EA7\u67E5\u8BE2\u6761\u4EF6\u751F\u6548", -1));
-const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", null, "\u9AD8\u7EA7\u67E5\u8BE2", -1));
-const _hoisted_4 = /* @__PURE__ */ createTextVNode(" \u9AD8\u7EA7\u67E5\u8BE2 ");
-const _hoisted_5 = { style: { "float": "left" } };
-const _hoisted_6 = /* @__PURE__ */ createTextVNode("\u91CD\u7F6E");
-const _hoisted_7 = /* @__PURE__ */ createTextVNode("\u4FDD\u5B58\u67E5\u8BE2\u6761\u4EF6");
-const _hoisted_8 = /* @__PURE__ */ createTextVNode("\u786E\u5B9A");
-const _hoisted_9 = /* @__PURE__ */ createTextVNode("\u5173\u95ED");
-const _hoisted_10 = { slot: "description" };
-const _hoisted_11 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", null, "\u6CA1\u6709\u4EFB\u4F55\u67E5\u8BE2\u6761\u4EF6", -1));
-const _hoisted_12 = /* @__PURE__ */ createTextVNode("AND\uFF08\u6240\u6709\u6761\u4EF6\u90FD\u8981\u6C42\u5339\u914D\uFF09");
-const _hoisted_13 = /* @__PURE__ */ createTextVNode("OR\uFF08\u6761\u4EF6\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u5339\u914D\uFF09");
-const _hoisted_14 = /* @__PURE__ */ createTextVNode("\u7B49\u4E8E");
-const _hoisted_15 = /* @__PURE__ */ createTextVNode("\u6A21\u7CCA");
-const _hoisted_16 = /* @__PURE__ */ createTextVNode("\u4EE5..\u5F00\u59CB");
-const _hoisted_17 = /* @__PURE__ */ createTextVNode("\u4EE5..\u7ED3\u5C3E");
-const _hoisted_18 = /* @__PURE__ */ createTextVNode("\u5728...\u4E2D");
-const _hoisted_19 = /* @__PURE__ */ createTextVNode("\u4E0D\u7B49\u4E8E");
-const _hoisted_20 = /* @__PURE__ */ createTextVNode("\u5927\u4E8E");
-const _hoisted_21 = /* @__PURE__ */ createTextVNode("\u5927\u4E8E\u7B49\u4E8E");
-const _hoisted_22 = /* @__PURE__ */ createTextVNode("\u5C0F\u4E8E");
-const _hoisted_23 = /* @__PURE__ */ createTextVNode("\u5C0F\u4E8E\u7B49\u4E8E");
-const _hoisted_24 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("div", null, "\u4FDD\u5B58\u7684\u67E5\u8BE2", -1));
-const _hoisted_25 = ["title"];
-const _hoisted_26 = { class: "icon-cancle" };
-const _hoisted_27 = { style: { "height": "80px", "line-height": "75px", "width": "100%", "text-align": "center" } };
+const _withScopeId = (n) => (pushScopeId('data-v-08fc9755'), (n = n()), popScopeId(), n);
+const _hoisted_1 = { class: 'j-super-query-button' };
+const _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', null, '\u5DF2\u6709\u9AD8\u7EA7\u67E5\u8BE2\u6761\u4EF6\u751F\u6548', -1));
+const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', null, '\u9AD8\u7EA7\u67E5\u8BE2', -1));
+// yg 高级查询按钮
+const _hoisted_4 = /* @__PURE__ */ createTextVNode(' \u9AD8\u7EA7\u67E5\u8BE2 ');
+const _hoisted_5 = { style: { float: 'left' } };
+const _hoisted_6 = /* @__PURE__ */ createTextVNode('\u91CD\u7F6E');
+const _hoisted_7 = /* @__PURE__ */ createTextVNode('\u4FDD\u5B58\u67E5\u8BE2\u6761\u4EF6');
+const _hoisted_8 = /* @__PURE__ */ createTextVNode('\u786E\u5B9A');
+const _hoisted_9 = /* @__PURE__ */ createTextVNode('\u5173\u95ED');
+const _hoisted_10 = { slot: 'description' };
+const _hoisted_11 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('span', null, '\u6CA1\u6709\u4EFB\u4F55\u67E5\u8BE2\u6761\u4EF6', -1));
+const _hoisted_12 = /* @__PURE__ */ createTextVNode('AND\uFF08\u6240\u6709\u6761\u4EF6\u90FD\u8981\u6C42\u5339\u914D\uFF09');
+const _hoisted_13 = /* @__PURE__ */ createTextVNode('OR\uFF08\u6761\u4EF6\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u5339\u914D\uFF09');
+const _hoisted_14 = /* @__PURE__ */ createTextVNode('\u7B49\u4E8E');
+const _hoisted_15 = /* @__PURE__ */ createTextVNode('\u6A21\u7CCA');
+const _hoisted_16 = /* @__PURE__ */ createTextVNode('\u4EE5..\u5F00\u59CB');
+const _hoisted_17 = /* @__PURE__ */ createTextVNode('\u4EE5..\u7ED3\u5C3E');
+const _hoisted_18 = /* @__PURE__ */ createTextVNode('\u5728...\u4E2D');
+const _hoisted_19 = /* @__PURE__ */ createTextVNode('\u4E0D\u7B49\u4E8E');
+const _hoisted_20 = /* @__PURE__ */ createTextVNode('\u5927\u4E8E');
+const _hoisted_21 = /* @__PURE__ */ createTextVNode('\u5927\u4E8E\u7B49\u4E8E');
+const _hoisted_22 = /* @__PURE__ */ createTextVNode('\u5C0F\u4E8E');
+const _hoisted_23 = /* @__PURE__ */ createTextVNode('\u5C0F\u4E8E\u7B49\u4E8E');
+const _hoisted_24 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode('div', null, '\u4FDD\u5B58\u7684\u67E5\u8BE2', -1));
+const _hoisted_25 = ['title'];
+const _hoisted_26 = { class: 'icon-cancle' };
+const _hoisted_27 = { style: { height: '80px', 'line-height': '75px', width: '100%', 'text-align': 'center' } };
 function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
-  const _component_divider = resolveComponent("divider");
-  const _component_AppstoreTwoTone = resolveComponent("AppstoreTwoTone");
-  const _component_a_button = resolveComponent("a-button");
-  const _component_a_button_group = resolveComponent("a-button-group");
-  const _component_a_tooltip = resolveComponent("a-tooltip");
-  const _component_a_divider = resolveComponent("a-divider");
-  const _component_a_empty = resolveComponent("a-empty");
-  const _component_a_select_option = resolveComponent("a-select-option");
-  const _component_a_select = resolveComponent("a-select");
-  const _component_a_form_item = resolveComponent("a-form-item");
-  const _component_a_col = resolveComponent("a-col");
-  const _component_a_row = resolveComponent("a-row");
-  const _component_a_tree_select = resolveComponent("a-tree-select");
-  const _component_online_super_query_val_component = resolveComponent("online-super-query-val-component");
-  const _component_PlusOutlined = resolveComponent("PlusOutlined");
-  const _component_MinusCircleOutlined = resolveComponent("MinusCircleOutlined");
-  const _component_a_space = resolveComponent("a-space");
-  const _component_a_form = resolveComponent("a-form");
-  const _component_close_circle_outlined = resolveComponent("close-circle-outlined");
-  const _component_file_text_outlined = resolveComponent("file-text-outlined");
-  const _component_a_tree = resolveComponent("a-tree");
-  const _component_a_card = resolveComponent("a-card");
-  const _component_BasicModal = resolveComponent("BasicModal");
-  const _component_a_input = resolveComponent("a-input");
-  const _component_a_modal = resolveComponent("a-modal");
-  return openBlock(), createElementBlock(Fragment, null, [
-    createElementVNode("div", _hoisted_1, [
-      $setup.superQueryFlag ? (openBlock(), createBlock(_component_a_tooltip, {
-        key: 0,
-        mouseLeaveDelay: 0.2
-      }, {
-        title: withCtx(() => [
-          _hoisted_2,
-          createVNode(_component_divider, {
-            type: "vertical",
-            style: { "background-color": "#fff" }
-          }),
-          createElementVNode("a", {
-            onClick: _cache[0] || (_cache[0] = (...args) => $setup.handleReset && $setup.handleReset(...args))
-          }, "\u6E05\u7A7A")
+  const _component_divider = resolveComponent('divider');
+  const _component_AppstoreTwoTone = resolveComponent('AppstoreTwoTone');
+  const _component_a_button = resolveComponent('a-button');
+  const _component_a_button_group = resolveComponent('a-button-group');
+  const _component_a_tooltip = resolveComponent('a-tooltip');
+  const _component_a_divider = resolveComponent('a-divider');
+  const _component_a_empty = resolveComponent('a-empty');
+  const _component_a_select_option = resolveComponent('a-select-option');
+  const _component_a_select = resolveComponent('a-select');
+  const _component_a_form_item = resolveComponent('a-form-item');
+  const _component_a_col = resolveComponent('a-col');
+  const _component_a_row = resolveComponent('a-row');
+  const _component_a_tree_select = resolveComponent('a-tree-select');
+  const _component_online_super_query_val_component = resolveComponent('online-super-query-val-component');
+  const _component_PlusOutlined = resolveComponent('PlusOutlined');
+  const _component_MinusCircleOutlined = resolveComponent('MinusCircleOutlined');
+  const _component_a_space = resolveComponent('a-space');
+  const _component_a_form = resolveComponent('a-form');
+  const _component_close_circle_outlined = resolveComponent('close-circle-outlined');
+  const _component_file_text_outlined = resolveComponent('file-text-outlined');
+  const _component_a_tree = resolveComponent('a-tree');
+  const _component_a_card = resolveComponent('a-card');
+  const _component_BasicModal = resolveComponent('BasicModal');
+  const _component_a_input = resolveComponent('a-input');
+  const _component_a_modal = resolveComponent('a-modal');
+  return (
+    openBlock(),
+    createElementBlock(
+      Fragment,
+      null,
+      [
+        createElementVNode('div', _hoisted_1, [
+          $setup.superQueryFlag
+            ? (openBlock(),
+              createBlock(
+                _component_a_tooltip,
+                {
+                  key: 0,
+                  mouseLeaveDelay: 0.2,
+                },
+                {
+                  title: withCtx(() => [
+                    _hoisted_2,
+                    createVNode(_component_divider, {
+                      type: 'vertical',
+                      style: { 'background-color': '#fff' },
+                    }),
+                    createElementVNode(
+                      'a',
+                      {
+                        onClick: _cache[0] || (_cache[0] = (...args) => $setup.handleReset && $setup.handleReset(...args)),
+                      },
+                      '\u6E05\u7A7A'
+                    ),
+                  ]),
+                  default: withCtx(() => [
+                    createVNode(_component_a_button_group, null, {
+                      default: withCtx(() => [
+                        createVNode(
+                          _component_a_button,
+                          {
+                            type: 'primary',
+                            onClick: $setup.handleOpen,
+                          },
+                          {
+                            default: withCtx(() => [createVNode(_component_AppstoreTwoTone, { spin: true }), _hoisted_3]),
+                            _: 1,
+                          },
+                          8,
+                          ['onClick']
+                        ),
+                      ]),
+                      _: 1,
+                    }),
+                  ]),
+                  _: 1,
+                },
+                8,
+                ['mouseLeaveDelay']
+              ))
+            : (openBlock(),
+              createBlock(
+                _component_a_button,
+                {
+                  key: 1,
+                  type: 'primary',
+                  preIcon: 'ant-design:filter-outlined',
+                  onClick: $setup.handleOpen,
+                },
+                {
+                  default: withCtx(() => [_hoisted_4]),
+                  _: 1,
+                },
+                8,
+                ['onClick']
+              )),
         ]),
-        default: withCtx(() => [
-          createVNode(_component_a_button_group, null, {
-            default: withCtx(() => [
-              createVNode(_component_a_button, {
-                type: "primary",
-                onClick: $setup.handleOpen
-              }, {
-                default: withCtx(() => [
-                  createVNode(_component_AppstoreTwoTone, { spin: true }),
-                  _hoisted_3
+        // yg 高级查询构造器
+        (openBlock(),
+        createBlock(Teleport, { to: 'body' }, [
+          createVNode(
+            _component_BasicModal,
+            {
+              title: '\u9AD8\u7EA7\u67E5\u8BE2\u6784\u9020\u5668',
+              canFullscreen: false,
+              width: 1050,
+              onRegister: $setup.registerFormModal,
+              onOk: $setup.handleSubmit,
+            },
+            {
+              footer: withCtx(() => [
+                createElementVNode('div', _hoisted_5, [
+                  createVNode(
+                    _component_a_button,
+                    {
+                      loading: $setup.loading,
+                      onClick: $setup.handleReset,
+                    },
+                    {
+                      default: withCtx(() => [_hoisted_6]),
+                      _: 1,
+                    },
+                    8,
+                    ['loading', 'onClick']
+                  ),
+                  createVNode(
+                    _component_a_button,
+                    {
+                      loading: $setup.loading,
+                      onClick: $setup.handleSave,
+                    },
+                    {
+                      default: withCtx(() => [_hoisted_7]),
+                      _: 1,
+                    },
+                    8,
+                    ['loading', 'onClick']
+                  ),
                 ]),
-                _: 1
-              }, 8, ["onClick"])
-            ]),
-            _: 1
-          })
-        ]),
-        _: 1
-      }, 8, ["mouseLeaveDelay"])) : (openBlock(), createBlock(_component_a_button, {
-        key: 1,
-        type: "primary",
-        preIcon: "ant-design:filter-outlined",
-        onClick: $setup.handleOpen
-      }, {
-        default: withCtx(() => [
-          _hoisted_4
-        ]),
-        _: 1
-      }, 8, ["onClick"]))
-    ]),
-    (openBlock(), createBlock(Teleport, { to: "body" }, [
-      createVNode(_component_BasicModal, {
-        title: "\u9AD8\u7EA7\u67E5\u8BE2\u6784\u9020\u5668",
-        canFullscreen: false,
-        width: 1050,
-        onRegister: $setup.registerFormModal,
-        onOk: $setup.handleSubmit
-      }, {
-        footer: withCtx(() => [
-          createElementVNode("div", _hoisted_5, [
-            createVNode(_component_a_button, {
-              loading: $setup.loading,
-              onClick: $setup.handleReset
-            }, {
-              default: withCtx(() => [
-                _hoisted_6
+                createVNode(
+                  _component_a_button,
+                  {
+                    key: 'submit',
+                    type: 'primary',
+                    onClick: $setup.handleSubmit,
+                  },
+                  {
+                    default: withCtx(() => [_hoisted_8]),
+                    _: 1,
+                  },
+                  8,
+                  ['onClick']
+                ),
+                createVNode(
+                  _component_a_button,
+                  {
+                    key: 'back',
+                    onClick: $setup.handleCancel,
+                  },
+                  {
+                    default: withCtx(() => [_hoisted_9]),
+                    _: 1,
+                  },
+                  8,
+                  ['onClick']
+                ),
               ]),
-              _: 1
-            }, 8, ["loading", "onClick"]),
-            createVNode(_component_a_button, {
-              loading: $setup.loading,
-              onClick: $setup.handleSave
-            }, {
               default: withCtx(() => [
-                _hoisted_7
-              ]),
-              _: 1
-            }, 8, ["loading", "onClick"])
-          ]),
-          createVNode(_component_a_button, {
-            key: "submit",
-            type: "primary",
-            onClick: $setup.handleSubmit
-          }, {
-            default: withCtx(() => [
-              _hoisted_8
-            ]),
-            _: 1
-          }, 8, ["onClick"]),
-          createVNode(_component_a_button, {
-            key: "back",
-            onClick: $setup.handleCancel
-          }, {
-            default: withCtx(() => [
-              _hoisted_9
-            ]),
-            _: 1
-          }, 8, ["onClick"])
-        ]),
-        default: withCtx(() => [
-          $setup.dynamicRowValues.values.length == 0 ? (openBlock(), createBlock(_component_a_empty, { key: 0 }, {
-            default: withCtx(() => [
-              createElementVNode("div", _hoisted_10, [
-                _hoisted_11,
-                createVNode(_component_a_divider, { type: "vertical" }),
-                createElementVNode("a", {
-                  onClick: _cache[1] || (_cache[1] = ($event) => $setup.addOne(-1))
-                }, "\u70B9\u51FB\u65B0\u589E")
-              ])
-            ]),
-            _: 1
-          })) : createCommentVNode("", true),
-          createVNode(_component_a_row, {
-            class: normalizeClass("j-super-query-modal-content")
-          }, {
-            default: withCtx(() => [
-              createVNode(_component_a_col, {
-                sm: 24,
-                md: 18
-              }, {
-                default: withCtx(() => [
-                  withDirectives(createVNode(_component_a_row, null, {
-                    default: withCtx(() => [
-                      createVNode(_component_a_col, {
-                        md: 12,
-                        xs: 24
-                      }, {
+                $setup.dynamicRowValues.values.length == 0
+                  ? (openBlock(),
+                    createBlock(
+                      _component_a_empty,
+                      { key: 0 },
+                      {
                         default: withCtx(() => [
-                          createVNode(_component_a_form_item, {
-                            label: "\u8FC7\u6EE4\u6761\u4EF6\u5339\u914D",
-                            labelCol: { md: 6, xs: 24 },
-                            wrapperCol: { md: 18, xs: 24 },
-                            style: { "width": "100%" }
-                          }, {
-                            default: withCtx(() => [
-                              createVNode(_component_a_select, {
-                                value: $setup.matchType,
-                                "onUpdate:value": _cache[2] || (_cache[2] = ($event) => $setup.matchType = $event),
-                                getPopupContainer: (node) => node.parentNode,
-                                style: { "width": "100%" }
-                              }, {
-                                default: withCtx(() => [
-                                  createVNode(_component_a_select_option, { value: "and" }, {
-                                    default: withCtx(() => [
-                                      _hoisted_12
-                                    ]),
-                                    _: 1
-                                  }),
-                                  createVNode(_component_a_select_option, { value: "or" }, {
-                                    default: withCtx(() => [
-                                      _hoisted_13
-                                    ]),
-                                    _: 1
-                                  })
-                                ]),
-                                _: 1
-                              }, 8, ["value", "getPopupContainer"])
-                            ]),
-                            _: 1
-                          })
+                          createElementVNode('div', _hoisted_10, [
+                            _hoisted_11,
+                            createVNode(_component_a_divider, { type: 'vertical' }),
+                            createElementVNode(
+                              'a',
+                              {
+                                onClick: _cache[1] || (_cache[1] = ($event) => $setup.addOne(-1)),
+                              },
+                              '\u70B9\u51FB\u65B0\u589E'
+                            ),
+                          ]),
                         ]),
-                        _: 1
-                      })
-                    ]),
-                    _: 1
-                  }, 512), [
-                    [vShow, $setup.dynamicRowValues.values.length > 0]
-                  ]),
-                  withDirectives(createVNode(_component_a_form, {
-                    ref: "formRef",
-                    class: normalizeClass("jee-super-query-form"),
-                    model: $setup.dynamicRowValues,
-                    onFinish: $setup.onFinish
-                  }, {
+                        _: 1,
+                      }
+                    ))
+                  : createCommentVNode('', true),
+                createVNode(
+                  _component_a_row,
+                  {
+                    class: normalizeClass('j-super-query-modal-content'),
+                  },
+                  {
                     default: withCtx(() => [
-                      (openBlock(true), createElementBlock(Fragment, null, renderList($setup.dynamicRowValues.values, (item, index) => {
-                        return openBlock(), createBlock(_component_a_space, {
-                          key: item.key,
-                          style: { "display": "flex", "margin-bottom": "8px" },
-                          align: "baseline"
-                        }, {
+                      createVNode(
+                        _component_a_col,
+                        {
+                          sm: 24,
+                          md: 18,
+                        },
+                        {
                           default: withCtx(() => [
-                            createVNode(_component_a_form_item, {
-                              name: ["values", index, "field"],
-                              style: { "width": "180px" }
-                            }, {
-                              default: withCtx(() => [
-                                createVNode(_component_a_tree_select, {
-                                  style: { "width": "100%" },
-                                  placeholder: "\u8BF7\u9009\u62E9\u5B57\u6BB5",
-                                  value: item.field,
-                                  "onUpdate:value": ($event) => item.field = $event,
-                                  "show-search": "",
-                                  "tree-node-filter-prop": "title",
-                                  "allow-clear": "",
-                                  "tree-default-expand-all": "",
-                                  "dropdown-style": { maxHeight: "180px", overflow: "auto" },
-                                  onChange: ($event) => $setup.handleChangeField(item),
-                                  "tree-data": $setup.fieldTreeData
-                                }, null, 8, ["value", "onUpdate:value", "onChange", "tree-data"])
-                              ]),
-                              _: 2
-                            }, 1032, ["name"]),
-                            createVNode(_component_a_form_item, {
-                              name: ["values", index, "rule"],
-                              style: { "width": "180px" }
-                            }, {
-                              default: withCtx(() => [
-                                createVNode(_component_a_select, {
-                                  style: { "width": "100%" },
-                                  placeholder: "\u8BF7\u9009\u62E9\u5339\u914D\u89C4\u5219",
-                                  value: item.rule,
-                                  "onUpdate:value": ($event) => item.rule = $event
-                                }, {
+                            withDirectives(
+                              createVNode(
+                                _component_a_row,
+                                null,
+                                {
                                   default: withCtx(() => [
-                                    createVNode(_component_a_select_option, { value: "eq" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_14
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "like" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_15
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "right_like" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_16
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "left_like" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_17
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "in" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_18
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "ne" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_19
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "gt" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_20
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "ge" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_21
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "lt" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_22
-                                      ]),
-                                      _: 1
-                                    }),
-                                    createVNode(_component_a_select_option, { value: "le" }, {
-                                      default: withCtx(() => [
-                                        _hoisted_23
-                                      ]),
-                                      _: 1
-                                    })
+                                    createVNode(
+                                      _component_a_col,
+                                      {
+                                        md: 12,
+                                        xs: 24,
+                                      },
+                                      {
+                                        default: withCtx(() => [
+                                          createVNode(
+                                            _component_a_form_item,
+                                            {
+                                              label: '\u8FC7\u6EE4\u6761\u4EF6\u5339\u914D',
+                                              labelCol: { md: 6, xs: 24 },
+                                              wrapperCol: { md: 18, xs: 24 },
+                                              style: { width: '100%' },
+                                            },
+                                            {
+                                              default: withCtx(() => [
+                                                createVNode(
+                                                  _component_a_select,
+                                                  {
+                                                    value: $setup.matchType,
+                                                    'onUpdate:value': _cache[2] || (_cache[2] = ($event) => ($setup.matchType = $event)),
+                                                    getPopupContainer: (node) => node.parentNode,
+                                                    style: { width: '100%' },
+                                                  },
+                                                  {
+                                                    default: withCtx(() => [
+                                                      createVNode(
+                                                        _component_a_select_option,
+                                                        { value: 'and' },
+                                                        {
+                                                          default: withCtx(() => [_hoisted_12]),
+                                                          _: 1,
+                                                        }
+                                                      ),
+                                                      createVNode(
+                                                        _component_a_select_option,
+                                                        { value: 'or' },
+                                                        {
+                                                          default: withCtx(() => [_hoisted_13]),
+                                                          _: 1,
+                                                        }
+                                                      ),
+                                                    ]),
+                                                    _: 1,
+                                                  },
+                                                  8,
+                                                  ['value', 'getPopupContainer']
+                                                ),
+                                              ]),
+                                              _: 1,
+                                            }
+                                          ),
+                                        ]),
+                                        _: 1,
+                                      }
+                                    ),
                                   ]),
-                                  _: 2
-                                }, 1032, ["value", "onUpdate:value"])
-                              ]),
-                              _: 2
-                            }, 1032, ["name"]),
-                            createVNode(_component_a_form_item, {
-                              name: ["values", index, "val"],
-                              style: { "width": "280px" }
-                            }, {
-                              default: withCtx(() => [
-                                createVNode(_component_online_super_query_val_component, {
-                                  style: { "width": "100%" },
-                                  schema: $setup.getSchema(item, index),
-                                  formModel: item,
-                                  setFormModel: (key, value) => {
-                                    $setup.setFormModel(key, value, item);
-                                  }
-                                }, null, 8, ["schema", "formModel", "setFormModel"])
-                              ]),
-                              _: 2
-                            }, 1032, ["name"]),
-                            createVNode(_component_a_form_item, null, {
-                              default: withCtx(() => [
-                                createVNode(_component_a_button, {
-                                  onClick: ($event) => $setup.addOne(index),
-                                  style: { "margin-right": "6px" }
-                                }, {
+                                  _: 1,
+                                },
+                                512
+                              ),
+                              [[vShow, $setup.dynamicRowValues.values.length > 0]]
+                            ),
+                            withDirectives(
+                              createVNode(
+                                _component_a_form,
+                                {
+                                  ref: 'formRef',
+                                  class: normalizeClass('jee-super-query-form'),
+                                  model: $setup.dynamicRowValues,
+                                  onFinish: $setup.onFinish,
+                                },
+                                {
                                   default: withCtx(() => [
-                                    createVNode(_component_PlusOutlined)
+                                    (openBlock(true),
+                                    createElementBlock(
+                                      Fragment,
+                                      null,
+                                      renderList($setup.dynamicRowValues.values, (item, index) => {
+                                        return (
+                                          openBlock(),
+                                          createBlock(
+                                            _component_a_space,
+                                            {
+                                              key: item.key,
+                                              style: { display: 'flex', 'margin-bottom': '8px' },
+                                              align: 'baseline',
+                                            },
+                                            {
+                                              default: withCtx(() => [
+                                                createVNode(
+                                                  _component_a_form_item,
+                                                  {
+                                                    name: ['values', index, 'field'],
+                                                    style: { width: '180px' },
+                                                  },
+                                                  {
+                                                    default: withCtx(() => [
+                                                      createVNode(
+                                                        _component_a_tree_select,
+                                                        {
+                                                          style: { width: '100%' },
+                                                          placeholder: '\u8BF7\u9009\u62E9\u5B57\u6BB5',
+                                                          value: item.field,
+                                                          'onUpdate:value': ($event) => (item.field = $event),
+                                                          'show-search': '',
+                                                          'tree-node-filter-prop': 'title',
+                                                          'allow-clear': '',
+                                                          'tree-default-expand-all': '',
+                                                          'dropdown-style': { maxHeight: '180px', overflow: 'auto' },
+                                                          onChange: ($event) => $setup.handleChangeField(item),
+                                                          'tree-data': $setup.fieldTreeData,
+                                                        },
+                                                        null,
+                                                        8,
+                                                        ['value', 'onUpdate:value', 'onChange', 'tree-data']
+                                                      ),
+                                                    ]),
+                                                    _: 2,
+                                                  },
+                                                  1032,
+                                                  ['name']
+                                                ),
+                                                createVNode(
+                                                  _component_a_form_item,
+                                                  {
+                                                    name: ['values', index, 'rule'],
+                                                    style: { width: '180px' },
+                                                  },
+                                                  {
+                                                    default: withCtx(() => [
+                                                      createVNode(
+                                                        _component_a_select,
+                                                        {
+                                                          style: { width: '100%' },
+                                                          placeholder: '\u8BF7\u9009\u62E9\u5339\u914D\u89C4\u5219',
+                                                          value: item.rule,
+                                                          'onUpdate:value': ($event) => (item.rule = $event),
+                                                        },
+                                                        {
+                                                          default: withCtx(() => [
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'eq' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_14]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'like' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_15]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'right_like' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_16]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'left_like' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_17]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'in' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_18]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'ne' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_19]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'gt' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_20]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'ge' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_21]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'lt' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_22]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                            createVNode(
+                                                              _component_a_select_option,
+                                                              { value: 'le' },
+                                                              {
+                                                                default: withCtx(() => [_hoisted_23]),
+                                                                _: 1,
+                                                              }
+                                                            ),
+                                                          ]),
+                                                          _: 2,
+                                                        },
+                                                        1032,
+                                                        ['value', 'onUpdate:value']
+                                                      ),
+                                                    ]),
+                                                    _: 2,
+                                                  },
+                                                  1032,
+                                                  ['name']
+                                                ),
+                                                createVNode(
+                                                  _component_a_form_item,
+                                                  {
+                                                    name: ['values', index, 'val'],
+                                                    style: { width: '280px' },
+                                                  },
+                                                  {
+                                                    default: withCtx(() => [
+                                                      createVNode(
+                                                        _component_online_super_query_val_component,
+                                                        {
+                                                          style: { width: '100%' },
+                                                          schema: $setup.getSchema(item, index),
+                                                          formModel: item,
+                                                          setFormModel: (key, value) => {
+                                                            $setup.setFormModel(key, value, item);
+                                                          },
+                                                        },
+                                                        null,
+                                                        8,
+                                                        ['schema', 'formModel', 'setFormModel']
+                                                      ),
+                                                    ]),
+                                                    _: 2,
+                                                  },
+                                                  1032,
+                                                  ['name']
+                                                ),
+                                                createVNode(
+                                                  _component_a_form_item,
+                                                  null,
+                                                  {
+                                                    default: withCtx(() => [
+                                                      createVNode(
+                                                        _component_a_button,
+                                                        {
+                                                          onClick: ($event) => $setup.addOne(index),
+                                                          style: { 'margin-right': '6px' },
+                                                        },
+                                                        {
+                                                          default: withCtx(() => [createVNode(_component_PlusOutlined)]),
+                                                          _: 2,
+                                                        },
+                                                        1032,
+                                                        ['onClick']
+                                                      ),
+                                                      createVNode(
+                                                        _component_a_button,
+                                                        {
+                                                          onClick: ($event) => $setup.removeOne(item),
+                                                        },
+                                                        {
+                                                          default: withCtx(() => [createVNode(_component_MinusCircleOutlined)]),
+                                                          _: 2,
+                                                        },
+                                                        1032,
+                                                        ['onClick']
+                                                      ),
+                                                    ]),
+                                                    _: 2,
+                                                  },
+                                                  1024
+                                                ),
+                                              ]),
+                                              _: 2,
+                                            },
+                                            1024
+                                          )
+                                        );
+                                      }),
+                                      128
+                                    )),
                                   ]),
-                                  _: 2
-                                }, 1032, ["onClick"]),
-                                createVNode(_component_a_button, {
-                                  onClick: ($event) => $setup.removeOne(item)
-                                }, {
-                                  default: withCtx(() => [
-                                    createVNode(_component_MinusCircleOutlined)
-                                  ]),
-                                  _: 2
-                                }, 1032, ["onClick"])
-                              ]),
-                              _: 2
-                            }, 1024)
+                                  _: 1,
+                                },
+                                8,
+                                ['model', 'onFinish']
+                              ),
+                              [[vShow, $setup.dynamicRowValues.values.length > 0]]
+                            ),
                           ]),
-                          _: 2
-                        }, 1024);
-                      }), 128))
-                    ]),
-                    _: 1
-                  }, 8, ["model", "onFinish"]), [
-                    [vShow, $setup.dynamicRowValues.values.length > 0]
-                  ])
-                ]),
-                _: 1
-              }),
-              createVNode(_component_a_col, {
-                sm: 24,
-                md: 6
-              }, {
-                default: withCtx(() => [
-                  createVNode(_component_a_card, {
-                    class: "j-super-query-history-card",
-                    bordered: true
-                  }, {
-                    title: withCtx(() => [
-                      _hoisted_24
-                    ]),
-                    default: withCtx(() => [
-                      $setup.saveTreeData.length === 0 ? (openBlock(), createBlock(_component_a_empty, {
-                        key: 0,
-                        class: "j-super-query-history-empty",
-                        description: "\u6CA1\u6709\u4FDD\u5B58\u4EFB\u4F55\u67E5\u8BE2"
-                      })) : (openBlock(), createBlock(_component_a_tree, {
-                        key: 1,
-                        class: "j-super-query-history-tree",
-                        treeData: $setup.saveTreeData,
-                        selectedKeys: [],
-                        "show-icon": true,
-                        onSelect: $setup.handleTreeSelect
-                      }, {
-                        title: withCtx(({ title }) => [
-                          createElementVNode("div", null, [
-                            createElementVNode("span", { title }, toDisplayString(title.length > 10 ? title.substring(0, 10) + "..." : title), 9, _hoisted_25),
-                            createElementVNode("span", _hoisted_26, [
-                              createVNode(_component_close_circle_outlined, {
-                                onClick: ($event) => $setup.handleRemoveSaveInfo(title)
-                              }, null, 8, ["onClick"])
-                            ])
-                          ])
-                        ]),
-                        custom: withCtx(() => [
-                          createVNode(_component_file_text_outlined)
-                        ]),
-                        _: 1
-                      }, 8, ["treeData", "onSelect"]))
+                          _: 1,
+                        }
+                      ),
+                      createVNode(
+                        _component_a_col,
+                        {
+                          sm: 24,
+                          md: 6,
+                        },
+                        {
+                          default: withCtx(() => [
+                            createVNode(
+                              _component_a_card,
+                              {
+                                class: 'j-super-query-history-card',
+                                bordered: true,
+                              },
+                              {
+                                title: withCtx(() => [_hoisted_24]),
+                                default: withCtx(() => [
+                                  $setup.saveTreeData.length === 0
+                                    ? (openBlock(),
+                                      createBlock(_component_a_empty, {
+                                        key: 0,
+                                        class: 'j-super-query-history-empty',
+                                        description: '\u6CA1\u6709\u4FDD\u5B58\u4EFB\u4F55\u67E5\u8BE2',
+                                      }))
+                                    : (openBlock(),
+                                      createBlock(
+                                        _component_a_tree,
+                                        {
+                                          key: 1,
+                                          class: 'j-super-query-history-tree',
+                                          treeData: $setup.saveTreeData,
+                                          selectedKeys: [],
+                                          'show-icon': true,
+                                          onSelect: $setup.handleTreeSelect,
+                                        },
+                                        {
+                                          title: withCtx(({ title }) => [
+                                            createElementVNode('div', null, [
+                                              createElementVNode('span', { title }, toDisplayString(title.length > 10 ? title.substring(0, 10) + '...' : title), 9, _hoisted_25),
+                                              createElementVNode('span', _hoisted_26, [
+                                                createVNode(
+                                                  _component_close_circle_outlined,
+                                                  {
+                                                    onClick: ($event) => $setup.handleRemoveSaveInfo(title),
+                                                  },
+                                                  null,
+                                                  8,
+                                                  ['onClick']
+                                                ),
+                                              ]),
+                                            ]),
+                                          ]),
+                                          custom: withCtx(() => [createVNode(_component_file_text_outlined)]),
+                                          _: 1,
+                                        },
+                                        8,
+                                        ['treeData', 'onSelect']
+                                      )),
+                                ]),
+                                _: 1,
+                              }
+                            ),
+                          ]),
+                          _: 1,
+                        }
+                      ),
                     ]),
-                    _: 1
-                  })
-                ]),
-                _: 1
-              })
+                    _: 1,
+                  }
+                ),
+              ]),
+              _: 1,
+            },
+            8,
+            ['onRegister', 'onOk']
+          ),
+        ])),
+        createVNode(
+          _component_a_modal,
+          {
+            title: '\u8BF7\u8F93\u5165\u4FDD\u5B58\u7684\u540D\u79F0',
+            visible: $setup.saveInfo.visible,
+            onCancel: _cache[4] || (_cache[4] = ($event) => ($setup.saveInfo.visible = false)),
+            onOk: $setup.doSaveQueryInfo,
+          },
+          {
+            default: withCtx(() => [
+              createElementVNode('div', _hoisted_27, [
+                createVNode(
+                  _component_a_input,
+                  {
+                    value: $setup.saveInfo.title,
+                    'onUpdate:value': _cache[3] || (_cache[3] = ($event) => ($setup.saveInfo.title = $event)),
+                    style: { width: '90%' },
+                    placeholder: '\u8BF7\u8F93\u5165\u4FDD\u5B58\u7684\u540D\u79F0',
+                  },
+                  null,
+                  8,
+                  ['value']
+                ),
+              ]),
             ]),
-            _: 1
-          })
-        ]),
-        _: 1
-      }, 8, ["onRegister", "onOk"])
-    ])),
-    createVNode(_component_a_modal, {
-      title: "\u8BF7\u8F93\u5165\u4FDD\u5B58\u7684\u540D\u79F0",
-      visible: $setup.saveInfo.visible,
-      onCancel: _cache[4] || (_cache[4] = ($event) => $setup.saveInfo.visible = false),
-      onOk: $setup.doSaveQueryInfo
-    }, {
-      default: withCtx(() => [
-        createElementVNode("div", _hoisted_27, [
-          createVNode(_component_a_input, {
-            value: $setup.saveInfo.title,
-            "onUpdate:value": _cache[3] || (_cache[3] = ($event) => $setup.saveInfo.title = $event),
-            style: { "width": "90%" },
-            placeholder: "\u8BF7\u8F93\u5165\u4FDD\u5B58\u7684\u540D\u79F0"
-          }, null, 8, ["value"])
-        ])
-      ]),
-      _: 1
-    }, 8, ["visible", "onOk"])
-  ], 64);
+            _: 1,
+          },
+          8,
+          ['visible', 'onOk']
+        ),
+      ],
+      64
+    )
+  );
 }
-var OnlineSuperQuery = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__scopeId", "data-v-08fc9755"]]);
+var OnlineSuperQuery = /* @__PURE__ */ _export_sfc(_sfc_main, [
+  ['render', _sfc_render],
+  ['__scopeId', 'data-v-08fc9755'],
+]);
 export { OnlineSuperQuery as default };
diff --git a/node_modules/@jeecg/online/OnlineSuperQueryValComponent.vue_vue_type_script_lang.js b/node_modules/@jeecg/online/OnlineSuperQueryValComponent.vue_vue_type_script_lang.js
index 2bcbfe8..fc51b33 100644
--- a/node_modules/@jeecg/online/OnlineSuperQueryValComponent.vue_vue_type_script_lang.js
+++ b/node_modules/@jeecg/online/OnlineSuperQueryValComponent.vue_vue_type_script_lang.js
@@ -4,26 +4,24 @@ var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
 var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) => (key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : (obj[key] = value));
 var __spreadValues = (a, b) => {
-  for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
 var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
-import { defineComponent, computed, createVNode, unref } from "vue";
-import { componentMap } from "/@/components/Form/src/componentMap";
-import { createPlaceholderMessage } from "/@/components/Form/src/helper";
-import { isFunction } from "/@/utils/is";
-import { t as toString } from "./toString.js";
+import { defineComponent, computed, createVNode, unref } from 'vue';
+import { componentMap } from '/@/components/Form/src/componentMap';
+import { createPlaceholderMessage } from '/@/components/Form/src/helper';
+import { isFunction } from '/@/utils/is';
+import { t as toString } from './toString.js';
 function baseSlice(array, start, end) {
-  var index = -1, length = array.length;
+  var index = -1,
+    length = array.length;
   if (start < 0) {
     start = -start > length ? 0 : length + start;
   }
@@ -31,7 +29,7 @@ function baseSlice(array, start, end) {
   if (end < 0) {
     end += length;
   }
-  length = start > end ? 0 : end - start >>> 0;
+  length = start > end ? 0 : (end - start) >>> 0;
   start >>>= 0;
   var result = Array(length);
   while (++index < length) {
@@ -44,19 +42,40 @@ function castSlice(array, start, end) {
   end = end === void 0 ? length : end;
   return !start && end >= length ? array : baseSlice(array, start, end);
 }
-var rsAstralRange$1 = "\\ud800-\\udfff", rsComboMarksRange$1 = "\\u0300-\\u036f", reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$1 = "\\u20d0-\\u20ff", rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1, rsVarRange$1 = "\\ufe0e\\ufe0f";
-var rsZWJ$1 = "\\u200d";
-var reHasUnicode = RegExp("[" + rsZWJ$1 + rsAstralRange$1 + rsComboRange$1 + rsVarRange$1 + "]");
+var rsAstralRange$1 = '\\ud800-\\udfff',
+  rsComboMarksRange$1 = '\\u0300-\\u036f',
+  reComboHalfMarksRange$1 = '\\ufe20-\\ufe2f',
+  rsComboSymbolsRange$1 = '\\u20d0-\\u20ff',
+  rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1,
+  rsVarRange$1 = '\\ufe0e\\ufe0f';
+var rsZWJ$1 = '\\u200d';
+var reHasUnicode = RegExp('[' + rsZWJ$1 + rsAstralRange$1 + rsComboRange$1 + rsVarRange$1 + ']');
 function hasUnicode(string) {
   return reHasUnicode.test(string);
 }
 function asciiToArray(string) {
-  return string.split("");
+  return string.split('');
 }
-var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsVarRange = "\\ufe0e\\ufe0f";
-var rsAstral = "[" + rsAstralRange + "]", rsCombo = "[" + rsComboRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsZWJ = "\\u200d";
-var reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
-var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
+var rsAstralRange = '\\ud800-\\udfff',
+  rsComboMarksRange = '\\u0300-\\u036f',
+  reComboHalfMarksRange = '\\ufe20-\\ufe2f',
+  rsComboSymbolsRange = '\\u20d0-\\u20ff',
+  rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
+  rsVarRange = '\\ufe0e\\ufe0f';
+var rsAstral = '[' + rsAstralRange + ']',
+  rsCombo = '[' + rsComboRange + ']',
+  rsFitz = '\\ud83c[\\udffb-\\udfff]',
+  rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
+  rsNonAstral = '[^' + rsAstralRange + ']',
+  rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
+  rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
+  rsZWJ = '\\u200d';
+var reOptMod = rsModifier + '?',
+  rsOptVar = '[' + rsVarRange + ']?',
+  rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
+  rsSeq = rsOptVar + reOptMod + rsOptJoin,
+  rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
+var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
 function unicodeToArray(string) {
   return string.match(reUnicode) || [];
 }
@@ -64,109 +83,112 @@ function stringToArray(string) {
   return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
 }
 function createCaseFirst(methodName) {
-  return function(string) {
+  return function (string) {
     string = toString(string);
     var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
     var chr = strSymbols ? strSymbols[0] : string.charAt(0);
-    var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
+    var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
     return chr[methodName]() + trailing;
   };
 }
-var upperFirst = createCaseFirst("toUpperCase");
+var upperFirst = createCaseFirst('toUpperCase');
 var upperFirst$1 = upperFirst;
 var _sfc_main = defineComponent({
-  name: "OnlineSuperQueryValComponent",
+  name: 'OnlineSuperQueryValComponent',
   inheritAttrs: false,
   props: {
     schema: {
       type: Object,
-      default: () => ({})
+      default: () => ({}),
     },
     formModel: {
       type: Object,
-      default: () => ({})
+      default: () => ({}),
     },
     setFormModel: {
       type: Function,
-      default: null
-    }
+      default: null,
+    },
   },
   setup(props) {
     const getComponentsProps = computed(() => {
       var _a;
-      const {
-        schema,
-        formModel
-      } = props;
-      let {
-        componentProps = {}
-      } = schema;
+      const { schema, formModel } = props;
+      let { componentProps = {} } = schema;
       if (isFunction(componentProps)) {
-        componentProps = (_a = componentProps({
-          schema,
-          formModel
-        })) != null ? _a : {};
+        componentProps =
+          (_a = componentProps({
+            schema,
+            formModel,
+          })) != null
+            ? _a
+            : {};
       }
       return componentProps;
     });
     const getValues = computed(() => {
-      const {
-        formModel,
-        schema
-      } = props;
+      const { formModel, schema } = props;
       let obj = {
         field: schema.field,
         model: formModel,
         values: __spreadValues({}, formModel),
-        schema
+        schema,
       };
       return obj;
     });
     function renderComponent() {
       var _a;
-      const {
-        component,
-        changeEvent = "change",
-        valueField
-      } = props.schema;
-      const field = "val";
-      const isCheck = component && ["Switch", "Checkbox"].includes(component);
+      const { component, changeEvent = 'change', valueField } = props.schema;
+      const field = 'val';
+      const isCheck = component && ['Switch', 'Checkbox'].includes(component);
       const eventKey = `on${upperFirst$1(changeEvent)}`;
       const on = {
         [eventKey]: (...args) => {
-          const [e] = args;
+          const [e, sv] = args;
           if (propsData[eventKey]) {
             propsData[eventKey](...args);
           }
           const target = e ? e.target : null;
-          const value = target ? isCheck ? target.checked : target.value : e;
-          props.setFormModel(field, value);
-        }
+          // yg 对于dict级联的特殊处理
+          const value = target ? (isCheck ? target.checked : target.value) : e;
+          if (sv && 'searchValue' in sv) {
+            props.setFormModel(field, sv.searchValue);
+          } else {
+            props.setFormModel(field, value);
+          }
+        },
       };
       const Comp = componentMap.get(component);
-      const propsData = __spreadValues({
-        allowClear: true,
-        getPopupContainer: (trigger) => trigger.parentNode
-      }, unref(getComponentsProps));
+      const propsData = __spreadValues(
+        {
+          allowClear: true,
+          getPopupContainer: (trigger) => trigger.parentNode,
+        },
+        unref(getComponentsProps)
+      );
       const isCreatePlaceholder = !propsData.disabled;
-      if (isCreatePlaceholder && component !== "RangePicker" && component) {
+      if (isCreatePlaceholder && component !== 'RangePicker' && component) {
         propsData.placeholder = ((_a = unref(getComponentsProps)) == null ? void 0 : _a.placeholder) || createPlaceholderMessage(component) + props.schema.label;
       }
       propsData.codeField = field;
       propsData.formValues = unref(getValues);
       const bindValue = {
-        [valueField || (isCheck ? "checked" : "value")]: props.formModel[field]
+        [valueField || (isCheck ? 'checked' : 'value')]: props.formModel[field],
       };
       const compAttr = __spreadProps(__spreadValues(__spreadValues(__spreadValues({}, propsData), on), bindValue), {
-        allowClear: true
+        allowClear: true,
       });
       return createVNode(Comp, compAttr, null);
     }
     return () => {
-      return createVNode("div", {
-        "style": "width:100%"
-      }, [renderComponent()]);
+      return createVNode(
+        'div',
+        {
+          style: 'width:100%',
+        },
+        [renderComponent()]
+      );
     };
-  }
+  },
 });
 export { _sfc_main as _ };
diff --git a/node_modules/@jeecg/online/README.md b/node_modules/@jeecg/online/README.md
deleted file mode 100644
index 642e43b..0000000
--- a/node_modules/@jeecg/online/README.md
+++ /dev/null
@@ -1,23 +0,0 @@
-# jeecg online form vue3
-
-
-## Install
-
-```bash
-yarn add @jeecg/online
-```
-
-```javascript
-src/main.js
-
-require('@jeecg/antd-online-mini')
-require('@jeecg/antd-online-mini/dist/OnlineForm.css')
-```
-
-## Description
-
-```
-Jeecg Online UI
- 1、低代码开发模块 
- 2、在线建表功能
-```
\ No newline at end of file
diff --git a/node_modules/@jeecg/online/useTableColumns.js b/node_modules/@jeecg/online/useTableColumns.js
index c0ceb88..06525dc 100644
--- a/node_modules/@jeecg/online/useTableColumns.js
+++ b/node_modules/@jeecg/online/useTableColumns.js
@@ -4,15 +4,12 @@ var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
 var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) => (key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : (obj[key] = value));
 var __spreadValues = (a, b) => {
-  for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,45 +30,45 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) => (x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected));
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
-import { E as ENHANCEJS, c as SETUP } from "./FormSchemaFactory.js";
-import { useRoute, useRouter } from "vue-router";
-import * as vue from "vue";
-import { ref, onBeforeUnmount, toRaw, nextTick, reactive, computed, unref, h, defineAsyncComponent, watch } from "vue";
-import * as UTIL_AXIOS from "/@/utils/http/axios";
-import { defHttp } from "/@/utils/http/axios";
-import * as HOOK_MESSAGE from "/@/hooks/web/useMessage";
-import { useMessage } from "/@/hooks/web/useMessage";
-import { randomString, filterObj, getFileAccessHttpUrl } from "/@/utils/common/compUtils";
-import * as UTIL_CACHE from "/@/utils/cache";
-import { onMountedOrActivated } from "/@/hooks/core/onMountedOrActivated";
-import { useModal } from "/@/components/Modal";
-import { Modal } from "ant-design-vue";
-import { useMethods } from "/@/hooks/system/useMethods";
-import { p as pick } from "./pick.js";
-import { filterMultiDictText } from "/@/utils/dict/JDictSelectUtil";
-import { getAreaTextByCode } from "/@/components/Form/src/utils/Area";
-import { createImgPreview } from "/@/components/Preview/index";
+import { E as ENHANCEJS, c as SETUP } from './FormSchemaFactory.js';
+import { useRoute, useRouter } from 'vue-router';
+import * as vue from 'vue';
+import { ref, onBeforeUnmount, toRaw, nextTick, reactive, computed, unref, h, defineAsyncComponent, watch } from 'vue';
+import * as UTIL_AXIOS from '/@/utils/http/axios';
+import { defHttp } from '/@/utils/http/axios';
+import * as HOOK_MESSAGE from '/@/hooks/web/useMessage';
+import { useMessage } from '/@/hooks/web/useMessage';
+import { randomString, filterObj, getFileAccessHttpUrl } from '/@/utils/common/compUtils';
+import * as UTIL_CACHE from '/@/utils/cache';
+import { onMountedOrActivated } from '/@/hooks/core/onMountedOrActivated';
+import { useModal } from '/@/components/Modal';
+import { Modal } from 'ant-design-vue';
+import { useMethods } from '/@/hooks/system/useMethods';
+import { p as pick } from './pick.js';
+import { filterMultiDictText } from '/@/utils/dict/JDictSelectUtil';
+import { getAreaTextByCode } from '/@/components/Form/src/utils/Area';
+import { createImgPreview } from '/@/components/Preview/index';
 const $exports = {
   vue,
-  "@": {
+  '@': {
     hooks: {
-      useMessage: HOOK_MESSAGE
+      useMessage: HOOK_MESSAGE,
     },
     utils: {
       axios: UTIL_AXIOS,
-      cache: UTIL_CACHE
-    }
-  }
+      cache: UTIL_CACHE,
+    },
+  },
 };
 function useCustomHook(otherExports, context) {
   const assignExports = Object.assign({}, $exports, otherExports);
   function doImport(path) {
-    if (path != null && path != "") {
-      let paths = path.toString().split("/");
+    if (path != null && path != '') {
+      let paths = path.toString().split('/');
       let result = assignExports[paths[0]];
       for (let i = 1; i < paths.length; i++) {
         result = result[paths[i]];
@@ -80,82 +77,81 @@ function useCustomHook(otherExports, context) {
     }
     return null;
   }
-  function doExport() {
-  }
+  function doExport() {}
   function executeJsEnhanced(code) {
     let randomKey = randomString(6);
-    let exportKey = "__export_" + randomKey;
+    let exportKey = '__export_' + randomKey;
     const executeCode = `return function (customImport, ${exportKey}) {"use strict"; ${code}}`;
-    console.group("executeJsEnhanced");
+    console.group('executeJsEnhanced');
     console.log(executeCode);
     console.groupEnd();
     const fun = new Function(executeCode)();
     fun.call(context, doImport, doExport);
   }
   return {
-    executeJsEnhanced
+    executeJsEnhanced,
   };
 }
 const CONTEXT_PROP_DESCRIPTION = {
-  acceptHrefParams: "<p> \u8DF3\u8F6C\u65F6\u83B7\u53D6\u7684\u53C2\u6570\u4FE1\u606F",
-  currentPage: "<p> \u5F53\u524D\u9875\u6570",
-  currentTableName: "<p> \u5F53\u524D\u8868\u540D",
-  description: "<p> \u5F53\u524D\u8868\u63CF\u8FF0",
-  hasChildrenField: "<p> \u662F\u5426\u6709\u5B50\u8282\u70B9\u7684\u5B57\u6BB5\u540D\uFF0C\u4EC5\u6811\u5F62\u8868\u5355\u4E0B\u6709\u6548",
-  isDesForm: "<p> xx",
-  isTree: "<m> \u662F\u5426\u662F\u6811\u5F62\u8868\u5355 ",
-  loadData: "<m> \u52A0\u8F7D\u5217\u8868\u6570\u636E",
-  pageSize: "<p> \u6BCF\u4E00\u9875\u663E\u793A\u6761\u6570",
-  queryParam: "<p> \u67E5\u8BE2\u6761\u4EF6\u5BF9\u8C61\uFF0C\u6BCF\u6B21\u70B9\u51FB\u67E5\u8BE2\u540E\u624D\u4F1A\u66F4\u65B0\u6B64\u6570\u636E",
-  selectedRowKeys: "<p> \u9009\u4E2D\u7684\u884C\u7684id\u6570\u7EC4",
-  sortField: "<p> \u6392\u5E8F\u5B57\u6BB5",
-  sortType: "<p> \u6392\u5E8F\u89C4\u5219",
-  total: "<p> \u603B\u9875\u6570"
+  acceptHrefParams: '<p> \u8DF3\u8F6C\u65F6\u83B7\u53D6\u7684\u53C2\u6570\u4FE1\u606F',
+  currentPage: '<p> \u5F53\u524D\u9875\u6570',
+  currentTableName: '<p> \u5F53\u524D\u8868\u540D',
+  description: '<p> \u5F53\u524D\u8868\u63CF\u8FF0',
+  hasChildrenField: '<p> \u662F\u5426\u6709\u5B50\u8282\u70B9\u7684\u5B57\u6BB5\u540D\uFF0C\u4EC5\u6811\u5F62\u8868\u5355\u4E0B\u6709\u6548',
+  isDesForm: '<p> xx',
+  isTree: '<m> \u662F\u5426\u662F\u6811\u5F62\u8868\u5355 ',
+  loadData: '<m> \u52A0\u8F7D\u5217\u8868\u6570\u636E',
+  pageSize: '<p> \u6BCF\u4E00\u9875\u663E\u793A\u6761\u6570',
+  queryParam: '<p> \u67E5\u8BE2\u6761\u4EF6\u5BF9\u8C61\uFF0C\u6BCF\u6B21\u70B9\u51FB\u67E5\u8BE2\u540E\u624D\u4F1A\u66F4\u65B0\u6B64\u6570\u636E',
+  selectedRowKeys: '<p> \u9009\u4E2D\u7684\u884C\u7684id\u6570\u7EC4',
+  sortField: '<p> \u6392\u5E8F\u5B57\u6BB5',
+  sortType: '<p> \u6392\u5E8F\u89C4\u5219',
+  total: '<p> \u603B\u9875\u6570',
 };
 const onlineUrl = {
-  getColumns: "/online/cgform/api/getColumns/",
-  getQueryInfo: "/online/cgform/api/getQueryInfo/",
-  getData: "/online/cgform/api/getData/",
-  getTreeData: "/online/cgform/api/getTreeData/",
-  optPre: "/online/cgform/api/form/",
-  buttonAction: "/online/cgform/api/doButton",
-  exportXls: "/online/cgform/api/exportXls/",
-  importXls: "/online/cgform/api/importXls/",
-  startProcess: "/act/process/extActProcess/startMutilProcess"
+  getColumns: '/online/cgform/api/getColumns/',
+  getQueryInfo: '/online/cgform/api/getQueryInfo/',
+  getData: '/online/cgform/api/getData/',
+  getTreeData: '/online/cgform/api/getTreeData/',
+  optPre: '/online/cgform/api/form/',
+  buttonAction: '/online/cgform/api/doButton',
+  exportXls: '/online/cgform/api/exportXls/',
+  importXls: '/online/cgform/api/importXls/',
+  startProcess: '/act/process/extActProcess/startMutilProcess',
 };
 let config = {
-  sortField: "id",
-  sortType: "asc",
+  sortField: 'id',
+  sortType: 'asc',
   currentPage: 1,
   pageSize: 10,
   total: 0,
   selectedRowKeys: [],
   queryParam: {},
   acceptHrefParams: {},
-  description: "",
-  currentTableName: "",
+  description: '',
+  currentTableName: '',
   isDesForm: false,
-  desFormCode: "",
+  desFormCode: '',
   cache: false,
   isTree: false,
-  hasChildrenField: ""
+  hasChildrenField: '',
 };
 const metaPagination = {
   current: 1,
   pageSize: 10,
-  pageSizeOptions: ["10", "20", "30"],
+  pageSizeOptions: ['10', '20', '30'],
   showTotal: (total, range) => {
-    return range[0] + "-" + range[1] + " \u5171" + total + "\u6761";
+    return range[0] + '-' + range[1] + ' \u5171' + total + '\u6761';
   },
   showQuickJumper: true,
   showSizeChanger: true,
-  total: 0
+  total: 0,
 };
 const { createMessage: $message } = useMessage();
 const GET_FUN_BODY_REG = /(?:\/\*[\s\S]*?\*\/|\/\/.*?\r?\n|[^{])+\{([\s\S]*)\}$/;
 function useOnlineTableContext() {
-  console.log("-------------------------useOnlineTableContext----------------------->");
-  const ID = ref("");
+  console.log('-------------------------useOnlineTableContext----------------------->');
+  const ID = ref('');
   const route = useRoute();
   const onlineQueryFormOuter = ref();
   const superQueryButtonRef = ref();
@@ -163,7 +159,7 @@ function useOnlineTableContext() {
   const dataSource = ref([]);
   let specialConfigMap = {};
   const methods = {
-    execButtonEnhance: function(code, record2) {
+    execButtonEnhance: function (code, record2) {
       if (onlineTableContext2[ENHANCEJS][code]) {
         if (SETUP === code) {
           executeEnhanceJsHook(code);
@@ -171,20 +167,20 @@ function useOnlineTableContext() {
           let row = toRaw(record2);
           return onlineTableContext2[ENHANCEJS][code].call(onlineTableContext2, onlineTableContext2, row);
         }
-      } else if (onlineTableContext2[ENHANCEJS][code + "_hook"]) {
-        executeEnhanceJsHook(code + "_hook");
+      } else if (onlineTableContext2[ENHANCEJS][code + '_hook']) {
+        executeEnhanceJsHook(code + '_hook');
       } else {
-        console.log("\u589E\u5F3A\u6CA1\u627E\u5230!", code);
+        console.log('\u589E\u5F3A\u6CA1\u627E\u5230!', code);
       }
     },
-    isTree: function(status) {
-      if (typeof status === "boolean") {
-        onlineTableContext2["isTreeTable"] = status;
+    isTree: function (status) {
+      if (typeof status === 'boolean') {
+        onlineTableContext2['isTreeTable'] = status;
         return status;
       } else {
-        return onlineTableContext2["isTreeTable"];
+        return onlineTableContext2['isTreeTable'];
       }
-    }
+    },
   };
   function executeEnhanceJsHook(code) {
     let str = onlineTableContext2[ENHANCEJS][code].toLocaleString();
@@ -196,7 +192,7 @@ function useOnlineTableContext() {
   }
   const onlineTableContext2 = new Proxy(CONTEXT_PROP_DESCRIPTION, {
     get(_target, prop) {
-      if (typeof methods[prop] === "function") {
+      if (typeof methods[prop] === 'function') {
         return methods[prop];
       } else {
         let temp = specialConfigMap[ID.value];
@@ -205,7 +201,7 @@ function useOnlineTableContext() {
     },
     set(_target, prop, value) {
       let temp = getCurrentPageSpecialConfigMap();
-      if (typeof value === "function") {
+      if (typeof value === 'function') {
         return Reflect.set(methods, prop, value);
       } else {
         return Reflect.set(temp, prop, value);
@@ -218,22 +214,22 @@ function useOnlineTableContext() {
       } else {
         return false;
       }
-    }
+    },
   });
   const { executeJsEnhanced } = useCustomHook({}, onlineTableContext2);
   function getTableId() {
     let idValue = route.params.id;
     if (!idValue) {
-      idValue = "";
+      idValue = '';
     }
     return idValue;
   }
   onMountedOrActivated(() => {
-    console.log("-------------------onMountedOrActivated-------------------");
+    console.log('-------------------onMountedOrActivated-------------------');
     handlePageChange();
   });
   onBeforeUnmount(() => {
-    console.log("-------------------onBeforeUnmount-------------------");
+    console.log('-------------------onBeforeUnmount-------------------');
     delete specialConfigMap[ID.value];
   });
   function getCurrentPageSpecialConfigMap() {
@@ -252,23 +248,29 @@ function useOnlineTableContext() {
       Object.keys(hrefParam).map((key) => {
         acceptHrefParams[key] = hrefParam[key];
       });
-      onlineTableContext2["acceptHrefParams"] = acceptHrefParams;
+      onlineTableContext2['acceptHrefParams'] = acceptHrefParams;
     }
   }
   function getColumnList() {
     return new Promise((resolve, reject) => {
-      defHttp.get({
-        url: `${onlineTableContext2.onlineUrl.getColumns}${ID.value}`
-      }, { isTransformResponse: false }).then((res) => {
-        if (res.success) {
-          resolve(res.result);
-        } else {
-          $message.warning(res.message);
+      defHttp
+        .get(
+          {
+            url: `${onlineTableContext2.onlineUrl.getColumns}${ID.value}`,
+          },
+          { isTransformResponse: false }
+        )
+        .then((res) => {
+          if (res.success) {
+            resolve(res.result);
+          } else {
+            $message.warning(res.message);
+            reject();
+          }
+        })
+        .catch(() => {
           reject();
-        }
-      }).catch(() => {
-        reject();
-      });
+        });
     });
   }
   function loadData() {
@@ -278,41 +280,54 @@ function useOnlineTableContext() {
         url = `${onlineTableContext2.onlineUrl.getTreeData}${ID.value}`;
       }
       let params = getLoadDataParams();
-      console.log("------\u67E5\u8BE2\u53C2\u6570-----", params);
-      defHttp.get({ url, params }, { isTransformResponse: false }).then((res) => {
-        console.log("--onlineList-\u67E5\u8BE2\u5217\u8868\u6570\u636E", res);
-        if (res.success) {
-          handleDataResult(res.result);
-          resolve(true);
-        } else {
-          $message.warning(res.message);
+      console.log('------\u67E5\u8BE2\u53C2\u6570-----', params);
+      defHttp
+        .get({ url, params }, { isTransformResponse: false })
+        .then((res) => {
+          console.log('--onlineList-\u67E5\u8BE2\u5217\u8868\u6570\u636E', res);
+          if (res.success) {
+            handleDataResult(res.result);
+            resolve(true);
+          } else {
+            $message.warning(res.message);
+            reject(false);
+          }
+        })
+        .catch(() => {
+          let error = '\u8BF7\u6C42\u5217\u8868\u6570\u636E\u5F02\u5E38!';
+          $message.warning(error);
           reject(false);
-        }
-      }).catch(() => {
-        let error = "\u8BF7\u6C42\u5217\u8868\u6570\u636E\u5F02\u5E38!";
-        $message.warning(error);
-        reject(false);
-      });
+        });
     });
   }
+  // yg 修改请求参数的生成方式
   function getLoadDataParams() {
     const { sortField, sortType, acceptHrefParams, queryParam } = onlineTableContext2;
+    // 用于暂时的读取对应的param数据
+    const tempParam = { ...queryParam };
     let treeParam = {};
     if (onlineTableContext2.isTree() === true) {
-      treeParam["hasQuery"] = "false";
+      treeParam['hasQuery'] = 'false';
     } else {
-      treeParam["hasQuery"] = "true";
+      treeParam['hasQuery'] = 'true';
     }
-    let params = Object.assign({}, treeParam, acceptHrefParams, queryParam, { column: sortField, order: sortType });
+    let params = Object.assign({}, treeParam, acceptHrefParams, {}, { column: sortField, order: sortType });
     if (pagination.value) {
       params.pageNo = pagination.value.current;
       params.pageSize = pagination.value.pageSize;
     } else {
-      params["pageSize"] = -521;
+      params['pageSize'] = -521;
     }
     let superQueryData = getSuperQueryData();
-    params.superQueryMatchType = superQueryData.matchType || "";
-    params.superQueryParams = superQueryData.params || "";
+    params.superQueryMatchType = superQueryData.matchType || '';
+    params.superQueryParams = superQueryData.params || '';
+
+    // 无高级查询 构造高级查询 有高级查询 只考虑高级查询
+    if (params.superQueryMatchType === '' && Object.keys(tempParam).length !== 0) {
+      params.superQueryMatchType = 'and';
+      params.superQueryParams = createSuperQueryData(tempParam) || '';
+    }
+
     return filterObj(params);
   }
   function handleDataResult(result) {
@@ -336,11 +351,11 @@ function useOnlineTableContext() {
   }
   function handleChangeInTable($pagination, _filters, sorter) {
     if (sorter && sorter.order) {
-      onlineTableContext2["sortField"] = sorter.field;
-      onlineTableContext2["sortType"] = sorter.order == "ascend" ? "asc" : "desc";
+      onlineTableContext2['sortField'] = sorter.field;
+      onlineTableContext2['sortType'] = sorter.order == 'ascend' ? 'asc' : 'desc';
     } else {
-      onlineTableContext2["sortField"] = "id";
-      onlineTableContext2["sortType"] = "asc";
+      onlineTableContext2['sortField'] = 'id';
+      onlineTableContext2['sortType'] = 'asc';
     }
     if (pagination.value) {
       pagination.value = $pagination;
@@ -348,24 +363,24 @@ function useOnlineTableContext() {
     loadData();
   }
   function handleSpecialConfig(result) {
-    onlineTableContext2["description"] = result.description;
-    onlineTableContext2["currentTableName"] = result.currentTableName;
-    onlineTableContext2["isDesForm"] = result.isDesForm;
-    onlineTableContext2["desFormCode"] = result.desFormCode;
-    onlineTableContext2["ID"] = ID.value;
+    onlineTableContext2['description'] = result.description;
+    onlineTableContext2['currentTableName'] = result.currentTableName;
+    onlineTableContext2['isDesForm'] = result.isDesForm;
+    onlineTableContext2['desFormCode'] = result.desFormCode;
+    onlineTableContext2['ID'] = ID.value;
     let { acceptHrefParams, queryParam, superQuery, currentPage, pageSize } = onlineTableContext2;
     handleAcceptHrefParams();
     if (!queryParam) {
-      onlineTableContext2["queryParam"] = {};
+      onlineTableContext2['queryParam'] = {};
     } else {
       onlineQueryFormOuter.value.initDefaultValues(queryParam, acceptHrefParams);
     }
     if (!superQuery) {
-      onlineTableContext2["superQuery"] = { params: "", matchType: "" };
+      onlineTableContext2['superQuery'] = { params: '', matchType: '' };
     } else {
       superQueryButtonRef.value.initDefaultValues(superQuery);
     }
-    if (result.paginationFlag == "Y") {
+    if (result.paginationFlag == 'Y') {
       pagination.value = __spreadValues(__spreadValues({}, metaPagination), { current: currentPage, pageSize });
     } else {
       pagination.value = false;
@@ -373,7 +388,7 @@ function useOnlineTableContext() {
   }
   const add2Context = {
     loadData,
-    getLoadDataParams
+    getLoadDataParams,
   };
   Object.keys(add2Context).map((key) => {
     onlineTableContext2[key] = add2Context[key];
@@ -391,10 +406,10 @@ function useOnlineTableContext() {
   function getTreeDataByResult(result) {
     if (result) {
       return result.map((item) => {
-        let hasChildrenField = onlineTableContext2["hasChildrenField"];
-        if (item[hasChildrenField] == "1") {
-          let loadChild = { id: item.id + "_loadChild", name: "loading...", isLoading: true };
-          loadChild["jeecg_row_key"] = loadChild.id;
+        let hasChildrenField = onlineTableContext2['hasChildrenField'];
+        if (item[hasChildrenField] == '1') {
+          let loadChild = { id: item.id + '_loadChild', name: 'loading...', isLoading: true };
+          loadChild['jeecg_row_key'] = loadChild.id;
           item.children = [loadChild];
         }
         return item;
@@ -410,84 +425,130 @@ function useOnlineTableContext() {
     if (expandedRowKeysValue.length > 0) {
       const { sortField, sortType, pidField } = onlineTableContext2;
       let params = Object.assign({}, { column: sortField, order: sortType });
-      params["hasQuery"] = "in";
+      params['hasQuery'] = 'in';
       let superParams = Object.assign({});
-      superParams.rule = "in";
-      superParams.type = "text";
-      superParams.val = expandedRowKeysValue.join(",");
+      superParams.rule = 'in';
+      superParams.type = 'text';
+      superParams.val = expandedRowKeysValue.join(',');
       superParams.field = pidField;
       superParams = [superParams];
-      params["superQueryParams"] = encodeURI(JSON.stringify(superParams));
-      params["superQueryMatchType"] = "and";
-      params["batchFlag"] = "true";
+      params['superQueryParams'] = encodeURI(JSON.stringify(superParams));
+      params['superQueryMatchType'] = 'and';
+      params['batchFlag'] = 'true';
       let url = `${onlineTableContext2.onlineUrl.getTreeData}${ID.value}`;
-      console.log("--onlineList-\u67E5\u8BE2\u5B50\u8282\u70B9\u53C2\u6570", superParams);
-      defHttp.get({ url, params }, { isTransformResponse: false }).then((res) => {
-        console.log("--onlineList-\u67E5\u8BE2\u5B50\u8282\u70B9\u5217\u8868\u6570\u636E", res);
-        if (res.success && res.result.records && res.result.records.length > 0) {
-          let records = res.result.records;
-          const listMap = /* @__PURE__ */ new Map();
-          for (let item of records) {
-            let pid = item[pidField];
-            if (expandedRowKeysValue.join(",").includes(pid)) {
-              let mapList = listMap.get(pid);
-              if (mapList == null) {
-                mapList = [];
+      console.log('--onlineList-\u67E5\u8BE2\u5B50\u8282\u70B9\u53C2\u6570', superParams);
+      defHttp
+        .get({ url, params }, { isTransformResponse: false })
+        .then((res) => {
+          console.log('--onlineList-\u67E5\u8BE2\u5B50\u8282\u70B9\u5217\u8868\u6570\u636E', res);
+          if (res.success && res.result.records && res.result.records.length > 0) {
+            let records = res.result.records;
+            const listMap = /* @__PURE__ */ new Map();
+            for (let item of records) {
+              let pid = item[pidField];
+              if (expandedRowKeysValue.join(',').includes(pid)) {
+                let mapList = listMap.get(pid);
+                if (mapList == null) {
+                  mapList = [];
+                }
+                mapList.push(item);
+                listMap.set(pid, mapList);
               }
-              mapList.push(item);
-              listMap.set(pid, mapList);
             }
+            let childrenMap = listMap;
+            let fn = (list) => {
+              if (list) {
+                list.forEach((data) => {
+                  if (expandedRowKeysValue.includes(data.id)) {
+                    data.children = getTreeDataByResult(childrenMap.get(data.id));
+                    fn(data.children);
+                  }
+                });
+              }
+            };
+            fn(dataList);
           }
-          let childrenMap = listMap;
-          let fn = (list) => {
-            if (list) {
-              list.forEach((data) => {
-                if (expandedRowKeysValue.includes(data.id)) {
-                  data.children = getTreeDataByResult(childrenMap.get(data.id));
-                  fn(data.children);
-                }
-              });
-            }
-          };
-          fn(dataList);
-        }
-      }).catch(() => {
-        let error = "loadDataByExpandedRows\u8BF7\u6C42\u5217\u8868\u6570\u636E\u5F02\u5E38!";
-        $message.warning(error);
-      });
+        })
+        .catch(() => {
+          let error = 'loadDataByExpandedRows\u8BF7\u6C42\u5217\u8868\u6570\u636E\u5F02\u5E38!';
+          $message.warning(error);
+        });
     } else {
       return Promise.resolve();
     }
   }
+  // yg 生成普通queryData的对应superQuery 将正常的condition转换为contain行为
+  function createSuperQueryData(queryData) {
+    if (!queryData) {
+      return {};
+    }
+    let arr = [];
+    // 获取表名
+    Object.entries(queryData).forEach(([key, value]) => {
+      // 多选
+      if (value.indexOf(',') !== -1) {
+        arr.push({
+          field: key,
+          rule: 'in',
+          val: value,
+          type: 'text',
+          dbType: 'string',
+        });
+      } else {
+        // 单选模糊
+        arr.push({
+          field: key,
+          rule: 'like',
+          val: `%${value}%`,
+          type: 'text',
+          dbType: 'string',
+        });
+      }
+    });
+    let str = arr.length > 0 ? JSON.stringify(arr) : '';
+    return encodeURIComponent(str);
+  }
+  // yg 高级查询级联的查询
   function getSuperQueryData() {
     if (!onlineTableContext2.superQuery) {
       return {};
     }
-    const { superQuery: { params, matchType }, currentTableName } = onlineTableContext2;
-    let pre = currentTableName + "@";
+    const {
+      superQuery: { params, matchType },
+      currentTableName,
+    } = onlineTableContext2;
+    let pre = currentTableName + '@';
     let arr = [];
     if (params.length > 0) {
       for (let data of params) {
         let item = __spreadValues({}, data);
         let field2 = item.field;
         if (field2.startsWith(pre)) {
-          item.field = field2.replace(pre, "");
+          item.field = field2.replace(pre, '');
+        }
+        if (item.type === 'cat_tree' && item.val.startsWith('searchRange:') && typeof item.val === 'string') {
+          let val = item.val.slice(12);
+          // 如果是相等 只匹配第一项
+          if (item.rule === 'eq') {
+            val = val.split(',')[0];
+          }
+          item.val = val;
         }
         arr.push(item);
       }
     }
-    let str = arr.length > 0 ? JSON.stringify(arr) : "";
-    console.log("\u9AD8\u7EA7\u67E5\u8BE2\u6761\u4EF6", arr, matchType);
+    let str = arr.length > 0 ? JSON.stringify(arr) : '';
+    console.log('\u9AD8\u7EA7\u67E5\u8BE2\u6761\u4EF6', arr, matchType);
     return {
       params: encodeURIComponent(str),
-      matchType
+      matchType,
     };
   }
   const superQueryStatus = ref(false);
   function handleSuperQuery(params, matchType) {
-    onlineTableContext2["superQuery"] = {
+    onlineTableContext2['superQuery'] = {
       params,
-      matchType
+      matchType,
     };
     if (params.length == 0) {
       superQueryStatus.value = false;
@@ -502,43 +563,46 @@ function useOnlineTableContext() {
       param = {};
     }
     if (!param.row) {
-      let rows = onlineTableContext2["selectedRows"];
+      let rows = onlineTableContext2['selectedRows'];
       if (!rows || rows.length == 0 || rows.length > 1) {
-        $message.warning("\u8BF7\u9009\u62E9\u4E00\u6761\u6570\u636E");
+        $message.warning('\u8BF7\u9009\u62E9\u4E00\u6761\u6570\u636E');
         return;
       }
       param.row = rows[0];
     }
-    param["code"] = ID.value;
+    param['code'] = ID.value;
     doOpenCustomModal(true, param);
   }
-  onlineTableContext2["openCustomModal"] = openCustomModal;
+  onlineTableContext2['openCustomModal'] = openCustomModal;
   function handlePageChange() {
     let idValue = getTableId();
     ID.value = idValue;
   }
   handlePageChange();
-  return __spreadValues({
-    ID,
-    onlineQueryFormOuter,
-    superQueryButtonRef,
-    loading,
-    reload,
-    dataSource,
-    pagination,
-    handleSpecialConfig,
-    onlineTableContext: onlineTableContext2,
-    handleChangeInTable,
-    getColumnList,
-    getTreeDataByResult,
-    expandedRowKeys,
-    handleExpandedRowsChange,
-    superQueryStatus,
-    handleSuperQuery,
-    registerCustomModal
-  }, add2Context);
+  return __spreadValues(
+    {
+      ID,
+      onlineQueryFormOuter,
+      superQueryButtonRef,
+      loading,
+      reload,
+      dataSource,
+      pagination,
+      handleSpecialConfig,
+      onlineTableContext: onlineTableContext2,
+      handleChangeInTable,
+      getColumnList,
+      getTreeDataByResult,
+      expandedRowKeys,
+      handleExpandedRowsChange,
+      superQueryStatus,
+      handleSuperQuery,
+      registerCustomModal,
+    },
+    add2Context
+  );
 }
-const FLOW_CODE_PRE = "onl_";
+const FLOW_CODE_PRE = 'onl_';
 function useListButton(onlineTableContext2) {
   const buttonStatus = {
     add: true,
@@ -550,7 +614,7 @@ function useListButton(onlineTableContext2) {
     export: true,
     detail: true,
     super_query: true,
-    bpm: true
+    bpm: true,
   };
   const [registerModal, { openModal }] = useModal();
   const [registerImportModal, { openModal: openImportModal }] = useModal();
@@ -563,10 +627,10 @@ function useListButton(onlineTableContext2) {
     cgTopButtonList.length = 0;
     if (btnList && btnList.length > 0) {
       for (let i = 0; i < btnList.length; i++) {
-        let temp = pick(btnList[i], "buttonCode", "buttonName", "buttonStyle", "optType", "exp", "buttonIcon");
-        if (temp.buttonStyle == "button") {
+        let temp = pick(btnList[i], 'buttonCode', 'buttonName', 'buttonStyle', 'optType', 'exp', 'buttonIcon');
+        if (temp.buttonStyle == 'button') {
           cgTopButtonList.push(temp);
-        } else if (temp.buttonStyle == "link") {
+        } else if (temp.buttonStyle == 'link') {
           cgLinkButtonList.push(temp);
         }
       }
@@ -587,65 +651,71 @@ function useListButton(onlineTableContext2) {
   function handleAdd(param) {
     let data = { isUpdate: false };
     if (param) {
-      data["param"] = param;
+      data['param'] = param;
     }
     openModal(true, data);
   }
   function handleEdit(record2) {
-    onlineTableContext2.beforeEdit(record2).then(() => {
-      openModal(true, {
-        isUpdate: true,
-        record: record2
+    onlineTableContext2
+      .beforeEdit(record2)
+      .then(() => {
+        openModal(true, {
+          isUpdate: true,
+          record: record2,
+        });
+      })
+      .catch((msg) => {
+        $message2.warning(msg);
       });
-    }).catch((msg) => {
-      $message2.warning(msg);
-    });
   }
   const getDeleteButton = (record2) => {
     return {
-      label: "\u5220\u9664",
+      label: '\u5220\u9664',
       popConfirm: {
-        title: "\u662F\u5426\u5220\u9664\uFF1F",
-        confirm: handleDeleteOne.bind(null, record2)
-      }
+        title: '\u662F\u5426\u5220\u9664\uFF1F',
+        confirm: handleDeleteOne.bind(null, record2),
+      },
     };
   };
   function handleDeleteOne(record2) {
-    onlineTableContext2.beforeDelete(record2).then(() => {
-      handleDelete(record2.id);
-    }).catch((msg) => {
-      $message2.warning(msg);
-    });
+    onlineTableContext2
+      .beforeDelete(record2)
+      .then(() => {
+        handleDelete(record2.id);
+      })
+      .catch((msg) => {
+        $message2.warning(msg);
+      });
   }
   function getActions(record2) {
     if (toRaw(buttonSwitch.update) === true) {
       return [
         {
-          label: "\u7F16\u8F91",
-          onClick: handleEdit.bind(null, record2)
-        }
+          label: '\u7F16\u8F91',
+          onClick: handleEdit.bind(null, record2),
+        },
       ];
     }
     return [];
   }
   function getSubmitFlowButton(record2) {
     return {
-      label: "\u63D0\u4EA4\u6D41\u7A0B",
+      label: '\u63D0\u4EA4\u6D41\u7A0B',
       popConfirm: {
-        title: "\u786E\u8BA4\u63D0\u4EA4\u6D41\u7A0B\u5417\uFF1F",
-        confirm: handleSubmitFlow.bind(null, record2)
-      }
+        title: '\u786E\u8BA4\u63D0\u4EA4\u6D41\u7A0B\u5417\uFF1F',
+        confirm: handleSubmitFlow.bind(null, record2),
+      },
     };
   }
   function getDropDownActions(record2) {
     let arr = [];
     if (toRaw(buttonSwitch.delete) === true) {
       arr.push({
-        label: "\u8BE6\u60C5",
-        onClick: handleDetail.bind(null, record2)
+        label: '\u8BE6\u60C5',
+        onClick: handleDetail.bind(null, record2),
       });
     }
-    if (onlineTableContext2["hasBpmStatus"] === true) {
+    if (onlineTableContext2['hasBpmStatus'] === true) {
       arr.push(getSubmitFlowButton(record2));
     }
     if (toRaw(buttonSwitch.delete) === true) {
@@ -654,10 +724,10 @@ function useListButton(onlineTableContext2) {
     let buttonList = cgLinkButtonList;
     if (buttonList && buttonList.length > 0) {
       for (let item of buttonList) {
-        if (showLinkButtonOfExpression(item.exp || "", record2) === true) {
+        if (showLinkButtonOfExpression(item.exp || '', record2) === true) {
           arr.push({
             label: item.buttonName,
-            onClick: cgButtonLinkHandler.bind(null, record2, item.buttonCode, item.optType)
+            onClick: cgButtonLinkHandler.bind(null, record2, item.buttonCode, item.optType),
           });
         }
       }
@@ -668,19 +738,22 @@ function useListButton(onlineTableContext2) {
     openModal(true, {
       isUpdate: true,
       disableSubmit: true,
-      record: record2
+      record: record2,
     });
   }
   function startProcess(record2) {
-    const { currentTableName, onlineUrl: { startProcess: startProcess2 } } = onlineTableContext2;
+    const {
+      currentTableName,
+      onlineUrl: { startProcess: startProcess2 },
+    } = onlineTableContext2;
     let postConfig = {
       url: startProcess2,
       params: {
         flowCode: FLOW_CODE_PRE + currentTableName,
         id: record2.id,
-        formUrl: "modules/bpm/task/form/OnlineFormDetail",
-        formUrlMobile: "check/onlineForm/detail"
-      }
+        formUrl: 'modules/bpm/task/form/OnlineFormDetail',
+        formUrlMobile: 'check/onlineForm/detail',
+      },
     };
     let postOption = { isTransformResponse: false };
     return new Promise((resolve, reject) => {
@@ -702,103 +775,119 @@ function useListButton(onlineTableContext2) {
     });
   }
   function handleDelete(dataId) {
-    console.log("\u5220\u9664\u6570\u636Eid\u503C", dataId);
+    console.log('\u5220\u9664\u6570\u636Eid\u503C', dataId);
     let url = `${onlineTableContext2.onlineUrl.optPre}${onlineTableContext2.ID}/${dataId}`;
     return new Promise((resolve, reject) => {
-      defHttp.delete({
-        url
-      }, { isTransformResponse: false }).then((res) => {
-        if (res.success) {
-          $message2.success(res.message);
-          onlineTableContext2.loadData();
-          resolve(true);
-        } else {
-          $message2.warning(res.message);
-          reject();
-        }
-      });
+      defHttp
+        .delete(
+          {
+            url,
+          },
+          { isTransformResponse: false }
+        )
+        .then((res) => {
+          if (res.success) {
+            $message2.success(res.message);
+            onlineTableContext2.loadData();
+            resolve(true);
+          } else {
+            $message2.warning(res.message);
+            reject();
+          }
+        });
     });
   }
   function handleBatchDelete() {
-    let arr = onlineTableContext2["selectedRowKeys"];
+    let arr = onlineTableContext2['selectedRowKeys'];
     if (arr.length <= 0) {
-      $message2.warning("\u8BF7\u9009\u62E9\u4E00\u6761\u8BB0\u5F55\uFF01");
+      $message2.warning('\u8BF7\u9009\u62E9\u4E00\u6761\u8BB0\u5F55\uFF01');
       return false;
     } else {
       let idSet = [];
-      arr.forEach(function(val) {
+      arr.forEach(function (val) {
         let temp = val;
-        if (temp && temp.endsWith("_loadChild")) {
-          temp = temp.replace("_loadChild", "");
+        if (temp && temp.endsWith('_loadChild')) {
+          temp = temp.replace('_loadChild', '');
         }
         if (idSet.indexOf(temp) < 0) {
           idSet.push(temp);
         }
       });
-      let ids = idSet.join(",");
+      let ids = idSet.join(',');
       Modal.confirm({
-        title: "\u786E\u8BA4\u5220\u9664",
-        content: "\u662F\u5426\u5220\u9664\u9009\u4E2D\u6570\u636E",
-        okText: "\u786E\u8BA4",
-        cancelText: "\u53D6\u6D88",
-        onOk: () => __async(this, null, function* () {
-          yield handleDelete(ids);
-          onlineTableContext2.clearSelectedRow();
-        })
+        title: '\u786E\u8BA4\u5220\u9664',
+        content: '\u662F\u5426\u5220\u9664\u9009\u4E2D\u6570\u636E',
+        okText: '\u786E\u8BA4',
+        cancelText: '\u53D6\u6D88',
+        onOk: () =>
+          __async(this, null, function* () {
+            yield handleDelete(ids);
+            onlineTableContext2.clearSelectedRow();
+          }),
       });
     }
   }
   function cgButtonLinkHandler(record2, buttonCode, optType) {
-    if (optType == "js") {
-      onlineTableContext2["execButtonEnhance"](buttonCode, record2);
-    } else if (optType == "action") {
+    if (optType == 'js') {
+      onlineTableContext2['execButtonEnhance'](buttonCode, record2);
+    } else if (optType == 'action') {
       let params = {
-        formId: onlineTableContext2["ID"],
+        formId: onlineTableContext2['ID'],
         buttonCode,
-        dataId: record2.id
+        dataId: record2.id,
       };
       let url = `${onlineTableContext2.onlineUrl.buttonAction}`;
-      defHttp.post({
-        url,
-        params
-      }, { isTransformResponse: false }).then((res) => {
-        if (res.success) {
-          onlineTableContext2.loadData();
-          $message2.success("\u5904\u7406\u5B8C\u6210!");
-        } else {
-          $message2.warning(res.message);
-        }
-      });
+      defHttp
+        .post(
+          {
+            url,
+            params,
+          },
+          { isTransformResponse: false }
+        )
+        .then((res) => {
+          if (res.success) {
+            onlineTableContext2.loadData();
+            $message2.success('\u5904\u7406\u5B8C\u6210!');
+          } else {
+            $message2.warning(res.message);
+          }
+        });
     }
   }
   function cgButtonJsHandler(buttonCode) {
-    onlineTableContext2["execButtonEnhance"](buttonCode);
+    onlineTableContext2['execButtonEnhance'](buttonCode);
   }
   function cgButtonActionHandler(buttonCode) {
-    let arr = onlineTableContext2["selectedRowKeys"];
+    let arr = onlineTableContext2['selectedRowKeys'];
     if (!arr || arr.length == 0) {
-      $message2.warning("\u8BF7\u5148\u9009\u4E2D\u4E00\u6761\u8BB0\u5F55");
+      $message2.warning('\u8BF7\u5148\u9009\u4E2D\u4E00\u6761\u8BB0\u5F55');
       return false;
     }
-    let dataId = arr.join(",");
+    let dataId = arr.join(',');
     let params = {
-      formId: onlineTableContext2["ID"],
+      formId: onlineTableContext2['ID'],
       buttonCode,
-      dataId
+      dataId,
     };
     let url = `${onlineTableContext2.onlineUrl.buttonAction}`;
-    defHttp.post({
-      url,
-      params
-    }, { isTransformResponse: false }).then((res) => {
-      if (res.success) {
-        onlineTableContext2.loadData();
-        onlineTableContext2.clearSelectedRow();
-        $message2.success("\u5904\u7406\u5B8C\u6210!");
-      } else {
-        $message2.warning(res.message);
-      }
-    });
+    defHttp
+      .post(
+        {
+          url,
+          params,
+        },
+        { isTransformResponse: false }
+      )
+      .then((res) => {
+        if (res.success) {
+          onlineTableContext2.loadData();
+          onlineTableContext2.clearSelectedRow();
+          $message2.success('\u5904\u7406\u5B8C\u6210!');
+        } else {
+          $message2.warning(res.message);
+        }
+      });
   }
   function onImportExcel() {
     openImportModal(true);
@@ -806,12 +895,25 @@ function useListButton(onlineTableContext2) {
   const importUrl = () => {
     return `${onlineTableContext2.onlineUrl.importXls}${onlineTableContext2.ID}`;
   };
-  const { handleExportXlsx } = useMethods();
+  const { handleExportXlsx, handleEmptyExportXlsx } = useMethods();
+  // yg 空导出
+  function onExportEmptyExcel() {
+    let params = onlineTableContext2.getLoadDataParams();
+    params.pageNo = 0;
+    let selections = onlineTableContext2['selectedRowKeys'];
+    if (selections && selections.length > 0) {
+      params['selections'] = selections.join(',');
+    }
+    let paramsStr = JSON.stringify(filterObj(params));
+    let url = `${onlineTableContext2.onlineUrl.exportXls}${onlineTableContext2.ID}`;
+    const description = onlineTableContext2.description;
+    handleEmptyExportXlsx(description, url, { paramsStr });
+  }
   function onExportExcel() {
     let params = onlineTableContext2.getLoadDataParams();
-    let selections = onlineTableContext2["selectedRowKeys"];
+    let selections = onlineTableContext2['selectedRowKeys'];
     if (selections && selections.length > 0) {
-      params["selections"] = selections.join(",");
+      params['selections'] = selections.join(',');
     }
     let paramsStr = JSON.stringify(filterObj(params));
     let url = `${onlineTableContext2.onlineUrl.exportXls}${onlineTableContext2.ID}`;
@@ -819,24 +921,24 @@ function useListButton(onlineTableContext2) {
     handleExportXlsx(description, url, { paramsStr });
   }
   function showLinkButtonOfExpression(expression, row) {
-    if (!expression || expression == "") {
+    if (!expression || expression == '') {
       return true;
     }
-    let arr = expression.split("#");
+    let arr = expression.split('#');
     let fieldValue = row[arr[0]];
     let exp = arr[1].toLowerCase();
-    if (exp === "eq") {
+    if (exp === 'eq') {
       return fieldValue == arr[2];
-    } else if (exp === "ne") {
+    } else if (exp === 'ne') {
       return !(fieldValue == arr[2]);
-    } else if (exp === "empty") {
-      if (arr[2] === "true") {
-        return !fieldValue || fieldValue == "";
+    } else if (exp === 'empty') {
+      if (arr[2] === 'true') {
+        return !fieldValue || fieldValue == '';
       } else {
         return fieldValue && fieldValue.length > 0;
       }
-    } else if (exp === "in") {
-      let arr2 = arr[2].split(",");
+    } else if (exp === 'in') {
+      let arr2 = arr[2].split(',');
       return arr2.indexOf(String(fieldValue)) >= 0;
     }
     return false;
@@ -853,6 +955,7 @@ function useListButton(onlineTableContext2) {
     registerImportModal,
     onImportExcel,
     onExportExcel,
+    onExportEmptyExcel,
     getDropDownActions,
     getActions,
     cgButtonJsHandler,
@@ -862,7 +965,7 @@ function useListButton(onlineTableContext2) {
     initButtonSwitch,
     getDeleteButton,
     handleSubmitFlow,
-    getSubmitFlowButton
+    getSubmitFlowButton,
   };
 }
 function useTableColumns(onlineTableContext) {
@@ -881,10 +984,10 @@ function useTableColumns(onlineTableContext) {
   });
   function handleColumnResult(result) {
     dictOptionInfo.value = result.dictOptions;
-    if (result.checkboxFlag == "Y") {
+    if (result.checkboxFlag == 'Y') {
       rowSelection.value = {
         selectedRowKeys: selectedKeys,
-        onChange: onSelectChange
+        onChange: onSelectChange,
       };
     } else {
       rowSelection.value = null;
@@ -900,11 +1003,11 @@ function useTableColumns(onlineTableContext) {
     });
     let fieldHrefSlots = result.fieldHrefSlots;
     const fieldHrefSlotKeysMap = {};
-    fieldHrefSlots.forEach((item) => fieldHrefSlotKeysMap[item.slotName] = item);
+    fieldHrefSlots.forEach((item) => (fieldHrefSlotKeysMap[item.slotName] = item));
     let tableColumns = [];
     tableColumns = handleColumnHrefAndDict(dataColumns, fieldHrefSlotKeysMap);
     bpmStatusFilter(tableColumns);
-    console.log("-----\u5217\u8868\u5217\u914D\u7F6E----", tableColumns);
+    console.log('-----\u5217\u8868\u5217\u914D\u7F6E----', tableColumns);
     if (onlineTableContext.isTree() === true) {
       let firstField = result.textField;
       let index = -1;
@@ -919,23 +1022,23 @@ function useTableColumns(onlineTableContext) {
         tableColumns.unshift(deleteColumns[0]);
       }
       if (tableColumns.length > 0) {
-        tableColumns[0].align = "left";
+        tableColumns[0].align = 'left';
       }
     }
     columns.value = tableColumns;
   }
   function onSelectChange(selectedRowKeys, selectedRows) {
     selectedKeys.value = selectedRowKeys;
-    onlineTableContext["selectedRows"] = toRaw(selectedRows);
-    onlineTableContext["selectedRowKeys"] = toRaw(selectedRowKeys);
+    onlineTableContext['selectedRows'] = toRaw(selectedRows);
+    onlineTableContext['selectedRowKeys'] = toRaw(selectedRowKeys);
   }
   function handleColumnHrefAndDict(columns2, fieldHrefSlotKeysMap) {
     for (let column of columns2) {
       let { customRender, hrefSlotName, fieldType } = column;
-      if (fieldType == "Date") {
+      if (fieldType == 'Date') {
         column.customRender = ({ text: text2 }) => {
           if (!text2) {
-            return "";
+            return '';
           }
           if (text2.length > 10) {
             return text2.substring(0, 10);
@@ -943,36 +1046,40 @@ function useTableColumns(onlineTableContext) {
           return text2;
         };
       } else {
-        if (!hrefSlotName && (column.scopedSlots && column.scopedSlots.customRender)) {
+        if (!hrefSlotName && column.scopedSlots && column.scopedSlots.customRender) {
           if (fieldHrefSlotKeysMap.hasOwnProperty(column.scopedSlots.customRender)) {
             hrefSlotName = column.scopedSlots.customRender;
           }
         }
         if (customRender || hrefSlotName) {
           let dictCode = customRender;
-          let replaceFlag = "_replace_text_";
+          let replaceFlag = '_replace_text_';
           column.ellipsis = true;
           column.customRender = ({ text: text2, record: record2 }) => {
             let value = text2;
             if (dictCode) {
               if (dictCode.startsWith(replaceFlag)) {
-                let textFieldName = dictCode.replace(replaceFlag, "");
+                let textFieldName = dictCode.replace(replaceFlag, '');
                 value = record2[textFieldName];
               } else {
-                value = filterMultiDictText(unref(dictOptionInfo)[dictCode], text2 + "");
+                value = filterMultiDictText(unref(dictOptionInfo)[dictCode], text2 + '');
               }
             }
             if (column.showLength) {
               if (value && value.length > column.showLength) {
-                value = value.substr(0, column.showLength) + "...";
+                value = value.substr(0, column.showLength) + '...';
               }
             }
             if (hrefSlotName) {
               let field2 = fieldHrefSlotKeysMap[hrefSlotName];
               if (field2) {
-                return h("a", {
-                  onClick: () => handleClickFieldHref(field2, record2)
-                }, value);
+                return h(
+                  'a',
+                  {
+                    onClick: () => handleClickFieldHref(field2, record2),
+                  },
+                  value
+                );
               }
             }
             return value;
@@ -981,7 +1088,7 @@ function useTableColumns(onlineTableContext) {
         if (column.scopedSlots) {
           column.ellipsis = true;
           let slots = column.scopedSlots;
-          column["slots"] = slots;
+          column['slots'] = slots;
           delete column.scopedSlots;
         }
       }
@@ -993,10 +1100,10 @@ function useTableColumns(onlineTableContext) {
     let urlPattern = /(ht|f)tp(s?)\:\/\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-\.\?\,\'\/\\\+&amp;%\$#_]*)?/;
     let compPattern = /\.vue(\?.*)?$/;
     let jsPattern = /{{([^}]+)}}/g;
-    if (typeof href === "string") {
+    if (typeof href === 'string') {
       href = href.trim().replace(/\${([^}]+)?}/g, (_s1, s2) => record[s2]);
       if (jsPattern.test(href)) {
-        href = href.replace(jsPattern, function(text, s0) {
+        href = href.replace(jsPattern, function (text, s0) {
           try {
             return eval(s0);
           } catch (e) {
@@ -1006,7 +1113,7 @@ function useTableColumns(onlineTableContext) {
         });
       }
       if (urlPattern.test(href)) {
-        window.open(href, "_blank");
+        window.open(href, '_blank');
       } else if (compPattern.test(href)) {
         openHrefCompModal(href);
       } else {
@@ -1017,38 +1124,38 @@ function useTableColumns(onlineTableContext) {
   const dialogStyle = {
     top: 0,
     left: 0,
-    height: "100%",
+    height: '100%',
     margin: 0,
-    padding: 0
+    padding: 0,
   };
   const hrefComponent = reactive({
     model: {
-      title: "",
-      okText: "\u5173\u95ED",
-      width: "100%",
+      title: '',
+      okText: '\u5173\u95ED',
+      width: '100%',
       visible: false,
       destroyOnClose: true,
       style: dialogStyle,
-      bodyStyle: { padding: "8px", height: "calc(100vh - 108px)", overflow: "auto", overflowX: "hidden" },
-      cancelButtonProps: { style: { display: "none" } }
+      bodyStyle: { padding: '8px', height: 'calc(100vh - 108px)', overflow: 'auto', overflowX: 'hidden' },
+      cancelButtonProps: { style: { display: 'none' } },
     },
     on: {
-      ok: () => hrefComponent.model.visible = false,
-      cancel: () => hrefComponent.model.visible = false
+      ok: () => (hrefComponent.model.visible = false),
+      cancel: () => (hrefComponent.model.visible = false),
     },
     is: null,
-    params: {}
+    params: {},
   });
   function openHrefCompModal(href2) {
-    let index = href2.indexOf("?");
+    let index = href2.indexOf('?');
     let path = href2;
     if (index !== -1) {
       path = href2.substring(0, index);
       let paramString = href2.substring(index + 1, href2.length);
-      let paramArray = paramString.split("&");
+      let paramArray = paramString.split('&');
       let params = {};
       paramArray.forEach((paramObject) => {
-        let paramItem = paramObject.split("=");
+        let paramItem = paramObject.split('=');
         params[paramItem[0]] = paramItem[1];
       });
       hrefComponent.params = params;
@@ -1056,57 +1163,59 @@ function useTableColumns(onlineTableContext) {
       hrefComponent.params = {};
     }
     hrefComponent.model.visible = true;
-    hrefComponent.model.title = "\u64CD\u4F5C";
-    hrefComponent.is = defineAsyncComponent(() => import(
-      /* @vite-ignore */
-      "/@/views/" + (path.startsWith("/") ? path.slice(1) : path)
-    ));
+    hrefComponent.model.title = '\u64CD\u4F5C';
+    hrefComponent.is = defineAsyncComponent(() =>
+      import(
+        /* @vite-ignore */
+        '/@/views/' + (path.startsWith('/') ? path.slice(1) : path)
+      )
+    );
   }
   const actionColumn = reactive({
-    title: "\u64CD\u4F5C",
-    dataIndex: "action",
-    slots: { customRender: "action" },
-    align: "center",
-    width: 150
+    title: '\u64CD\u4F5C',
+    dataIndex: 'action',
+    slots: { customRender: 'action' },
+    align: 'center',
+    width: 150,
   });
   function bpmStatusFilter(tableColumns) {
     let flag = false;
     for (let i = 0; i < tableColumns.length; i++) {
       let item = tableColumns[i];
       let fieldName = item.dataIndex;
-      if (fieldName.toLowerCase() == "bpm_status") {
+      if (fieldName.toLowerCase() == 'bpm_status') {
         flag = true;
         break;
       }
     }
-    onlineTableContext["hasBpmStatus"] = flag;
+    onlineTableContext['hasBpmStatus'] = flag;
     return flag;
   }
   function downloadRowFile(text2) {
     if (!text2) {
       return;
     }
-    if (text2.indexOf(",") > 0) {
-      text2 = text2.substring(0, text2.indexOf(","));
+    if (text2.indexOf(',') > 0) {
+      text2 = text2.substring(0, text2.indexOf(','));
     }
     let url = getFileAccessHttpUrl(text2);
     window.open(url);
   }
   function getImgView(text2) {
-    if (text2 && text2.indexOf(",") > 0) {
-      text2 = text2.substring(0, text2.indexOf(","));
+    if (text2 && text2.indexOf(',') > 0) {
+      text2 = text2.substring(0, text2.indexOf(','));
     }
     return getFileAccessHttpUrl(text2);
   }
   function getPcaText(code) {
     if (!code) {
-      return "";
+      return '';
     }
     return getAreaTextByCode(code);
   }
   function getFormatDate(text2) {
     if (!text2) {
-      return "";
+      return '';
     }
     let a = text2;
     if (a.length > 10) {
@@ -1115,17 +1224,17 @@ function useTableColumns(onlineTableContext) {
     return a;
   }
   watch(selectedKeys, () => {
-    onlineTableContext["selectedRowKeys"] = toRaw(selectedKeys.value);
+    onlineTableContext['selectedRowKeys'] = toRaw(selectedKeys.value);
   });
-  onlineTableContext["clearSelectedRow"] = () => {
+  onlineTableContext['clearSelectedRow'] = () => {
     selectedKeys.value = [];
-    onlineTableContext["selectedRows"] = [];
-    onlineTableContext["selectedRowKeys"] = [];
+    onlineTableContext['selectedRows'] = [];
+    onlineTableContext['selectedRowKeys'] = [];
   };
   function viewOnlineCellImage(text2) {
     if (text2) {
       let imgList = [];
-      let arr = text2.split(",");
+      let arr = text2.split(',');
       for (let str of arr) {
         if (str) {
           imgList.push(getFileAccessHttpUrl(str));
@@ -1148,7 +1257,7 @@ function useTableColumns(onlineTableContext) {
     handleColumnResult,
     onSelectChange,
     hrefComponent,
-    viewOnlineCellImage
+    viewOnlineCellImage,
   };
 }
 export { useListButton as a, useTableColumns as b, useOnlineTableContext as u };
